{
	"id": "067c252595fe19e605e194e43e6df753",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.18",
	"solcLongVersion": "0.4.18+commit.9cf6e910",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TetherToken.sol": {
				"content": "pragma solidity ^0.4.17;\r\n\r\n/**\r\n * @title SafeMath\r\n * @dev Math operations with safety checks that throw on error\r\n */\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n/**\r\n * @title Ownable\r\n * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n * functions, this simplifies the implementation of \"user permissions\".\r\n */\r\ncontract Ownable {\r\n    address public owner;\r\n\r\n    /**\r\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n      * account.\r\n      */\r\n    function Ownable() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n      * @dev Throws if called by any account other than the owner.\r\n      */\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        if (newOwner != address(0)) {\r\n            owner = newOwner;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title ERC20Basic\r\n * @dev Simpler version of ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20Basic {\r\n    uint public _totalSupply;\r\n    function totalSupply() public constant returns (uint);\r\n    function balanceOf(address who) public constant returns (uint);\r\n    function transfer(address to, uint value) public;\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://github.com/ethereum/EIPs/issues/20\r\n */\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint);\r\n    function transferFrom(address from, address to, uint value) public;\r\n    function approve(address spender, uint value) public;\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n}\r\n\r\n/**\r\n * @title Basic token\r\n * @dev Basic version of StandardToken, with no allowances.\r\n */\r\ncontract BasicToken is Ownable, ERC20Basic {\r\n    using SafeMath for uint;\r\n\r\n    mapping(address => uint) public balances;\r\n\r\n    // additional variables for use if transaction fees ever became necessary\r\n    uint public basisPointsRate = 0;\r\n    uint public maximumFee = 0;\r\n\r\n    /**\r\n    * @dev Fix for the ERC20 short address attack.\r\n    */\r\n    modifier onlyPayloadSize(uint size) {\r\n        require(!(msg.data.length < size + 4));\r\n        _;\r\n    }\r\n\r\n    /**\r\n    * @dev transfer token for a specified address\r\n    * @param _to The address to transfer to.\r\n    * @param _value The amount to be transferred.\r\n    */\r\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            Transfer(msg.sender, owner, fee);\r\n        }\r\n        Transfer(msg.sender, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Gets the balance of the specified address.\r\n    * @param _owner The address to query the the balance of.\r\n    * @return An uint representing the amount owned by the passed address.\r\n    */\r\n    function balanceOf(address _owner) public constant returns (uint balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @title Standard ERC20 token\r\n *\r\n * @dev Implementation of the basic standard token.\r\n * @dev https://github.com/ethereum/EIPs/issues/20\r\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r\n */\r\ncontract StandardToken is BasicToken, ERC20 {\r\n\r\n    mapping (address => mapping (address => uint)) public allowed;\r\n\r\n    uint public constant MAX_UINT = 2**256 - 1;\r\n\r\n    /**\r\n    * @dev Transfer tokens from one address to another\r\n    * @param _from address The address which you want to send tokens from\r\n    * @param _to address The address which you want to transfer to\r\n    * @param _value uint the amount of tokens to be transferred\r\n    */\r\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r\n        var _allowance = allowed[_from][msg.sender];\r\n\r\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\r\n        // if (_value > _allowance) throw;\r\n\r\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\r\n        if (fee > maximumFee) {\r\n            fee = maximumFee;\r\n        }\r\n        if (_allowance < MAX_UINT) {\r\n            allowed[_from][msg.sender] = _allowance.sub(_value);\r\n        }\r\n        uint sendAmount = _value.sub(fee);\r\n        balances[_from] = balances[_from].sub(_value);\r\n        balances[_to] = balances[_to].add(sendAmount);\r\n        if (fee > 0) {\r\n            balances[owner] = balances[owner].add(fee);\r\n            Transfer(_from, owner, fee);\r\n        }\r\n        Transfer(_from, _to, sendAmount);\r\n    }\r\n\r\n    /**\r\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r\n    * @param _spender The address which will spend the funds.\r\n    * @param _value The amount of tokens to be spent.\r\n    */\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n\r\n        // To change the approve amount you first have to reduce the addresses`\r\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\r\n        //  already 0 to mitigate the race condition described here:\r\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\r\n\r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n    }\r\n\r\n    /**\r\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\r\n    * @param _owner address The address which owns the funds.\r\n    * @param _spender address The address which will spend the funds.\r\n    * @return A uint specifying the amount of tokens still available for the spender.\r\n    */\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() onlyOwner whenNotPaused public {\r\n    paused = true;\r\n    Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() onlyOwner whenPaused public {\r\n    paused = false;\r\n    Unpause();\r\n  }\r\n}\r\n\r\ncontract BlackList is Ownable, BasicToken {\r\n\r\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r\n    function getBlackListStatus(address _maker) external constant returns (bool) {\r\n        return isBlackListed[_maker];\r\n    }\r\n\r\n    function getOwner() external constant returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    mapping (address => bool) public isBlackListed;\r\n    \r\n    function addBlackList (address _evilUser) public onlyOwner {\r\n        isBlackListed[_evilUser] = true;\r\n        AddedBlackList(_evilUser);\r\n    }\r\n\r\n    function removeBlackList (address _clearedUser) public onlyOwner {\r\n        isBlackListed[_clearedUser] = false;\r\n        RemovedBlackList(_clearedUser);\r\n    }\r\n\r\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r\n        require(isBlackListed[_blackListedUser]);\r\n        uint dirtyFunds = balanceOf(_blackListedUser);\r\n        balances[_blackListedUser] = 0;\r\n        _totalSupply -= dirtyFunds;\r\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\r\n    }\r\n\r\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\r\n\r\n    event AddedBlackList(address _user);\r\n\r\n    event RemovedBlackList(address _user);\r\n\r\n}\r\n\r\ncontract UpgradedStandardToken is StandardToken{\r\n    // those methods are called by the legacy contract\r\n    // and they must ensure msg.sender to be the contract address\r\n    function transferByLegacy(address from, address to, uint value) public;\r\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\r\n    function approveByLegacy(address from, address spender, uint value) public;\r\n}\r\n\r\ncontract TetherToken is Pausable, StandardToken, BlackList {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint public decimals;\r\n    address public upgradedAddress;\r\n    bool public deprecated;\r\n\r\n    //  The contract can be initialized with a number of tokens\r\n    //  All the tokens are deposited to the owner address\r\n    //\r\n    // @param _balance Initial supply of the contract\r\n    // @param _name Token Name\r\n    // @param _symbol Token symbol\r\n    // @param _decimals Token decimals\r\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r\n        _totalSupply = _initialSupply;\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        balances[owner] = _initialSupply;\r\n        deprecated = false;\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transfer(address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[msg.sender]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\r\n        } else {\r\n            return super.transfer(_to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r\n        require(!isBlackListed[_from]);\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\r\n        } else {\r\n            return super.transferFrom(_from, _to, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function balanceOf(address who) public constant returns (uint) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\r\n        } else {\r\n            return super.balanceOf(who);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r\n        if (deprecated) {\r\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\r\n        } else {\r\n            return super.approve(_spender, _value);\r\n        }\r\n    }\r\n\r\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\r\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\r\n        } else {\r\n            return super.allowance(_owner, _spender);\r\n        }\r\n    }\r\n\r\n    // deprecate current contract in favour of a new one\r\n    function deprecate(address _upgradedAddress) public onlyOwner {\r\n        deprecated = true;\r\n        upgradedAddress = _upgradedAddress;\r\n        Deprecate(_upgradedAddress);\r\n    }\r\n\r\n    // deprecate current contract if favour of a new one\r\n    function totalSupply() public constant returns (uint) {\r\n        if (deprecated) {\r\n            return StandardToken(upgradedAddress).totalSupply();\r\n        } else {\r\n            return _totalSupply;\r\n        }\r\n    }\r\n\r\n    // Issue a new amount of tokens\r\n    // these tokens are deposited into the owner address\r\n    //\r\n    // @param _amount Number of tokens to be issued\r\n    function issue(uint amount) public onlyOwner {\r\n        require(_totalSupply + amount > _totalSupply);\r\n        require(balances[owner] + amount > balances[owner]);\r\n\r\n        balances[owner] += amount;\r\n        _totalSupply += amount;\r\n        Issue(amount);\r\n    }\r\n\r\n    // Redeem tokens.\r\n    // These tokens are withdrawn from the owner address\r\n    // if the balance must be enough to cover the redeem\r\n    // or the call will fail.\r\n    // @param _amount Number of tokens to be issued\r\n    function redeem(uint amount) public onlyOwner {\r\n        require(_totalSupply >= amount);\r\n        require(balances[owner] >= amount);\r\n\r\n        _totalSupply -= amount;\r\n        balances[owner] -= amount;\r\n        Redeem(amount);\r\n    }\r\n\r\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\r\n        require(newBasisPoints < 20);\r\n        require(newMaxFee < 50);\r\n\r\n        basisPointsRate = newBasisPoints;\r\n        maximumFee = newMaxFee.mul(10**decimals);\r\n\r\n        Params(basisPointsRate, maximumFee);\r\n    }\r\n\r\n    // Called when new token are issued\r\n    event Issue(uint amount);\r\n\r\n    // Called when tokens are redeemed\r\n    event Redeem(uint amount);\r\n\r\n    // Called when contract is deprecated\r\n    event Deprecate(address newAddress);\r\n\r\n    // Called if contract ever adds fees\r\n    event Params(uint feeBasisPoints, uint maxFee);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/TetherToken.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Basic token\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"BlackList": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r"
							}
						}
					}
				},
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic\r"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Ownable\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/TetherToken.sol\":1138:1890  contract Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/TetherToken.sol\":1322:1385  function Ownable() public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/TetherToken.sol\":1367:1377  msg.sender */\n  caller\n    /* \"contracts/TetherToken.sol\":1359:1364  owner */\n  0x0\n  dup1\n    /* \"contracts/TetherToken.sol\":1359:1377  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":1138:1890  contract Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TetherToken.sol\":1138:1890  contract Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/TetherToken.sol\":1162:1182  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/TetherToken.sol\":1162:1182  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_9:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/TetherToken.sol\":1831:1832  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":1811:1833  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1811:1819  newOwner */\n      dup2\n        /* \"contracts/TetherToken.sol\":1811:1833  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TetherToken.sol\":1807:1878  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/TetherToken.sol\":1858:1866  newOwner */\n      dup1\n        /* \"contracts/TetherToken.sol\":1850:1855  owner */\n      0x0\n      dup1\n        /* \"contracts/TetherToken.sol\":1850:1866  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":1807:1878  if (newOwner != address(0)) {\r... */\n    tag_13:\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582012703fd794c4be533adc6146962493609986f95b57e3082fd4917cd7f81335d00029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102058061005e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063f2fde38b146100a6575b600080fd5b341561005c57600080fd5b6100646100df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100b157600080fd5b6100dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610104565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a7230582012703fd794c4be533adc6146962493609986f95b57e3082fd4917cd7f81335d00029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x205 DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SLT PUSH17 0x3FD794C4BE533ADC6146962493609986F9 JUMPDEST JUMPI 0xe3 ADDMOD 0x2f 0xd4 SWAP2 PUSH29 0xD7F81335D0002900000000000000000000000000000000000000000000 ",
							"sourceMap": "1138:752:0:-;;;1322:63;;;;;;;;1367:10;1359:5;;:18;;;;;;;;;;;;;;;;;;1138:752;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610051578063f2fde38b146100a6575b600080fd5b341561005c57600080fd5b6100646100df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100b157600080fd5b6100dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610104565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a7230582012703fd794c4be533adc6146962493609986f95b57e3082fd4917cd7f81335d00029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x104 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SLT PUSH17 0x3FD794C4BE533ADC6146962493609986F9 JUMPDEST JUMPI 0xe3 ADDMOD 0x2f 0xd4 SWAP2 PUSH29 0xD7F81335D0002900000000000000000000000000000000000000000000 ",
							"sourceMap": "1138:752:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1162:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;1162:20;;;;;;;;;;;;;:::o;1734:151::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;1831:1;1811:22;;:8;:22;;;;1807:71;;;1858:8;1850:5;;:16;;;;;;;;;;;;;;;;;;1807:71;1734:151;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "103400",
								"executionCost": "20414",
								"totalCost": "123814"
							},
							"external": {
								"owner()": "434",
								"transferOwnership(address)": "20776"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1138,
									"end": 1890,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "MSTORE"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "CALLVALUE"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "ISZERO"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "JUMPI"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "DUP1"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "REVERT"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 1322,
									"end": 1385,
									"name": "JUMPDEST"
								},
								{
									"begin": 1367,
									"end": 1377,
									"name": "CALLER"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "EXP"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP2"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SLOAD"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP2"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "MUL"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "NOT"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "AND"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SWAP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP4"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "AND"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "MUL"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "OR"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SWAP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SSTORE"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "POP"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "DUP1"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "CODECOPY"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1890,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582012703fd794c4be533adc6146962493609986f95b57e3082fd4917cd7f81335d00029",
									".code": [
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "MSTORE"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "LT"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "JUMPI"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "SWAP1"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "DIV"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "DUP1"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "EQ"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "JUMPI"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "DUP1"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "EQ"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "JUMPI"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "JUMPDEST"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "DUP1"
										},
										{
											"begin": 1138,
											"end": 1890,
											"name": "REVERT"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "CALLVALUE"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "ISZERO"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPI"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "REVERT"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP3"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MSTORE"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "ADD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SUB"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "RETURN"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "CALLVALUE"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "ISZERO"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPI"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "REVERT"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "AND"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "ADD"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP2"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "STOP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "EXP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DIV"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "AND"
										},
										{
											"begin": 1811,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "AND"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "EQ"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "ISZERO"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "ISZERO"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "JUMPI"
										},
										{
											"begin": 1858,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SLOAD"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "OR"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SSTORE"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}}},\"title\":\"Ownable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TetherToken.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TetherToken.sol\":{\"keccak256\":\"0x7c5dbf50adea1dc99fd5726975a99a7d50b232a2f476b34e41f2123c11686419\",\"urls\":[\"bzzr://cc4c9e576841fd9ddac4814961e80ecb800b5b18c90cc38fb6fdf6fac37e444f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Pausable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state\r"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state\r"
							}
						},
						"title": "Pausable\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/TetherToken.sol\":7470:8253  contract Pausable is Ownable {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/TetherToken.sol\":7565:7570  false */\n  0x0\n    /* \"contracts/TetherToken.sol\":7544:7570  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":1367:1377  msg.sender */\n  caller\n    /* \"contracts/TetherToken.sol\":1359:1364  owner */\n  0x0\n  dup1\n    /* \"contracts/TetherToken.sol\":1359:1377  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":7470:8253  contract Pausable is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TetherToken.sol\":7470:8253  contract Pausable is Ownable {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3f4ba83a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/TetherToken.sol\":8160:8250  function unpause() onlyOwner whenPaused public {\r... */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/TetherToken.sol\":7544:7570  bool public paused = false */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":7985:8073  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contracts/TetherToken.sol\":1162:1182  address public owner */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contracts/TetherToken.sol\":8160:8250  function unpause() onlyOwner whenPaused public {\r... */\n    tag_9:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/TetherToken.sol\":7880:7886  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":7872:7887  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/TetherToken.sol\":8223:8228  false */\n      0x0\n        /* \"contracts/TetherToken.sol\":8214:8220  paused */\n      dup1\n      0x14\n        /* \"contracts/TetherToken.sol\":8214:8228  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":8235:8244  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":8160:8250  function unpause() onlyOwner whenPaused public {\r... */\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":7544:7570  bool public paused = false */\n    tag_12:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":7985:8073  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_15:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/TetherToken.sol\":7720:7726  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":7719:7726  !paused */\n      iszero\n        /* \"contracts/TetherToken.sol\":7711:7727  require(!paused) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/TetherToken.sol\":8049:8053  true */\n      0x1\n        /* \"contracts/TetherToken.sol\":8040:8046  paused */\n      0x0\n      0x14\n        /* \"contracts/TetherToken.sol\":8040:8053  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":8060:8067  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":7985:8073  function pause() onlyOwner whenNotPaused public {\r... */\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":1162:1182  address public owner */\n    tag_18:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_21:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/TetherToken.sol\":1831:1832  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":1811:1833  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1811:1819  newOwner */\n      dup2\n        /* \"contracts/TetherToken.sol\":1811:1833  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TetherToken.sol\":1807:1878  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/TetherToken.sol\":1858:1866  newOwner */\n      dup1\n        /* \"contracts/TetherToken.sol\":1850:1855  owner */\n      0x0\n      dup1\n        /* \"contracts/TetherToken.sol\":1850:1866  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":1807:1878  if (newOwner != address(0)) {\r... */\n    tag_35:\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c82a38347577fbe070d93cf233a1eb50be5e57f7dc6dbf2d1579e47f7bb9372b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061040e8061006d6000396000f30060606040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100725780635c975abb146100875780638456cb59146100b45780638da5cb5b146100c9578063f2fde38b1461011e575b600080fd5b341561007d57600080fd5b610085610157565b005b341561009257600080fd5b61009a610215565b604051808215151515815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610228565b005b34156100d457600080fd5b6100dc6102e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012957600080fd5b610155600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061030d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101b257600080fd5b600060149054906101000a900460ff1615156101cd57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561028357600080fd5b600060149054906101000a900460ff1615151561029f57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103df57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820c82a38347577fbe070d93cf233a1eb50be5e57f7dc6dbf2d1579e47f7bb9372b0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x40E DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH2 0x157 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7 PUSH2 0x228 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3DF JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc8 0x2a CODESIZE CALLVALUE PUSH22 0x77FBE070D93CF233A1EB50BE5E57F7DC6DBF2D1579E4 PUSH32 0x7BB9372B00290000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "7470:783:0:-;;;7565:5;7544:26;;;;;;;;;;;;;;;;;;;;1367:10;1359:5;;:18;;;;;;;;;;;;;;;;;;7470:783;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100725780635c975abb146100875780638456cb59146100b45780638da5cb5b146100c9578063f2fde38b1461011e575b600080fd5b341561007d57600080fd5b610085610157565b005b341561009257600080fd5b61009a610215565b604051808215151515815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610228565b005b34156100d457600080fd5b6100dc6102e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012957600080fd5b610155600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061030d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101b257600080fd5b600060149054906101000a900460ff1615156101cd57600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561028357600080fd5b600060149054906101000a900460ff1615151561029f57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561036857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103df57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820c82a38347577fbe070d93cf233a1eb50be5e57f7dc6dbf2d1579e47f7bb9372b0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 PUSH2 0x157 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7 PUSH2 0x228 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x2E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3DF JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc8 0x2a CODESIZE CALLVALUE PUSH22 0x77FBE070D93CF233A1EB50BE5E57F7DC6DBF2D1579E4 PUSH32 0x7BB9372B00290000000000000000000000000000000000000000000000000000 ",
							"sourceMap": "7470:783:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8160:90;;;;;;;;;;;;;;7544:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7985:88;;;;;;;;;;;;;;1162:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;8160:90;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;7880:6;;;;;;;;;;;7872:15;;;;;;;;8223:5;8214:6;;:14;;;;;;;;;;;;;;;;;;8235:9;;;;;;;;;;8160:90::o;7544:26::-;;;;;;;;;;;;;:::o;7985:88::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;7720:6;;;;;;;;;;;7719:7;7711:16;;;;;;;;8049:4;8040:6;;:13;;;;;;;;;;;;;;;;;;8060:7;;;;;;;;;;7985:88::o;1162:20::-;;;;;;;;;;;;;:::o;1734:151::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;1831:1;1811:22;;:8;:22;;;;1807:71;;;1858:8;1850:5;;:16;;;;;;;;;;;;;;;;;;1807:71;1734:151;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "207600",
								"executionCost": "40810",
								"totalCost": "248410"
							},
							"external": {
								"owner()": "500",
								"pause()": "21854",
								"paused()": "506",
								"transferOwnership(address)": "20842",
								"unpause()": "21807"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7470,
									"end": 8253,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "MSTORE"
								},
								{
									"begin": 7565,
									"end": 7570,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP1"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "EXP"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP2"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SLOAD"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP2"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "MUL"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "NOT"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "AND"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SWAP1"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP4"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "ISZERO"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "ISZERO"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "MUL"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "OR"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SWAP1"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SSTORE"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "POP"
								},
								{
									"begin": 1367,
									"end": 1377,
									"name": "CALLER"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "EXP"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP2"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SLOAD"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP2"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "MUL"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "NOT"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "AND"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SWAP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP4"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "AND"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "MUL"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "OR"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SWAP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SSTORE"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "POP"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "DUP1"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "CODECOPY"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7470,
									"end": 8253,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c82a38347577fbe070d93cf233a1eb50be5e57f7dc6dbf2d1579e47f7bb9372b0029",
									".code": [
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "MSTORE"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "LT"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "JUMPI"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "SWAP1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "DIV"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "AND"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "EQ"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "JUMPI"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "EQ"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "JUMPI"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "EQ"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "JUMPI"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "EQ"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "JUMPI"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "EQ"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "JUMPI"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "JUMPDEST"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "DUP1"
										},
										{
											"begin": 7470,
											"end": 8253,
											"name": "REVERT"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "CALLVALUE"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "ISZERO"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPI"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "DUP1"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "REVERT"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMP"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "STOP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "CALLVALUE"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPI"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "REVERT"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "MLOAD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP3"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "MSTORE"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ADD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "POP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "POP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "MLOAD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SUB"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "RETURN"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "CALLVALUE"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "ISZERO"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPI"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "DUP1"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "REVERT"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMP"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "STOP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "CALLVALUE"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "ISZERO"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPI"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "REVERT"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP3"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MSTORE"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "ADD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SUB"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "RETURN"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "CALLVALUE"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "ISZERO"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPI"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "REVERT"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "AND"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "ADD"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP2"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "STOP"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SWAP1"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SLOAD"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SWAP1"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "EXP"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SWAP1"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DIV"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "AND"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "ISZERO"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "ISZERO"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "JUMPI"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "DUP1"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "REVERT"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "JUMPDEST"
										},
										{
											"begin": 8223,
											"end": 8228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8220,
											"name": "DUP1"
										},
										{
											"begin": 8214,
											"end": 8220,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "EXP"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "DUP2"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SLOAD"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "DUP2"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "MUL"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "NOT"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "AND"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SWAP1"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "DUP4"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "ISZERO"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "ISZERO"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "MUL"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "OR"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SWAP1"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SSTORE"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "MLOAD"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "MLOAD"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "SWAP2"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "SUB"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "LOG1"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SLOAD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "EXP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DIV"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "AND"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SLOAD"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "EXP"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DIV"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "AND"
										},
										{
											"begin": 7719,
											"end": 7726,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPI"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "DUP1"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "REVERT"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPDEST"
										},
										{
											"begin": 8049,
											"end": 8053,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "EXP"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "DUP2"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SLOAD"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "DUP2"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "MUL"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "NOT"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "AND"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SWAP1"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "DUP4"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "ISZERO"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "ISZERO"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "MUL"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "OR"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SWAP1"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SSTORE"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "POP"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "MLOAD"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "MLOAD"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP1"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "SWAP2"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "SUB"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "SWAP1"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "LOG1"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "EXP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DIV"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "AND"
										},
										{
											"begin": 1811,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "AND"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "EQ"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "ISZERO"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "ISZERO"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "JUMPI"
										},
										{
											"begin": 1858,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SLOAD"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "OR"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SSTORE"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"}},\"title\":\"Pausable\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TetherToken.sol\":\"Pausable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TetherToken.sol\":{\"keccak256\":\"0x7c5dbf50adea1dc99fd5726975a99a7d50b232a2f476b34e41f2123c11686419\",\"urls\":[\"bzzr://cc4c9e576841fd9ddac4814961e80ecb800b5b18c90cc38fb6fdf6fac37e444f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath\r"
					},
					"evm": {
						"assembly": "    /* \"contracts/TetherToken.sol\":122:939  library SafeMath {\r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TetherToken.sol\":122:939  library SafeMath {\r... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820d4359ff91b60f611d4aef9aeb782a48f7fe56b2c2f39972006d3667117ccc83f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820d4359ff91b60f611d4aef9aeb782a48f7fe56b2c2f39972006d3667117ccc83f0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd4 CALLDATALOAD SWAP16 0xf9 0x1b PUSH1 0xF6 GT 0xd4 0xae 0xf9 0xae 0xb7 DUP3 LOG4 DUP16 PUSH32 0xE56B2C2F39972006D3667117CCC83F0029000000000000000000000000000000 ",
							"sourceMap": "122:817:0:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a72305820d4359ff91b60f611d4aef9aeb782a48f7fe56b2c2f39972006d3667117ccc83f0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd4 CALLDATALOAD SWAP16 0xf9 0x1b PUSH1 0xF6 GT 0xd4 0xae 0xf9 0xae 0xb7 DUP3 LOG4 DUP16 PUSH32 0xE56B2C2F39972006D3667117CCC83F0029000000000000000000000000000000 ",
							"sourceMap": "122:817:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "MSTORE"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "CALLVALUE"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "ISZERO"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "JUMPI"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "DUP1"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "REVERT"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "JUMPDEST"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "DUP1"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "CODECOPY"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 122,
									"end": 939,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d4359ff91b60f611d4aef9aeb782a48f7fe56b2c2f39972006d3667117ccc83f0029",
									".code": [
										{
											"begin": 122,
											"end": 939,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 122,
											"end": 939,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 122,
											"end": 939,
											"name": "MSTORE"
										},
										{
											"begin": 122,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 122,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 122,
											"end": 939,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TetherToken.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TetherToken.sol\":{\"keccak256\":\"0x7c5dbf50adea1dc99fd5726975a99a7d50b232a2f476b34e41f2123c11686419\",\"urls\":[\"bzzr://cc4c9e576841fd9ddac4814961e80ecb800b5b18c90cc38fb6fdf6fac37e444f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint the amount of tokens to be transferred\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						},
						"title": "Standard ERC20 token\r "
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"TetherToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_upgradedAddress",
									"type": "address"
								}
							],
							"name": "deprecate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deprecated",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "upgradedAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newBasisPoints",
									"type": "uint256"
								},
								{
									"name": "newMaxFee",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issue",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"name": "_name",
									"type": "string"
								},
								{
									"name": "_symbol",
									"type": "string"
								},
								{
									"name": "_decimals",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Issue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "Deprecate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "feeBasisPoints",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "maxFee",
									"type": "uint256"
								}
							],
							"name": "Params",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state\r"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state\r"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/TetherToken.sol\":9971:14888  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n  mstore(0x40, 0x60)\n    /* \"contracts/TetherToken.sol\":7565:7570  false */\n  0x0\n    /* \"contracts/TetherToken.sol\":7544:7570  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":3109:3110  0 */\n  0x0\n    /* \"contracts/TetherToken.sol\":3079:3110  uint public basisPointsRate = 0 */\n  0x3\n  sstore\n    /* \"contracts/TetherToken.sol\":3142:3143  0 */\n  0x0\n    /* \"contracts/TetherToken.sol\":3117:3143  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/TetherToken.sol\":10481:10777  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"contracts/TetherToken.sol\":1367:1377  msg.sender */\n  caller\n    /* \"contracts/TetherToken.sol\":1359:1364  owner */\n  0x0\n  dup1\n    /* \"contracts/TetherToken.sol\":1359:1377  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":10602:10616  _initialSupply */\n  dup4\n    /* \"contracts/TetherToken.sol\":10587:10599  _totalSupply */\n  0x1\n    /* \"contracts/TetherToken.sol\":10587:10616  _totalSupply = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":10634:10639  _name */\n  dup3\n    /* \"contracts/TetherToken.sol\":10627:10631  name */\n  0x7\n    /* \"contracts/TetherToken.sol\":10627:10639  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"contracts/TetherToken.sol\":10659:10666  _symbol */\n  dup2\n    /* \"contracts/TetherToken.sol\":10650:10656  symbol */\n  0x8\n    /* \"contracts/TetherToken.sol\":10650:10666  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"contracts/TetherToken.sol\":10688:10697  _decimals */\n  dup1\n    /* \"contracts/TetherToken.sol\":10677:10685  decimals */\n  0x9\n    /* \"contracts/TetherToken.sol\":10677:10697  decimals = _decimals */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":10726:10740  _initialSupply */\n  dup4\n    /* \"contracts/TetherToken.sol\":10708:10716  balances */\n  0x2\n    /* \"contracts/TetherToken.sol\":10708:10723  balances[owner] */\n  0x0\n    /* \"contracts/TetherToken.sol\":10717:10722  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TetherToken.sol\":10708:10723  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/TetherToken.sol\":10708:10740  balances[owner] = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":10764:10769  false */\n  0x0\n    /* \"contracts/TetherToken.sol\":10751:10761  deprecated */\n  0xa\n  0x14\n    /* \"contracts/TetherToken.sol\":10751:10769  deprecated = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TetherToken.sol\":10481:10777  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/TetherToken.sol\":9971:14888  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TetherToken.sol\":9971:14888  contract TetherToken is Pausable, StandardToken, BlackList {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/TetherToken.sol\":10039:10057  string public name */\n    tag_2:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_38:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":12795:12976  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n    tag_3:\n      jumpi(tag_41, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_41:\n      tag_42\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_43)\n    tag_42:\n      stop\n        /* \"contracts/TetherToken.sol\":12049:12351  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_4:\n      jumpi(tag_44, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_44:\n      tag_45\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_46)\n    tag_45:\n      stop\n        /* \"contracts/TetherToken.sol\":10155:10177  bool public deprecated */\n    tag_5:\n      jumpi(tag_47, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_47:\n      tag_48\n      jump(tag_49)\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":8714:8859  function addBlackList (address _evilUser) public onlyOwner {\r... */\n    tag_6:\n      jumpi(tag_50, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_50:\n      tag_51\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_52)\n    tag_51:\n      stop\n        /* \"contracts/TetherToken.sol\":13042:13260  function totalSupply() public constant returns (uint) {\r... */\n    tag_7:\n      jumpi(tag_53, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_53:\n      tag_54\n      jump(tag_55)\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":11273:11635  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n    tag_8:\n      jumpi(tag_56, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_56:\n      tag_57\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_58)\n    tag_57:\n      stop\n        /* \"contracts/TetherToken.sol\":10118:10148  address public upgradedAddress */\n    tag_9:\n      jumpi(tag_59, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_59:\n      tag_60\n      jump(tag_61)\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":2951:2991  mapping(address => uint) public balances */\n    tag_10:\n      jumpi(tag_62, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_62:\n      tag_63\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_64)\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":10091:10111  uint public decimals */\n    tag_11:\n      jumpi(tag_65, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_65:\n      tag_66\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":3117:3143  uint public maximumFee = 0 */\n    tag_12:\n      jumpi(tag_68, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_68:\n      tag_69\n      jump(tag_70)\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":2053:2077  uint public _totalSupply */\n    tag_13:\n      jumpi(tag_71, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_71:\n      tag_72\n      jump(tag_73)\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":8160:8250  function unpause() onlyOwner whenPaused public {\r... */\n    tag_14:\n      jumpi(tag_74, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_74:\n      tag_75\n      jump(tag_76)\n    tag_75:\n      stop\n        /* \"contracts/TetherToken.sol\":8428:8552  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n    tag_15:\n      jumpi(tag_77, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_77:\n      tag_78\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_79)\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":4741:4802  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      jumpi(tag_80, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_80:\n      tag_81\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_82)\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":7544:7570  bool public paused = false */\n    tag_17:\n      jumpi(tag_83, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_83:\n      tag_84\n      jump(tag_85)\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":11720:11964  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_18:\n      jumpi(tag_86, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_86:\n      tag_87\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_88)\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":7985:8073  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_19:\n      jumpi(tag_89, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_89:\n      tag_90\n      jump(tag_91)\n    tag_90:\n      stop\n        /* \"contracts/TetherToken.sol\":8560:8647  function getOwner() external constant returns (address) {\r... */\n    tag_20:\n      jumpi(tag_92, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_92:\n      tag_93\n      jump(tag_94)\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":1162:1182  address public owner */\n    tag_21:\n      jumpi(tag_95, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_95:\n      tag_96\n      jump(tag_97)\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":10064:10084  string public symbol */\n    tag_22:\n      jumpi(tag_98, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_98:\n      tag_99\n      jump(tag_100)\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_101:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_101)\n    tag_102:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":10862:11188  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n    tag_23:\n      jumpi(tag_105, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_105:\n      tag_106\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_107)\n    tag_106:\n      stop\n        /* \"contracts/TetherToken.sol\":14166:14553  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n    tag_24:\n      jumpi(tag_108, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_108:\n      tag_109\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_110)\n    tag_109:\n      stop\n        /* \"contracts/TetherToken.sol\":13424:13690  function issue(uint amount) public onlyOwner {\r... */\n    tag_25:\n      jumpi(tag_111, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_111:\n      tag_112\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_113)\n    tag_112:\n      stop\n        /* \"contracts/TetherToken.sol\":13921:14158  function redeem(uint amount) public onlyOwner {\r... */\n    tag_26:\n      jumpi(tag_114, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_114:\n      tag_115\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_116)\n    tag_115:\n      stop\n        /* \"contracts/TetherToken.sol\":12436:12729  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_27:\n      jumpi(tag_117, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_117:\n      tag_118\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_119)\n    tag_118:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":3079:3110  uint public basisPointsRate = 0 */\n    tag_28:\n      jumpi(tag_120, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_120:\n      tag_121\n      jump(tag_122)\n    tag_121:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":8655:8701  mapping (address => bool) public isBlackListed */\n    tag_29:\n      jumpi(tag_123, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_123:\n      tag_124\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_125)\n    tag_124:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":8867:9027  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n    tag_30:\n      jumpi(tag_126, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_126:\n      tag_127\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_128)\n    tag_127:\n      stop\n        /* \"contracts/TetherToken.sol\":4811:4853  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_31:\n      jumpi(tag_129, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_129:\n      tag_130\n      jump(tag_131)\n    tag_130:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_32:\n      jumpi(tag_132, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_132:\n      tag_133\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_134)\n    tag_133:\n      stop\n        /* \"contracts/TetherToken.sol\":9035:9359  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n    tag_33:\n      jumpi(tag_135, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_135:\n      tag_136\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_137)\n    tag_136:\n      stop\n        /* \"contracts/TetherToken.sol\":10039:10057  string public name */\n    tag_36:\n      0x7\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":12795:12976  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n    tag_43:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"contracts/TetherToken.sol\":12881:12885  true */\n      0x1\n        /* \"contracts/TetherToken.sol\":12868:12878  deprecated */\n      0xa\n      0x14\n        /* \"contracts/TetherToken.sol\":12868:12885  deprecated = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":12914:12930  _upgradedAddress */\n      dup1\n        /* \"contracts/TetherToken.sol\":12896:12911  upgradedAddress */\n      0xa\n      0x0\n        /* \"contracts/TetherToken.sol\":12896:12930  upgradedAddress = _upgradedAddress */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":12941:12968  Deprecate(_upgradedAddress) */\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n        /* \"contracts/TetherToken.sol\":12951:12967  _upgradedAddress */\n      dup2\n        /* \"contracts/TetherToken.sol\":12941:12968  Deprecate(_upgradedAddress) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":12795:12976  function deprecate(address _upgradedAddress) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":12049:12351  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_46:\n        /* \"contracts/TetherToken.sol\":12120:12126  2 * 32 */\n      0x40\n        /* \"contracts/TetherToken.sol\":3303:3304  4 */\n      0x4\n        /* \"contracts/TetherToken.sol\":3296:3300  size */\n      dup2\n        /* \"contracts/TetherToken.sol\":3296:3304  size + 4 */\n      add\n        /* \"contracts/TetherToken.sol\":3278:3286  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/TetherToken.sol\":3278:3293  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":3278:3304  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/TetherToken.sol\":3276:3305  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/TetherToken.sol\":3268:3306  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/TetherToken.sol\":12143:12153  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":12139:12344  if (deprecated) {\r... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/TetherToken.sol\":12199:12214  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":12177:12231  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaee92d33\n        /* \"contracts/TetherToken.sol\":12232:12242  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":12244:12252  _spender */\n      dup6\n        /* \"contracts/TetherToken.sol\":12254:12260  _value */\n      dup6\n        /* \"contracts/TetherToken.sol\":12177:12261  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_148\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_148:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n      pop\n      pop\n      pop\n        /* \"contracts/TetherToken.sol\":12170:12261  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_146)\n        /* \"contracts/TetherToken.sol\":12139:12344  if (deprecated) {\r... */\n    tag_147:\n        /* \"contracts/TetherToken.sol\":12301:12332  super.approve(_spender, _value) */\n      tag_151\n        /* \"contracts/TetherToken.sol\":12315:12323  _spender */\n      dup4\n        /* \"contracts/TetherToken.sol\":12325:12331  _value */\n      dup4\n        /* \"contracts/TetherToken.sol\":12301:12314  super.approve */\n      tag_152\n        /* \"contracts/TetherToken.sol\":12301:12332  super.approve(_spender, _value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/TetherToken.sol\":3317:3318  _ */\n    tag_146:\n        /* \"contracts/TetherToken.sol\":12049:12351  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":10155:10177  bool public deprecated */\n    tag_49:\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":8714:8859  function addBlackList (address _evilUser) public onlyOwner {\r... */\n    tag_52:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n        /* \"contracts/TetherToken.sol\":8811:8815  true */\n      0x1\n        /* \"contracts/TetherToken.sol\":8784:8797  isBlackListed */\n      0x6\n        /* \"contracts/TetherToken.sol\":8784:8808  isBlackListed[_evilUser] */\n      0x0\n        /* \"contracts/TetherToken.sol\":8798:8807  _evilUser */\n      dup4\n        /* \"contracts/TetherToken.sol\":8784:8808  isBlackListed[_evilUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/TetherToken.sol\":8784:8815  isBlackListed[_evilUser] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":8826:8851  AddedBlackList(_evilUser) */\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n        /* \"contracts/TetherToken.sol\":8841:8850  _evilUser */\n      dup2\n        /* \"contracts/TetherToken.sol\":8826:8851  AddedBlackList(_evilUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":8714:8859  function addBlackList (address _evilUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":13042:13260  function totalSupply() public constant returns (uint) {\r... */\n    tag_55:\n        /* \"contracts/TetherToken.sol\":13090:13094  uint */\n      0x0\n        /* \"contracts/TetherToken.sol\":13111:13121  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":13107:13253  if (deprecated) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/TetherToken.sol\":13159:13174  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":13145:13187  StandardToken(upgradedAddress).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/TetherToken.sol\":13145:13189  StandardToken(upgradedAddress).totalSupply() */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":13138:13189  return StandardToken(upgradedAddress).totalSupply() */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"contracts/TetherToken.sol\":13107:13253  if (deprecated) {\r... */\n    tag_157:\n        /* \"contracts/TetherToken.sol\":13229:13241  _totalSupply */\n      sload(0x1)\n        /* \"contracts/TetherToken.sol\":13222:13241  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":13042:13260  function totalSupply() public constant returns (uint) {\r... */\n    tag_156:\n      swap1\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":11273:11635  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n    tag_58:\n        /* \"contracts/TetherToken.sol\":7720:7726  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":7719:7726  !paused */\n      iszero\n        /* \"contracts/TetherToken.sol\":7711:7727  require(!paused) */\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n        /* \"contracts/TetherToken.sol\":11377:11390  isBlackListed */\n      0x6\n        /* \"contracts/TetherToken.sol\":11377:11397  isBlackListed[_from] */\n      0x0\n        /* \"contracts/TetherToken.sol\":11391:11396  _from */\n      dup5\n        /* \"contracts/TetherToken.sol\":11377:11397  isBlackListed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":11376:11397  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/TetherToken.sol\":11368:11398  require(!isBlackListed[_from]) */\n      iszero\n      iszero\n      tag_164\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_164:\n        /* \"contracts/TetherToken.sol\":11413:11423  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":11409:11628  if (deprecated) {\r... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/TetherToken.sol\":11469:11484  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":11447:11506  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8b477adb\n        /* \"contracts/TetherToken.sol\":11507:11517  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":11519:11524  _from */\n      dup6\n        /* \"contracts/TetherToken.sol\":11526:11529  _to */\n      dup6\n        /* \"contracts/TetherToken.sol\":11531:11537  _value */\n      dup6\n        /* \"contracts/TetherToken.sol\":11447:11538  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_167:\n      pop\n      pop\n      pop\n        /* \"contracts/TetherToken.sol\":11440:11538  return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      jump(tag_163)\n        /* \"contracts/TetherToken.sol\":11409:11628  if (deprecated) {\r... */\n    tag_165:\n        /* \"contracts/TetherToken.sol\":11578:11616  super.transferFrom(_from, _to, _value) */\n      tag_169\n        /* \"contracts/TetherToken.sol\":11597:11602  _from */\n      dup4\n        /* \"contracts/TetherToken.sol\":11604:11607  _to */\n      dup4\n        /* \"contracts/TetherToken.sol\":11609:11615  _value */\n      dup4\n        /* \"contracts/TetherToken.sol\":11578:11596  super.transferFrom */\n      tag_170\n        /* \"contracts/TetherToken.sol\":11578:11616  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/TetherToken.sol\":7734:7735  _ */\n    tag_163:\n        /* \"contracts/TetherToken.sol\":11273:11635  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":10118:10148  address public upgradedAddress */\n    tag_61:\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":2951:2991  mapping(address => uint) public balances */\n    tag_64:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":10091:10111  uint public decimals */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":3117:3143  uint public maximumFee = 0 */\n    tag_70:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":2053:2077  uint public _totalSupply */\n    tag_73:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":8160:8250  function unpause() onlyOwner whenPaused public {\r... */\n    tag_76:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"contracts/TetherToken.sol\":7880:7886  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":7872:7887  require(paused) */\n      iszero\n      iszero\n      tag_174\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_174:\n        /* \"contracts/TetherToken.sol\":8223:8228  false */\n      0x0\n        /* \"contracts/TetherToken.sol\":8214:8220  paused */\n      dup1\n      0x14\n        /* \"contracts/TetherToken.sol\":8214:8228  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":8235:8244  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":8160:8250  function unpause() onlyOwner whenPaused public {\r... */\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":8428:8552  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n    tag_79:\n        /* \"contracts/TetherToken.sol\":8499:8503  bool */\n      0x0\n        /* \"contracts/TetherToken.sol\":8523:8536  isBlackListed */\n      0x6\n        /* \"contracts/TetherToken.sol\":8523:8544  isBlackListed[_maker] */\n      0x0\n        /* \"contracts/TetherToken.sol\":8537:8543  _maker */\n      dup4\n        /* \"contracts/TetherToken.sol\":8523:8544  isBlackListed[_maker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":8516:8544  return isBlackListed[_maker] */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":8428:8552  function getBlackListStatus(address _maker) external constant returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":4741:4802  mapping (address => mapping (address => uint)) public allowed */\n    tag_82:\n      mstore(0x20, 0x5)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":7544:7570  bool public paused = false */\n    tag_85:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":11720:11964  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_88:\n        /* \"contracts/TetherToken.sol\":11777:11781  uint */\n      0x0\n        /* \"contracts/TetherToken.sol\":11798:11808  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":11794:11957  if (deprecated) {\r... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/TetherToken.sol\":11854:11869  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":11832:11880  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/TetherToken.sol\":11881:11884  who */\n      dup4\n        /* \"contracts/TetherToken.sol\":11832:11885  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_179:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_180\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_180:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":11825:11885  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      swap1\n      pop\n      jump(tag_177)\n        /* \"contracts/TetherToken.sol\":11794:11957  if (deprecated) {\r... */\n    tag_178:\n        /* \"contracts/TetherToken.sol\":11925:11945  super.balanceOf(who) */\n      tag_182\n        /* \"contracts/TetherToken.sol\":11941:11944  who */\n      dup3\n        /* \"contracts/TetherToken.sol\":11925:11940  super.balanceOf */\n      tag_183\n        /* \"contracts/TetherToken.sol\":11925:11945  super.balanceOf(who) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/TetherToken.sol\":11918:11945  return super.balanceOf(who) */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":11720:11964  function balanceOf(address who) public constant returns (uint) {\r... */\n    tag_177:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":7985:8073  function pause() onlyOwner whenNotPaused public {\r... */\n    tag_91:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_185\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/TetherToken.sol\":7720:7726  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":7719:7726  !paused */\n      iszero\n        /* \"contracts/TetherToken.sol\":7711:7727  require(!paused) */\n      iszero\n      iszero\n      tag_187\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_187:\n        /* \"contracts/TetherToken.sol\":8049:8053  true */\n      0x1\n        /* \"contracts/TetherToken.sol\":8040:8046  paused */\n      0x0\n      0x14\n        /* \"contracts/TetherToken.sol\":8040:8053  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":8060:8067  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":7985:8073  function pause() onlyOwner whenNotPaused public {\r... */\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":8560:8647  function getOwner() external constant returns (address) {\r... */\n    tag_94:\n        /* \"contracts/TetherToken.sol\":8607:8614  address */\n      0x0\n        /* \"contracts/TetherToken.sol\":8634:8639  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":8627:8639  return owner */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":8560:8647  function getOwner() external constant returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":1162:1182  address public owner */\n    tag_97:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":10064:10084  string public symbol */\n    tag_100:\n      0x8\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":10862:11188  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n    tag_107:\n        /* \"contracts/TetherToken.sol\":7720:7726  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":7719:7726  !paused */\n      iszero\n        /* \"contracts/TetherToken.sol\":7711:7727  require(!paused) */\n      iszero\n      iszero\n      tag_194\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_194:\n        /* \"contracts/TetherToken.sol\":10947:10960  isBlackListed */\n      0x6\n        /* \"contracts/TetherToken.sol\":10947:10972  isBlackListed[msg.sender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":10961:10971  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":10947:10972  isBlackListed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":10946:10972  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/TetherToken.sol\":10938:10973  require(!isBlackListed[msg.sender]) */\n      iszero\n      iszero\n      tag_196\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_196:\n        /* \"contracts/TetherToken.sol\":10988:10998  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":10984:11181  if (deprecated) {\r... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/TetherToken.sol\":11044:11059  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":11022:11077  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e18980a\n        /* \"contracts/TetherToken.sol\":11078:11088  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":11090:11093  _to */\n      dup5\n        /* \"contracts/TetherToken.sol\":11095:11101  _value */\n      dup5\n        /* \"contracts/TetherToken.sol\":11022:11102  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_199\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_199:\n      pop\n      pop\n      pop\n        /* \"contracts/TetherToken.sol\":11015:11102  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_195)\n        /* \"contracts/TetherToken.sol\":10984:11181  if (deprecated) {\r... */\n    tag_197:\n        /* \"contracts/TetherToken.sol\":11142:11169  super.transfer(_to, _value) */\n      tag_201\n        /* \"contracts/TetherToken.sol\":11157:11160  _to */\n      dup3\n        /* \"contracts/TetherToken.sol\":11162:11168  _value */\n      dup3\n        /* \"contracts/TetherToken.sol\":11142:11156  super.transfer */\n      tag_202\n        /* \"contracts/TetherToken.sol\":11142:11169  super.transfer(_to, _value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/TetherToken.sol\":7734:7735  _ */\n    tag_195:\n        /* \"contracts/TetherToken.sol\":10862:11188  function transfer(address _to, uint _value) public whenNotPaused {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":14166:14553  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n    tag_110:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_204\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/TetherToken.sol\":14364:14366  20 */\n      0x14\n        /* \"contracts/TetherToken.sol\":14347:14361  newBasisPoints */\n      dup3\n        /* \"contracts/TetherToken.sol\":14347:14366  newBasisPoints < 20 */\n      lt\n        /* \"contracts/TetherToken.sol\":14339:14367  require(newBasisPoints < 20) */\n      iszero\n      iszero\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/TetherToken.sol\":14398:14400  50 */\n      0x32\n        /* \"contracts/TetherToken.sol\":14386:14395  newMaxFee */\n      dup2\n        /* \"contracts/TetherToken.sol\":14386:14400  newMaxFee < 50 */\n      lt\n        /* \"contracts/TetherToken.sol\":14378:14401  require(newMaxFee < 50) */\n      iszero\n      iszero\n      tag_207\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_207:\n        /* \"contracts/TetherToken.sol\":14432:14446  newBasisPoints */\n      dup2\n        /* \"contracts/TetherToken.sol\":14414:14429  basisPointsRate */\n      0x3\n        /* \"contracts/TetherToken.sol\":14414:14446  basisPointsRate = newBasisPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":14470:14497  newMaxFee.mul(10**decimals) */\n      tag_208\n        /* \"contracts/TetherToken.sol\":14488:14496  decimals */\n      sload(0x9)\n        /* \"contracts/TetherToken.sol\":14484:14486  10 */\n      0xa\n        /* \"contracts/TetherToken.sol\":14484:14496  10**decimals */\n      exp\n        /* \"contracts/TetherToken.sol\":14470:14479  newMaxFee */\n      dup3\n        /* \"contracts/TetherToken.sol\":14470:14483  newMaxFee.mul */\n      tag_209\n      swap1\n        /* \"contracts/TetherToken.sol\":14470:14497  newMaxFee.mul(10**decimals) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/TetherToken.sol\":14457:14467  maximumFee */\n      0x4\n        /* \"contracts/TetherToken.sol\":14457:14497  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":14510:14545  Params(basisPointsRate, maximumFee) */\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n        /* \"contracts/TetherToken.sol\":14517:14532  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/TetherToken.sol\":14534:14544  maximumFee */\n      sload(0x4)\n        /* \"contracts/TetherToken.sol\":14510:14545  Params(basisPointsRate, maximumFee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":14166:14553  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":13424:13690  function issue(uint amount) public onlyOwner {\r... */\n    tag_113:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_211\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/TetherToken.sol\":13512:13524  _totalSupply */\n      sload(0x1)\n        /* \"contracts/TetherToken.sol\":13503:13509  amount */\n      dup2\n        /* \"contracts/TetherToken.sol\":13488:13500  _totalSupply */\n      sload(0x1)\n        /* \"contracts/TetherToken.sol\":13488:13509  _totalSupply + amount */\n      add\n        /* \"contracts/TetherToken.sol\":13488:13524  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/TetherToken.sol\":13480:13525  require(_totalSupply + amount > _totalSupply) */\n      iszero\n      iszero\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/TetherToken.sol\":13571:13579  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":13571:13586  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":13580:13585  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":13571:13586  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":13562:13568  amount */\n      dup2\n        /* \"contracts/TetherToken.sol\":13544:13552  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":13544:13559  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":13553:13558  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":13544:13559  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":13544:13568  balances[owner] + amount */\n      add\n        /* \"contracts/TetherToken.sol\":13544:13586  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/TetherToken.sol\":13536:13587  require(balances[owner] + amount > balances[owner]) */\n      iszero\n      iszero\n      tag_214\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/TetherToken.sol\":13619:13625  amount */\n      dup1\n        /* \"contracts/TetherToken.sol\":13600:13608  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":13600:13615  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":13609:13614  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":13600:13615  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/TetherToken.sol\":13600:13625  balances[owner] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":13652:13658  amount */\n      dup1\n        /* \"contracts/TetherToken.sol\":13636:13648  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/TetherToken.sol\":13636:13658  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":13669:13682  Issue(amount) */\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n        /* \"contracts/TetherToken.sol\":13675:13681  amount */\n      dup2\n        /* \"contracts/TetherToken.sol\":13669:13682  Issue(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":13424:13690  function issue(uint amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":13921:14158  function redeem(uint amount) public onlyOwner {\r... */\n    tag_116:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n        /* \"contracts/TetherToken.sol\":14002:14008  amount */\n      dup1\n        /* \"contracts/TetherToken.sol\":13986:13998  _totalSupply */\n      sload(0x1)\n        /* \"contracts/TetherToken.sol\":13986:14008  _totalSupply >= amount */\n      lt\n      iszero\n        /* \"contracts/TetherToken.sol\":13978:14009  require(_totalSupply >= amount) */\n      iszero\n      iszero\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/TetherToken.sol\":14047:14053  amount */\n      dup1\n        /* \"contracts/TetherToken.sol\":14028:14036  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":14028:14043  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":14037:14042  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":14028:14043  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":14028:14053  balances[owner] >= amount */\n      lt\n      iszero\n        /* \"contracts/TetherToken.sol\":14020:14054  require(balances[owner] >= amount) */\n      iszero\n      iszero\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/TetherToken.sol\":14083:14089  amount */\n      dup1\n        /* \"contracts/TetherToken.sol\":14067:14079  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/TetherToken.sol\":14067:14089  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":14119:14125  amount */\n      dup1\n        /* \"contracts/TetherToken.sol\":14100:14108  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":14100:14115  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":14109:14114  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":14100:14115  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/TetherToken.sol\":14100:14125  balances[owner] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":14136:14150  Redeem(amount) */\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n        /* \"contracts/TetherToken.sol\":14143:14149  amount */\n      dup2\n        /* \"contracts/TetherToken.sol\":14136:14150  Redeem(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":13921:14158  function redeem(uint amount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":12436:12729  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_119:\n        /* \"contracts/TetherToken.sol\":12514:12528  uint remaining */\n      0x0\n        /* \"contracts/TetherToken.sol\":12545:12555  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":12541:12722  if (deprecated) {\r... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/TetherToken.sol\":12593:12608  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":12579:12619  StandardToken(upgradedAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/TetherToken.sol\":12620:12626  _owner */\n      dup5\n        /* \"contracts/TetherToken.sol\":12628:12636  _spender */\n      dup5\n        /* \"contracts/TetherToken.sol\":12579:12637  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_223\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_223:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":12572:12637  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      swap1\n      pop\n      jump(tag_220)\n        /* \"contracts/TetherToken.sol\":12541:12722  if (deprecated) {\r... */\n    tag_221:\n        /* \"contracts/TetherToken.sol\":12677:12710  super.allowance(_owner, _spender) */\n      tag_225\n        /* \"contracts/TetherToken.sol\":12693:12699  _owner */\n      dup4\n        /* \"contracts/TetherToken.sol\":12701:12709  _spender */\n      dup4\n        /* \"contracts/TetherToken.sol\":12677:12692  super.allowance */\n      tag_226\n        /* \"contracts/TetherToken.sol\":12677:12710  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/TetherToken.sol\":12670:12710  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":12436:12729  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_220:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":3079:3110  uint public basisPointsRate = 0 */\n    tag_122:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":8655:8701  mapping (address => bool) public isBlackListed */\n    tag_125:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":8867:9027  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n    tag_128:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/TetherToken.sol\":8973:8978  false */\n      0x0\n        /* \"contracts/TetherToken.sol\":8943:8956  isBlackListed */\n      0x6\n        /* \"contracts/TetherToken.sol\":8943:8970  isBlackListed[_clearedUser] */\n      0x0\n        /* \"contracts/TetherToken.sol\":8957:8969  _clearedUser */\n      dup4\n        /* \"contracts/TetherToken.sol\":8943:8970  isBlackListed[_clearedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/TetherToken.sol\":8943:8978  isBlackListed[_clearedUser] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":8989:9019  RemovedBlackList(_clearedUser) */\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n        /* \"contracts/TetherToken.sol\":9006:9018  _clearedUser */\n      dup2\n        /* \"contracts/TetherToken.sol\":8989:9019  RemovedBlackList(_clearedUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":8867:9027  function removeBlackList (address _clearedUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":4811:4853  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_131:\n        /* \"contracts/TetherToken.sol\":4843:4853  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/TetherToken.sol\":4811:4853  uint public constant MAX_UINT = 2**256 - 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_134:\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/TetherToken.sol\":1831:1832  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":1811:1833  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1811:1819  newOwner */\n      dup2\n        /* \"contracts/TetherToken.sol\":1811:1833  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TetherToken.sol\":1807:1878  if (newOwner != address(0)) {\r... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/TetherToken.sol\":1858:1866  newOwner */\n      dup1\n        /* \"contracts/TetherToken.sol\":1850:1855  owner */\n      0x0\n      dup1\n        /* \"contracts/TetherToken.sol\":1850:1866  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":1807:1878  if (newOwner != address(0)) {\r... */\n    tag_233:\n        /* \"contracts/TetherToken.sol\":1734:1885  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":9035:9359  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n    tag_137:\n        /* \"contracts/TetherToken.sol\":9168:9183  uint dirtyFunds */\n      0x0\n        /* \"contracts/TetherToken.sol\":1534:1539  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":1520:1530  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":1520:1539  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TetherToken.sol\":1512:1540  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n        /* \"contracts/TetherToken.sol\":9125:9138  isBlackListed */\n      0x6\n        /* \"contracts/TetherToken.sol\":9125:9156  isBlackListed[_blackListedUser] */\n      0x0\n        /* \"contracts/TetherToken.sol\":9139:9155  _blackListedUser */\n      dup4\n        /* \"contracts/TetherToken.sol\":9125:9156  isBlackListed[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TetherToken.sol\":9117:9157  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_237\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_237:\n        /* \"contracts/TetherToken.sol\":9186:9213  balanceOf(_blackListedUser) */\n      tag_238\n        /* \"contracts/TetherToken.sol\":9196:9212  _blackListedUser */\n      dup3\n        /* \"contracts/TetherToken.sol\":9186:9195  balanceOf */\n      tag_88\n        /* \"contracts/TetherToken.sol\":9186:9213  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/TetherToken.sol\":9168:9213  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":9253:9254  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":9224:9232  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":9224:9250  balances[_blackListedUser] */\n      0x0\n        /* \"contracts/TetherToken.sol\":9233:9249  _blackListedUser */\n      dup5\n        /* \"contracts/TetherToken.sol\":9224:9250  balances[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":9224:9254  balances[_blackListedUser] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":9281:9291  dirtyFunds */\n      dup1\n        /* \"contracts/TetherToken.sol\":9265:9277  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/TetherToken.sol\":9265:9291  _totalSupply -= dirtyFunds */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":9302:9351  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n        /* \"contracts/TetherToken.sol\":9322:9338  _blackListedUser */\n      dup3\n        /* \"contracts/TetherToken.sol\":9340:9350  dirtyFunds */\n      dup3\n        /* \"contracts/TetherToken.sol\":9302:9351  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TetherToken.sol\":9035:9359  function destroyBlackFunds (address _blackListedUser) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":6291:6864  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_152:\n        /* \"contracts/TetherToken.sol\":6362:6368  2 * 32 */\n      0x40\n        /* \"contracts/TetherToken.sol\":3303:3304  4 */\n      0x4\n        /* \"contracts/TetherToken.sol\":3296:3300  size */\n      dup2\n        /* \"contracts/TetherToken.sol\":3296:3304  size + 4 */\n      add\n        /* \"contracts/TetherToken.sol\":3278:3286  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/TetherToken.sol\":3278:3293  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":3278:3304  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/TetherToken.sol\":3276:3305  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/TetherToken.sol\":3268:3306  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n        /* \"contracts/TetherToken.sol\":6712:6713  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":6702:6708  _value */\n      dup3\n        /* \"contracts/TetherToken.sol\":6702:6713  _value != 0 */\n      eq\n      iszero\n        /* \"contracts/TetherToken.sol\":6701:6754  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/TetherToken.sol\":6752:6753  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":6719:6726  allowed */\n      0x5\n        /* \"contracts/TetherToken.sol\":6719:6738  allowed[msg.sender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":6727:6737  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":6719:6738  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":6719:6748  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":6739:6747  _spender */\n      dup6\n        /* \"contracts/TetherToken.sol\":6719:6748  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":6719:6753  allowed[msg.sender][_spender] != 0 */\n      eq\n      iszero\n        /* \"contracts/TetherToken.sol\":6701:6754  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_242:\n        /* \"contracts/TetherToken.sol\":6699:6755  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/TetherToken.sol\":6691:6756  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      iszero\n      iszero\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n        /* \"contracts/TetherToken.sol\":6801:6807  _value */\n      dup2\n        /* \"contracts/TetherToken.sol\":6769:6776  allowed */\n      0x5\n        /* \"contracts/TetherToken.sol\":6769:6788  allowed[msg.sender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":6777:6787  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":6769:6788  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":6769:6798  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":6789:6797  _spender */\n      dup6\n        /* \"contracts/TetherToken.sol\":6769:6798  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":6769:6807  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":6839:6847  _spender */\n      dup3\n        /* \"contracts/TetherToken.sol\":6818:6856  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":6827:6837  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":6818:6856  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TetherToken.sol\":6849:6855  _value */\n      dup5\n        /* \"contracts/TetherToken.sol\":6818:6856  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TetherToken.sol\":6291:6864  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":5143:6044  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r... */\n    tag_170:\n        /* \"contracts/TetherToken.sol\":5248:5262  var _allowance */\n      0x0\n        /* \"contracts/TetherToken.sol\":5462:5470  uint fee */\n      dup1\n        /* \"contracts/TetherToken.sol\":5714:5729  uint sendAmount */\n      0x0\n        /* \"contracts/TetherToken.sol\":5229:5235  3 * 32 */\n      0x60\n        /* \"contracts/TetherToken.sol\":3303:3304  4 */\n      0x4\n        /* \"contracts/TetherToken.sol\":3296:3300  size */\n      dup2\n        /* \"contracts/TetherToken.sol\":3296:3304  size + 4 */\n      add\n        /* \"contracts/TetherToken.sol\":3278:3286  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/TetherToken.sol\":3278:3293  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":3278:3304  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/TetherToken.sol\":3276:3305  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/TetherToken.sol\":3268:3306  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n        /* \"contracts/TetherToken.sol\":5265:5272  allowed */\n      0x5\n        /* \"contracts/TetherToken.sol\":5265:5279  allowed[_from] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5273:5278  _from */\n      dup9\n        /* \"contracts/TetherToken.sol\":5265:5279  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":5265:5291  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5280:5290  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":5265:5291  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":5248:5291  var _allowance = allowed[_from][msg.sender] */\n      swap4\n      pop\n        /* \"contracts/TetherToken.sol\":5473:5513  (_value.mul(basisPointsRate)).div(10000) */\n      tag_247\n        /* \"contracts/TetherToken.sol\":5507:5512  10000 */\n      0x2710\n        /* \"contracts/TetherToken.sol\":5474:5501  _value.mul(basisPointsRate) */\n      tag_248\n        /* \"contracts/TetherToken.sol\":5485:5500  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/TetherToken.sol\":5474:5480  _value */\n      dup9\n        /* \"contracts/TetherToken.sol\":5474:5484  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/TetherToken.sol\":5474:5501  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/TetherToken.sol\":5473:5506  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/TetherToken.sol\":5473:5513  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/TetherToken.sol\":5462:5513  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/TetherToken.sol\":5534:5544  maximumFee */\n      sload(0x4)\n        /* \"contracts/TetherToken.sol\":5528:5531  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":5528:5544  fee > maximumFee */\n      gt\n        /* \"contracts/TetherToken.sol\":5524:5589  if (fee > maximumFee) {\r... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/TetherToken.sol\":5567:5577  maximumFee */\n      sload(0x4)\n        /* \"contracts/TetherToken.sol\":5561:5577  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/TetherToken.sol\":5524:5589  if (fee > maximumFee) {\r... */\n    tag_250:\n        /* \"contracts/TetherToken.sol\":4843:4853  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/TetherToken.sol\":5603:5613  _allowance */\n      dup5\n        /* \"contracts/TetherToken.sol\":5603:5624  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/TetherToken.sol\":5599:5704  if (_allowance < MAX_UINT) {\r... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/TetherToken.sol\":5670:5692  _allowance.sub(_value) */\n      tag_252\n        /* \"contracts/TetherToken.sol\":5685:5691  _value */\n      dup6\n        /* \"contracts/TetherToken.sol\":5670:5680  _allowance */\n      dup6\n        /* \"contracts/TetherToken.sol\":5670:5684  _allowance.sub */\n      tag_253\n      swap1\n        /* \"contracts/TetherToken.sol\":5670:5692  _allowance.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/TetherToken.sol\":5641:5648  allowed */\n      0x5\n        /* \"contracts/TetherToken.sol\":5641:5655  allowed[_from] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5649:5654  _from */\n      dup10\n        /* \"contracts/TetherToken.sol\":5641:5655  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":5641:5667  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5656:5666  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":5641:5667  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":5641:5692  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":5599:5704  if (_allowance < MAX_UINT) {\r... */\n    tag_251:\n        /* \"contracts/TetherToken.sol\":5732:5747  _value.sub(fee) */\n      tag_254\n        /* \"contracts/TetherToken.sol\":5743:5746  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":5732:5738  _value */\n      dup7\n        /* \"contracts/TetherToken.sol\":5732:5742  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/TetherToken.sol\":5732:5747  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/TetherToken.sol\":5714:5747  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/TetherToken.sol\":5776:5803  balances[_from].sub(_value) */\n      tag_255\n        /* \"contracts/TetherToken.sol\":5796:5802  _value */\n      dup6\n        /* \"contracts/TetherToken.sol\":5776:5784  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":5776:5791  balances[_from] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5785:5790  _from */\n      dup11\n        /* \"contracts/TetherToken.sol\":5776:5791  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":5776:5795  balances[_from].sub */\n      tag_253\n      swap1\n        /* \"contracts/TetherToken.sol\":5776:5803  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/TetherToken.sol\":5758:5766  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":5758:5773  balances[_from] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5767:5772  _from */\n      dup10\n        /* \"contracts/TetherToken.sol\":5758:5773  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":5758:5803  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":5830:5859  balances[_to].add(sendAmount) */\n      tag_256\n        /* \"contracts/TetherToken.sol\":5848:5858  sendAmount */\n      dup3\n        /* \"contracts/TetherToken.sol\":5830:5838  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":5830:5843  balances[_to] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5839:5842  _to */\n      dup10\n        /* \"contracts/TetherToken.sol\":5830:5843  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":5830:5847  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/TetherToken.sol\":5830:5859  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/TetherToken.sol\":5814:5822  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":5814:5827  balances[_to] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5823:5826  _to */\n      dup9\n        /* \"contracts/TetherToken.sol\":5814:5827  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":5814:5859  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":5880:5881  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":5874:5877  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":5874:5881  fee > 0 */\n      gt\n        /* \"contracts/TetherToken.sol\":5870:5994  if (fee > 0) {\r... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/TetherToken.sol\":5916:5940  balances[owner].add(fee) */\n      tag_259\n        /* \"contracts/TetherToken.sol\":5936:5939  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":5916:5924  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":5916:5931  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5925:5930  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":5916:5931  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":5916:5935  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/TetherToken.sol\":5916:5940  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/TetherToken.sol\":5898:5906  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":5898:5913  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":5907:5912  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":5898:5913  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":5898:5940  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":5971:5976  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":5955:5982  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":5964:5969  _from */\n      dup8\n        /* \"contracts/TetherToken.sol\":5955:5982  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TetherToken.sol\":5978:5981  fee */\n      dup6\n        /* \"contracts/TetherToken.sol\":5955:5982  Transfer(_from, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TetherToken.sol\":5870:5994  if (fee > 0) {\r... */\n    tag_258:\n        /* \"contracts/TetherToken.sol\":6020:6023  _to */\n      dup6\n        /* \"contracts/TetherToken.sol\":6004:6036  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":6013:6018  _from */\n      dup8\n        /* \"contracts/TetherToken.sol\":6004:6036  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TetherToken.sol\":6025:6035  sendAmount */\n      dup5\n        /* \"contracts/TetherToken.sol\":6004:6036  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TetherToken.sol\":5143:6044  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":4290:4406  function balanceOf(address _owner) public constant returns (uint balance) {\r... */\n    tag_183:\n        /* \"contracts/TetherToken.sol\":4350:4362  uint balance */\n      0x0\n        /* \"contracts/TetherToken.sol\":4382:4390  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":4382:4398  balances[_owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":4391:4397  _owner */\n      dup4\n        /* \"contracts/TetherToken.sol\":4382:4398  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":4375:4398  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":4290:4406  function balanceOf(address _owner) public constant returns (uint balance) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":3499:4072  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n    tag_202:\n        /* \"contracts/TetherToken.sol\":3585:3593  uint fee */\n      0x0\n        /* \"contracts/TetherToken.sol\":3722:3737  uint sendAmount */\n      dup1\n        /* \"contracts/TetherToken.sol\":3566:3572  2 * 32 */\n      0x40\n        /* \"contracts/TetherToken.sol\":3303:3304  4 */\n      0x4\n        /* \"contracts/TetherToken.sol\":3296:3300  size */\n      dup2\n        /* \"contracts/TetherToken.sol\":3296:3304  size + 4 */\n      add\n        /* \"contracts/TetherToken.sol\":3278:3286  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/TetherToken.sol\":3278:3293  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":3278:3304  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/TetherToken.sol\":3276:3305  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/TetherToken.sol\":3268:3306  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_262\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_262:\n        /* \"contracts/TetherToken.sol\":3596:3636  (_value.mul(basisPointsRate)).div(10000) */\n      tag_264\n        /* \"contracts/TetherToken.sol\":3630:3635  10000 */\n      0x2710\n        /* \"contracts/TetherToken.sol\":3597:3624  _value.mul(basisPointsRate) */\n      tag_265\n        /* \"contracts/TetherToken.sol\":3608:3623  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/TetherToken.sol\":3597:3603  _value */\n      dup8\n        /* \"contracts/TetherToken.sol\":3597:3607  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/TetherToken.sol\":3597:3624  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/TetherToken.sol\":3596:3629  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/TetherToken.sol\":3596:3636  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/TetherToken.sol\":3585:3636  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/TetherToken.sol\":3657:3667  maximumFee */\n      sload(0x4)\n        /* \"contracts/TetherToken.sol\":3651:3654  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":3651:3667  fee > maximumFee */\n      gt\n        /* \"contracts/TetherToken.sol\":3647:3712  if (fee > maximumFee) {\r... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/TetherToken.sol\":3690:3700  maximumFee */\n      sload(0x4)\n        /* \"contracts/TetherToken.sol\":3684:3700  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/TetherToken.sol\":3647:3712  if (fee > maximumFee) {\r... */\n    tag_266:\n        /* \"contracts/TetherToken.sol\":3740:3755  _value.sub(fee) */\n      tag_267\n        /* \"contracts/TetherToken.sol\":3751:3754  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":3740:3746  _value */\n      dup6\n        /* \"contracts/TetherToken.sol\":3740:3750  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/TetherToken.sol\":3740:3755  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/TetherToken.sol\":3722:3755  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/TetherToken.sol\":3789:3821  balances[msg.sender].sub(_value) */\n      tag_268\n        /* \"contracts/TetherToken.sol\":3814:3820  _value */\n      dup5\n        /* \"contracts/TetherToken.sol\":3789:3797  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":3789:3809  balances[msg.sender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":3798:3808  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":3789:3809  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":3789:3813  balances[msg.sender].sub */\n      tag_253\n      swap1\n        /* \"contracts/TetherToken.sol\":3789:3821  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/TetherToken.sol\":3766:3774  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":3766:3786  balances[msg.sender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":3775:3785  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":3766:3786  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":3766:3821  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":3848:3877  balances[_to].add(sendAmount) */\n      tag_269\n        /* \"contracts/TetherToken.sol\":3866:3876  sendAmount */\n      dup3\n        /* \"contracts/TetherToken.sol\":3848:3856  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":3848:3861  balances[_to] */\n      0x0\n        /* \"contracts/TetherToken.sol\":3857:3860  _to */\n      dup9\n        /* \"contracts/TetherToken.sol\":3848:3861  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":3848:3865  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/TetherToken.sol\":3848:3877  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/TetherToken.sol\":3832:3840  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":3832:3845  balances[_to] */\n      0x0\n        /* \"contracts/TetherToken.sol\":3841:3844  _to */\n      dup8\n        /* \"contracts/TetherToken.sol\":3832:3845  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":3832:3877  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":3898:3899  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":3892:3895  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":3892:3899  fee > 0 */\n      gt\n        /* \"contracts/TetherToken.sol\":3888:4017  if (fee > 0) {\r... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/TetherToken.sol\":3934:3958  balances[owner].add(fee) */\n      tag_271\n        /* \"contracts/TetherToken.sol\":3954:3957  fee */\n      dup4\n        /* \"contracts/TetherToken.sol\":3934:3942  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":3934:3949  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":3943:3948  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":3934:3949  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":3934:3953  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/TetherToken.sol\":3934:3958  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/TetherToken.sol\":3916:3924  balances */\n      0x2\n        /* \"contracts/TetherToken.sol\":3916:3931  balances[owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":3925:3930  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":3916:3931  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":3916:3958  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TetherToken.sol\":3994:3999  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":3973:4005  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":3982:3992  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":3973:4005  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TetherToken.sol\":4001:4004  fee */\n      dup6\n        /* \"contracts/TetherToken.sol\":3973:4005  Transfer(msg.sender, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TetherToken.sol\":3888:4017  if (fee > 0) {\r... */\n    tag_270:\n        /* \"contracts/TetherToken.sol\":4048:4051  _to */\n      dup5\n        /* \"contracts/TetherToken.sol\":4027:4064  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TetherToken.sol\":4036:4046  msg.sender */\n      caller\n        /* \"contracts/TetherToken.sol\":4027:4064  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TetherToken.sol\":4053:4063  sendAmount */\n      dup5\n        /* \"contracts/TetherToken.sol\":4027:4064  Transfer(msg.sender, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TetherToken.sol\":3499:4072  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":146:354  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_209:\n        /* \"contracts/TetherToken.sol\":204:211  uint256 */\n      0x0\n        /* \"contracts/TetherToken.sol\":281:290  uint256 c */\n      dup1\n        /* \"contracts/TetherToken.sol\":233:234  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":228:229  a */\n      dup5\n        /* \"contracts/TetherToken.sol\":228:234  a == 0 */\n      eq\n        /* \"contracts/TetherToken.sol\":224:271  if (a == 0) {\r... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/TetherToken.sol\":258:259  0 */\n      0x0\n        /* \"contracts/TetherToken.sol\":251:259  return 0 */\n      swap2\n      pop\n      jump(tag_272)\n        /* \"contracts/TetherToken.sol\":224:271  if (a == 0) {\r... */\n    tag_273:\n        /* \"contracts/TetherToken.sol\":297:298  b */\n      dup3\n        /* \"contracts/TetherToken.sol\":293:294  a */\n      dup5\n        /* \"contracts/TetherToken.sol\":293:298  a * b */\n      mul\n        /* \"contracts/TetherToken.sol\":281:298  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":325:326  b */\n      dup3\n        /* \"contracts/TetherToken.sol\":320:321  a */\n      dup5\n        /* \"contracts/TetherToken.sol\":316:317  c */\n      dup3\n        /* \"contracts/TetherToken.sol\":316:321  c / a */\n      dup2\n      iszero\n      iszero\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"contracts/TetherToken.sol\":316:326  c / a == b */\n      eq\n        /* \"contracts/TetherToken.sol\":309:327  assert(c / a == b) */\n      iszero\n      iszero\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n        /* \"contracts/TetherToken.sol\":345:346  c */\n      dup1\n        /* \"contracts/TetherToken.sol\":338:346  return c */\n      swap2\n      pop\n        /* \"contracts/TetherToken.sol\":146:354  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_272:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":7197:7342  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n    tag_226:\n        /* \"contracts/TetherToken.sol\":7275:7289  uint remaining */\n      0x0\n        /* \"contracts/TetherToken.sol\":7309:7316  allowed */\n      0x5\n        /* \"contracts/TetherToken.sol\":7309:7324  allowed[_owner] */\n      0x0\n        /* \"contracts/TetherToken.sol\":7317:7323  _owner */\n      dup5\n        /* \"contracts/TetherToken.sol\":7309:7324  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TetherToken.sol\":7309:7334  allowed[_owner][_spender] */\n      0x0\n        /* \"contracts/TetherToken.sol\":7325:7333  _spender */\n      dup4\n        /* \"contracts/TetherToken.sol\":7309:7334  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TetherToken.sol\":7302:7334  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":7197:7342  function allowance(address _owner, address _spender) public constant returns (uint remaining) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":362:650  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_249:\n        /* \"contracts/TetherToken.sol\":420:427  uint256 */\n      0x0\n        /* \"contracts/TetherToken.sol\":519:528  uint256 c */\n      dup1\n        /* \"contracts/TetherToken.sol\":535:536  b */\n      dup3\n        /* \"contracts/TetherToken.sol\":531:532  a */\n      dup5\n        /* \"contracts/TetherToken.sol\":531:536  a / b */\n      dup2\n      iszero\n      iszero\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      div\n        /* \"contracts/TetherToken.sol\":519:536  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":641:642  c */\n      dup1\n        /* \"contracts/TetherToken.sol\":634:642  return c */\n      swap2\n      pop\n        /* \"contracts/TetherToken.sol\":362:650  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":658:781  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_253:\n        /* \"contracts/TetherToken.sol\":716:723  uint256 */\n      0x0\n        /* \"contracts/TetherToken.sol\":748:749  a */\n      dup3\n        /* \"contracts/TetherToken.sol\":743:744  b */\n      dup3\n        /* \"contracts/TetherToken.sol\":743:749  b <= a */\n      gt\n      iszero\n        /* \"contracts/TetherToken.sol\":736:750  assert(b <= a) */\n      iszero\n      iszero\n      tag_280\n      jumpi\n      invalid\n    tag_280:\n        /* \"contracts/TetherToken.sol\":772:773  b */\n      dup2\n        /* \"contracts/TetherToken.sol\":768:769  a */\n      dup4\n        /* \"contracts/TetherToken.sol\":768:773  a - b */\n      sub\n        /* \"contracts/TetherToken.sol\":761:773  return a - b */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":658:781  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TetherToken.sol\":789:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_257:\n        /* \"contracts/TetherToken.sol\":847:854  uint256 */\n      0x0\n        /* \"contracts/TetherToken.sol\":867:876  uint256 c */\n      dup1\n        /* \"contracts/TetherToken.sol\":883:884  b */\n      dup3\n        /* \"contracts/TetherToken.sol\":879:880  a */\n      dup5\n        /* \"contracts/TetherToken.sol\":879:884  a + b */\n      add\n        /* \"contracts/TetherToken.sol\":867:884  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/TetherToken.sol\":907:908  a */\n      dup4\n        /* \"contracts/TetherToken.sol\":902:903  c */\n      dup2\n        /* \"contracts/TetherToken.sol\":902:908  c >= a */\n      lt\n      iszero\n        /* \"contracts/TetherToken.sol\":895:909  assert(c >= a) */\n      iszero\n      iszero\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n        /* \"contracts/TetherToken.sol\":927:928  c */\n      dup1\n        /* \"contracts/TetherToken.sol\":920:928  return c */\n      swap2\n      pop\n        /* \"contracts/TetherToken.sol\":789:936  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820c593703cf7ce24400f8771831253545864d5caf9b4ad7dcb77c1ed6541cf067c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff0219169083151502179055506000600355600060045534156200003457600080fd5b60405162002d7c38038062002d7c83398101604052808051906020019091908051820191906020018051820191906020018051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836001819055508260079080519060200190620000cf9291906200017a565b508160089080519060200190620000e89291906200017a565b508060098190555083600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600a60146101000a81548160ff0219169083151502179055505050505062000229565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001bd57805160ff1916838001178555620001ee565b82800160010185558215620001ee579182015b82811115620001ed578251825591602001919060010190620001d0565b5b509050620001fd919062000201565b5090565b6200022691905b808211156200022257600081600090555060010162000208565b5090565b90565b612b4380620002396000396000f300606060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461019b5780630753c30c14610229578063095ea7b3146102625780630e136b19146102a45780630ecb93c0146102d157806318160ddd1461030a57806323b872dd1461033357806326976e3f1461039457806327e235e3146103e9578063313ce56714610436578063353907141461045f5780633eaaf86b146104885780633f4ba83a146104b157806359bf1abe146104c65780635c658165146105175780635c975abb1461058357806370a08231146105b05780638456cb59146105fd578063893d20e8146106125780638da5cb5b1461066757806395d89b41146106bc578063a9059cbb1461074a578063c0324c771461078c578063cc872b66146107b8578063db006a75146107db578063dd62ed3e146107fe578063dd644f721461086a578063e47d606014610893578063e4997dc5146108e4578063e5b5019a1461091d578063f2fde38b14610946578063f3bdc2281461097f575b600080fd5b34156101a657600080fd5b6101ae6109b8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ee5780820151818401526020810190506101d3565b50505050905090810190601f16801561021b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023457600080fd5b610260600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a56565b005b341561026d57600080fd5b6102a2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b73565b005b34156102af57600080fd5b6102b7610cc1565b604051808215151515815260200191505060405180910390f35b34156102dc57600080fd5b610308600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd4565b005b341561031557600080fd5b61031d610ded565b6040518082815260200191505060405180910390f35b341561033e57600080fd5b610392600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebd565b005b341561039f57600080fd5b6103a761109d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f457600080fd5b610420600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c3565b6040518082815260200191505060405180910390f35b341561044157600080fd5b6104496110db565b6040518082815260200191505060405180910390f35b341561046a57600080fd5b6104726110e1565b6040518082815260200191505060405180910390f35b341561049357600080fd5b61049b6110e7565b6040518082815260200191505060405180910390f35b34156104bc57600080fd5b6104c46110ed565b005b34156104d157600080fd5b6104fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ab565b604051808215151515815260200191505060405180910390f35b341561052257600080fd5b61056d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611201565b6040518082815260200191505060405180910390f35b341561058e57600080fd5b610596611226565b604051808215151515815260200191505060405180910390f35b34156105bb57600080fd5b6105e7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611239565b6040518082815260200191505060405180910390f35b341561060857600080fd5b610610611348565b005b341561061d57600080fd5b610625611408565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067257600080fd5b61067a611431565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c757600080fd5b6106cf611456565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070f5780820151818401526020810190506106f4565b50505050905090810190601f16801561073c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075557600080fd5b61078a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f4565b005b341561079757600080fd5b6107b6600480803590602001909190803590602001909190505061169e565b005b34156107c357600080fd5b6107d96004808035906020019091905050611783565b005b34156107e657600080fd5b6107fc600480803590602001909190505061197a565b005b341561080957600080fd5b610854600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0d565b6040518082815260200191505060405180910390f35b341561087557600080fd5b61087d611c52565b6040518082815260200191505060405180910390f35b341561089e57600080fd5b6108ca600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c58565b604051808215151515815260200191505060405180910390f35b34156108ef57600080fd5b61091b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c78565b005b341561092857600080fd5b610930611d91565b6040518082815260200191505060405180910390f35b341561095157600080fd5b61097d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db5565b005b341561098a57600080fd5b6109b6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e8a565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4e5780601f10610a2357610100808354040283529160200191610a4e565b820191906000526020600020905b815481529060010190602001808311610a3157829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ab157600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8b57600080fd5b600a60149054906101000a900460ff1615610cb157600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9857600080fd5b6102c65a03f11515610ca957600080fd5b505050610cbc565b610cbb838361200e565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2f57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb457600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9257600080fd5b6102c65a03f11515610ea357600080fd5b505050604051805190509050610eba565b60015490505b90565b600060149054906101000a900460ff16151515610ed957600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3257600080fd5b600a60149054906101000a900460ff161561108c57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107357600080fd5b6102c65a03f1151561108457600080fd5b505050611098565b6110978383836121ab565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114857600080fd5b600060149054906101000a900460ff16151561116357600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133757600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131557600080fd5b6102c65a03f1151561132657600080fd5b505050604051805190509050611343565b61134082612652565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a357600080fd5b600060149054906101000a900460ff161515156113bf57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ec5780601f106114c1576101008083540402835291602001916114ec565b820191906000526020600020905b8154815290600101906020018083116114cf57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561151057600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156957600080fd5b600a60149054906101000a900460ff161561168f57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167657600080fd5b6102c65a03f1151561168757600080fd5b50505061169a565b611699828261269b565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f957600080fd5b60148210151561170857600080fd5b60328110151561171757600080fd5b81600381905550611736600954600a0a82612a0390919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117de57600080fd5b60015481600154011115156117f257600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c257600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d557600080fd5b80600154101515156119e657600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5557600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3f57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1d57600080fd5b6102c65a03f11515611c2e57600080fd5b505050604051805190509050611c4c565b611c498383612a3e565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd357600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e1057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8757806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee757600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3f57600080fd5b611f4882611239565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202657600080fd5b600082141580156120b457506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120c057600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c857600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061227061271061226260035488612a0390919063ffffffff16565b612ac590919063ffffffff16565b92506004548311156122825760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233e576122bd8585612ae090919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6123518386612ae090919063ffffffff16565b91506123a585600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ae090919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243a82600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e4576124f983600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b657600080fd5b6126df6127106126d160035487612a0390919063ffffffff16565b612ac590919063ffffffff16565b92506004548311156126f15760045492505b6127048385612ae090919063ffffffff16565b915061275884600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ae090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127ed82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612997576128ac83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a185760009150612a37565b8284029050828482811515612a2957fe5b04141515612a3357fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad357fe5b0490508091505092915050565b6000828211151515612aee57fe5b818303905092915050565b6000808284019050838110151515612b0d57fe5b80915050929150505600a165627a7a72305820c593703cf7ce24400f8771831253545864d5caf9b4ad7dcb77c1ed6541cf067c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH3 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2D7C CODESIZE SUB DUP1 PUSH3 0x2D7C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCF SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP2 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE8 SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x229 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1BD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1EE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1EE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1ED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1FD SWAP2 SWAP1 PUSH3 0x201 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x226 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x222 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x208 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2B43 DUP1 PUSH3 0x239 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x196 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FE JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x86A JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x893 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E4 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B7 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBD JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A7 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x449 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x472 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49B PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C4 PUSH2 0x10ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x610 PUSH2 0x1348 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x625 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67A PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CF PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1783 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x197A JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x854 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87D PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8CA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x930 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B6 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E8A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA23 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA31 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCB1 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xCBB DUP4 DUP4 PUSH2 0x200E JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB4 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108C JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x1097 DUP4 DUP4 DUP4 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1337 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1343 JUMP JUMPDEST PUSH2 0x1340 DUP3 PUSH2 0x2652 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168F JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x169A JUMP JUMPDEST PUSH2 0x1699 DUP3 DUP3 PUSH2 0x269B JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1736 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3F JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1C49 DUP4 DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E87 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F48 DUP3 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B4 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x2270 PUSH2 0x2710 PUSH2 0x2262 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2282 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233E JUMPI PUSH2 0x22BD DUP6 DUP6 PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2351 DUP4 DUP7 PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A5 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x243A DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E4 JUMPI PUSH2 0x24F9 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DF PUSH2 0x2710 PUSH2 0x26D1 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26F1 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2704 DUP4 DUP6 PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2758 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27ED DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2997 JUMPI PUSH2 0x28AC DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A18 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A37 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A29 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A33 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEE JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0D JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc5 SWAP4 PUSH17 0x3CF7CE24400F8771831253545864D5CAF9 0xb4 0xad PUSH30 0xCB77C1ED6541CF067C002900000000000000000000000000000000000000 ",
							"sourceMap": "9971:4917:0:-;;;7565:5;7544:26;;;;;;;;;;;;;;;;;;;;3109:1;3079:31;;3142:1;3117:26;;10481:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:10;1359:5;;:18;;;;;;;;;;;;;;;;;;10602:14;10587:12;:29;;;;10634:5;10627:4;:12;;;;;;;;;;;;:::i;:::-;;10659:7;10650:6;:16;;;;;;;;;;;;:::i;:::-;;10688:9;10677:8;:20;;;;10726:14;10708:8;:15;10717:5;;;;;;;;;;;10708:15;;;;;;;;;;;;;;;:32;;;;10764:5;10751:10;;:18;;;;;;;;;;;;;;;;;;10481:296;;;;9971:4917;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461019b5780630753c30c14610229578063095ea7b3146102625780630e136b19146102a45780630ecb93c0146102d157806318160ddd1461030a57806323b872dd1461033357806326976e3f1461039457806327e235e3146103e9578063313ce56714610436578063353907141461045f5780633eaaf86b146104885780633f4ba83a146104b157806359bf1abe146104c65780635c658165146105175780635c975abb1461058357806370a08231146105b05780638456cb59146105fd578063893d20e8146106125780638da5cb5b1461066757806395d89b41146106bc578063a9059cbb1461074a578063c0324c771461078c578063cc872b66146107b8578063db006a75146107db578063dd62ed3e146107fe578063dd644f721461086a578063e47d606014610893578063e4997dc5146108e4578063e5b5019a1461091d578063f2fde38b14610946578063f3bdc2281461097f575b600080fd5b34156101a657600080fd5b6101ae6109b8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ee5780820151818401526020810190506101d3565b50505050905090810190601f16801561021b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023457600080fd5b610260600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a56565b005b341561026d57600080fd5b6102a2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b73565b005b34156102af57600080fd5b6102b7610cc1565b604051808215151515815260200191505060405180910390f35b34156102dc57600080fd5b610308600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd4565b005b341561031557600080fd5b61031d610ded565b6040518082815260200191505060405180910390f35b341561033e57600080fd5b610392600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebd565b005b341561039f57600080fd5b6103a761109d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f457600080fd5b610420600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c3565b6040518082815260200191505060405180910390f35b341561044157600080fd5b6104496110db565b6040518082815260200191505060405180910390f35b341561046a57600080fd5b6104726110e1565b6040518082815260200191505060405180910390f35b341561049357600080fd5b61049b6110e7565b6040518082815260200191505060405180910390f35b34156104bc57600080fd5b6104c46110ed565b005b34156104d157600080fd5b6104fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ab565b604051808215151515815260200191505060405180910390f35b341561052257600080fd5b61056d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611201565b6040518082815260200191505060405180910390f35b341561058e57600080fd5b610596611226565b604051808215151515815260200191505060405180910390f35b34156105bb57600080fd5b6105e7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611239565b6040518082815260200191505060405180910390f35b341561060857600080fd5b610610611348565b005b341561061d57600080fd5b610625611408565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067257600080fd5b61067a611431565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c757600080fd5b6106cf611456565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070f5780820151818401526020810190506106f4565b50505050905090810190601f16801561073c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075557600080fd5b61078a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f4565b005b341561079757600080fd5b6107b6600480803590602001909190803590602001909190505061169e565b005b34156107c357600080fd5b6107d96004808035906020019091905050611783565b005b34156107e657600080fd5b6107fc600480803590602001909190505061197a565b005b341561080957600080fd5b610854600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0d565b6040518082815260200191505060405180910390f35b341561087557600080fd5b61087d611c52565b6040518082815260200191505060405180910390f35b341561089e57600080fd5b6108ca600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c58565b604051808215151515815260200191505060405180910390f35b34156108ef57600080fd5b61091b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c78565b005b341561092857600080fd5b610930611d91565b6040518082815260200191505060405180910390f35b341561095157600080fd5b61097d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db5565b005b341561098a57600080fd5b6109b6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e8a565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4e5780601f10610a2357610100808354040283529160200191610a4e565b820191906000526020600020905b815481529060010190602001808311610a3157829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ab157600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8b57600080fd5b600a60149054906101000a900460ff1615610cb157600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9857600080fd5b6102c65a03f11515610ca957600080fd5b505050610cbc565b610cbb838361200e565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2f57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb457600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9257600080fd5b6102c65a03f11515610ea357600080fd5b505050604051805190509050610eba565b60015490505b90565b600060149054906101000a900460ff16151515610ed957600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3257600080fd5b600a60149054906101000a900460ff161561108c57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107357600080fd5b6102c65a03f1151561108457600080fd5b505050611098565b6110978383836121ab565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114857600080fd5b600060149054906101000a900460ff16151561116357600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133757600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131557600080fd5b6102c65a03f1151561132657600080fd5b505050604051805190509050611343565b61134082612652565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a357600080fd5b600060149054906101000a900460ff161515156113bf57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ec5780601f106114c1576101008083540402835291602001916114ec565b820191906000526020600020905b8154815290600101906020018083116114cf57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561151057600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156957600080fd5b600a60149054906101000a900460ff161561168f57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167657600080fd5b6102c65a03f1151561168757600080fd5b50505061169a565b611699828261269b565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f957600080fd5b60148210151561170857600080fd5b60328110151561171757600080fd5b81600381905550611736600954600a0a82612a0390919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117de57600080fd5b60015481600154011115156117f257600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c257600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d557600080fd5b80600154101515156119e657600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5557600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3f57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1d57600080fd5b6102c65a03f11515611c2e57600080fd5b505050604051805190509050611c4c565b611c498383612a3e565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd357600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e1057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8757806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee757600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3f57600080fd5b611f4882611239565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202657600080fd5b600082141580156120b457506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120c057600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c857600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061227061271061226260035488612a0390919063ffffffff16565b612ac590919063ffffffff16565b92506004548311156122825760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233e576122bd8585612ae090919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6123518386612ae090919063ffffffff16565b91506123a585600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ae090919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243a82600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e4576124f983600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b657600080fd5b6126df6127106126d160035487612a0390919063ffffffff16565b612ac590919063ffffffff16565b92506004548311156126f15760045492505b6127048385612ae090919063ffffffff16565b915061275884600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ae090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127ed82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612997576128ac83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af990919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a185760009150612a37565b8284029050828482811515612a2957fe5b04141515612a3357fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad357fe5b0490508091505092915050565b6000828211151515612aee57fe5b818303905092915050565b6000808284019050838110151515612b0d57fe5b80915050929150505600a165627a7a72305820c593703cf7ce24400f8771831253545864d5caf9b4ad7dcb77c1ed6541cf067c0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x196 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78C JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B8 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FE JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x86A JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x893 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E4 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x21B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B7 PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D PUSH2 0xDED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBD JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A7 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x449 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x472 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49B PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C4 PUSH2 0x10ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x610 PUSH2 0x1348 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x625 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67A PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CF PUSH2 0x1456 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1783 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x197A JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x809 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x854 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87D PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8CA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C78 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x930 PUSH2 0x1D91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x98A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B6 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E8A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA23 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA31 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCB1 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBC JUMP JUMPDEST PUSH2 0xCBB DUP4 DUP4 PUSH2 0x200E JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB4 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEBA JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108C JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x1097 DUP4 DUP4 DUP4 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1337 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1343 JUMP JUMPDEST PUSH2 0x1340 DUP3 PUSH2 0x2652 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168F JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x169A JUMP JUMPDEST PUSH2 0x1699 DUP3 DUP3 PUSH2 0x269B JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1736 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3F JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1C49 DUP4 DUP4 PUSH2 0x2A3E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E87 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F48 DUP3 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2026 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B4 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x2270 PUSH2 0x2710 PUSH2 0x2262 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2282 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233E JUMPI PUSH2 0x22BD DUP6 DUP6 PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2351 DUP4 DUP7 PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A5 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x243A DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E4 JUMPI PUSH2 0x24F9 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DF PUSH2 0x2710 PUSH2 0x26D1 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A03 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26F1 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2704 DUP4 DUP6 PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2758 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AE0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27ED DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2997 JUMPI PUSH2 0x28AC DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A18 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A37 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A29 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A33 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD3 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEE JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0D JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xc5 SWAP4 PUSH17 0x3CF7CE24400F8771831253545864D5CAF9 0xb4 0xad PUSH30 0xCB77C1ED6541CF067C002900000000000000000000000000000000000000 ",
							"sourceMap": "9971:4917:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12795:181:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12049:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10155:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8714:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;13042:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11273:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10118:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2951:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10091:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3117:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2053:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8160:90;;;;;;;;;;;;;;8428:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4741:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7544:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11720:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7985:88;;;;;;;;;;;;;;8560:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1162:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10064;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10862:326:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14166:387;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13424:266;;;;;;;;;;;;;;;;;;;;;;;;;;13921:237;;;;;;;;;;;;;;;;;;;;;;;;;;12436:293;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3079:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8655:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8867:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;9035:324;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12795:181::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;12881:4;12868:10;;:17;;;;;;;;;;;;;;;;;;12914:16;12896:15;;:34;;;;;;;;;;;;;;;;;;12941:27;12951:16;12941:27;;;;;;;;;;;;;;;;;;;;;;12795:181;:::o;12049:302::-;12120:6;3303:1;3296:4;:8;3278;;:15;;:26;3276:29;3268:38;;;;;;;;12143:10;;;;;;;;;;;12139:205;;;12199:15;;;;;;;;;;;12177:54;;;12232:10;12244:8;12254:6;12177:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12170:91;;12139:205;12301:31;12315:8;12325:6;12301:13;:31::i;:::-;3317:1;12049:302;;;:::o;10155:22::-;;;;;;;;;;;;;:::o;8714:145::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;8811:4;8784:13;:24;8798:9;8784:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;8826:25;8841:9;8826:25;;;;;;;;;;;;;;;;;;;;;;8714:145;:::o;13042:218::-;13090:4;13111:10;;;;;;;;;;;13107:146;;;13159:15;;;;;;;;;;;13145:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13138:51;;;;13107:146;13229:12;;13222:19;;13042:218;;:::o;11273:362::-;7720:6;;;;;;;;;;;7719:7;7711:16;;;;;;;;11377:13;:20;11391:5;11377:20;;;;;;;;;;;;;;;;;;;;;;;;;11376:21;11368:30;;;;;;;;11413:10;;;;;;;;;;;11409:219;;;11469:15;;;;;;;;;;;11447:59;;;11507:10;11519:5;11526:3;11531:6;11447:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11440:98;;11409:219;11578:38;11597:5;11604:3;11609:6;11578:18;:38::i;:::-;7734:1;11273:362;;;:::o;10118:30::-;;;;;;;;;;;;;:::o;2951:40::-;;;;;;;;;;;;;;;;;:::o;10091:20::-;;;;:::o;3117:26::-;;;;:::o;2053:24::-;;;;:::o;8160:90::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;7880:6;;;;;;;;;;;7872:15;;;;;;;;8223:5;8214:6;;:14;;;;;;;;;;;;;;;;;;8235:9;;;;;;;;;;8160:90::o;8428:124::-;8499:4;8523:13;:21;8537:6;8523:21;;;;;;;;;;;;;;;;;;;;;;;;;8516:28;;8428:124;;;:::o;4741:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7544:26::-;;;;;;;;;;;;;:::o;11720:244::-;11777:4;11798:10;;;;;;;;;;;11794:163;;;11854:15;;;;;;;;;;;11832:48;;;11881:3;11832:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11825:60;;;;11794:163;11925:20;11941:3;11925:15;:20::i;:::-;11918:27;;11720:244;;;;:::o;7985:88::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;7720:6;;;;;;;;;;;7719:7;7711:16;;;;;;;;8049:4;8040:6;;:13;;;;;;;;;;;;;;;;;;8060:7;;;;;;;;;;7985:88::o;8560:87::-;8607:7;8634:5;;;;;;;;;;;8627:12;;8560:87;:::o;1162:20::-;;;;;;;;;;;;;:::o;10064:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10862:326::-;7720:6;;;;;;;;;;;7719:7;7711:16;;;;;;;;10947:13;:25;10961:10;10947:25;;;;;;;;;;;;;;;;;;;;;;;;;10946:26;10938:35;;;;;;;;10988:10;;;;;;;;;;;10984:197;;;11044:15;;;;;;;;;;;11022:55;;;11078:10;11090:3;11095:6;11022:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11015:87;;10984:197;11142:27;11157:3;11162:6;11142:14;:27::i;:::-;7734:1;10862:326;;:::o;14166:387::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;14364:2;14347:14;:19;14339:28;;;;;;;;14398:2;14386:9;:14;14378:23;;;;;;;;14432:14;14414:15;:32;;;;14470:27;14488:8;;14484:2;:12;14470:9;:13;;:27;;;;:::i;:::-;14457:10;:40;;;;14510:35;14517:15;;14534:10;;14510:35;;;;;;;;;;;;;;;;;;;;;;;;14166:387;;:::o;13424:266::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;13512:12;;13503:6;13488:12;;:21;:36;13480:45;;;;;;;;13571:8;:15;13580:5;;;;;;;;;;;13571:15;;;;;;;;;;;;;;;;13562:6;13544:8;:15;13553:5;;;;;;;;;;;13544:15;;;;;;;;;;;;;;;;:24;:42;13536:51;;;;;;;;13619:6;13600:8;:15;13609:5;;;;;;;;;;;13600:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;13652:6;13636:12;;:22;;;;;;;;;;;13669:13;13675:6;13669:13;;;;;;;;;;;;;;;;;;13424:266;:::o;13921:237::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;14002:6;13986:12;;:22;;13978:31;;;;;;;;14047:6;14028:8;:15;14037:5;;;;;;;;;;;14028:15;;;;;;;;;;;;;;;;:25;;14020:34;;;;;;;;14083:6;14067:12;;:22;;;;;;;;;;;14119:6;14100:8;:15;14109:5;;;;;;;;;;;14100:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;14136:14;14143:6;14136:14;;;;;;;;;;;;;;;;;;13921:237;:::o;12436:293::-;12514:14;12545:10;;;;;;;;;;;12541:181;;;12593:15;;;;;;;;;;;12579:40;;;12620:6;12628:8;12579:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12572:65;;;;12541:181;12677:33;12693:6;12701:8;12677:15;:33::i;:::-;12670:40;;12436:293;;;;;:::o;3079:31::-;;;;:::o;8655:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;8867:160::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;8973:5;8943:13;:27;8957:12;8943:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;8989:30;9006:12;8989:30;;;;;;;;;;;;;;;;;;;;;;8867:160;:::o;4811:42::-;4843:10;4811:42;:::o;1734:151::-;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;1831:1;1811:22;;:8;:22;;;;1807:71;;;1858:8;1850:5;;:16;;;;;;;;;;;;;;;;;;1807:71;1734:151;:::o;9035:324::-;9168:15;1534:5;;;;;;;;;;;1520:19;;:10;:19;;;1512:28;;;;;;;;9125:13;:31;9139:16;9125:31;;;;;;;;;;;;;;;;;;;;;;;;;9117:40;;;;;;;;9186:27;9196:16;9186:9;:27::i;:::-;9168:45;;9253:1;9224:8;:26;9233:16;9224:26;;;;;;;;;;;;;;;:30;;;;9281:10;9265:12;;:26;;;;;;;;;;;9302:49;9322:16;9340:10;9302:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;9035:324;;:::o;6291:573::-;6362:6;3303:1;3296:4;:8;3278;;:15;;:26;3276:29;3268:38;;;;;;;;6712:1;6702:6;:11;;6701:53;;;;;6752:1;6719:7;:19;6727:10;6719:19;;;;;;;;;;;;;;;:29;6739:8;6719:29;;;;;;;;;;;;;;;;:34;;6701:53;6699:56;6691:65;;;;;;;;6801:6;6769:7;:19;6777:10;6769:19;;;;;;;;;;;;;;;:29;6789:8;6769:29;;;;;;;;;;;;;;;:38;;;;6839:8;6818:38;;6827:10;6818:38;;;6849:6;6818:38;;;;;;;;;;;;;;;;;;6291:573;;;:::o;5143:901::-;5248:14;5462:8;5714:15;5229:6;3303:1;3296:4;:8;3278;;:15;;:26;3276:29;3268:38;;;;;;;;5265:7;:14;5273:5;5265:14;;;;;;;;;;;;;;;:26;5280:10;5265:26;;;;;;;;;;;;;;;;5248:43;;5473:40;5507:5;5474:27;5485:15;;5474:6;:10;;:27;;;;:::i;:::-;5473:33;;:40;;;;:::i;:::-;5462:51;;5534:10;;5528:3;:16;5524:65;;;5567:10;;5561:16;;5524:65;4843:10;5603;:21;5599:105;;;5670:22;5685:6;5670:10;:14;;:22;;;;:::i;:::-;5641:7;:14;5649:5;5641:14;;;;;;;;;;;;;;;:26;5656:10;5641:26;;;;;;;;;;;;;;;:51;;;;5599:105;5732:15;5743:3;5732:6;:10;;:15;;;;:::i;:::-;5714:33;;5776:27;5796:6;5776:8;:15;5785:5;5776:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;5758:8;:15;5767:5;5758:15;;;;;;;;;;;;;;;:45;;;;5830:29;5848:10;5830:8;:13;5839:3;5830:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;5814:8;:13;5823:3;5814:13;;;;;;;;;;;;;;;:45;;;;5880:1;5874:3;:7;5870:124;;;5916:24;5936:3;5916:8;:15;5925:5;;;;;;;;;;;5916:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;5898:8;:15;5907:5;;;;;;;;;;;5898:15;;;;;;;;;;;;;;;:42;;;;5971:5;;;;;;;;;;;5955:27;;5964:5;5955:27;;;5978:3;5955:27;;;;;;;;;;;;;;;;;;5870:124;6020:3;6004:32;;6013:5;6004:32;;;6025:10;6004:32;;;;;;;;;;;;;;;;;;5143:901;;;;;;;:::o;4290:116::-;4350:12;4382:8;:16;4391:6;4382:16;;;;;;;;;;;;;;;;4375:23;;4290:116;;;:::o;3499:573::-;3585:8;3722:15;3566:6;3303:1;3296:4;:8;3278;;:15;;:26;3276:29;3268:38;;;;;;;;3596:40;3630:5;3597:27;3608:15;;3597:6;:10;;:27;;;;:::i;:::-;3596:33;;:40;;;;:::i;:::-;3585:51;;3657:10;;3651:3;:16;3647:65;;;3690:10;;3684:16;;3647:65;3740:15;3751:3;3740:6;:10;;:15;;;;:::i;:::-;3722:33;;3789:32;3814:6;3789:8;:20;3798:10;3789:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;3766:8;:20;3775:10;3766:20;;;;;;;;;;;;;;;:55;;;;3848:29;3866:10;3848:8;:13;3857:3;3848:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;3832:8;:13;3841:3;3832:13;;;;;;;;;;;;;;;:45;;;;3898:1;3892:3;:7;3888:129;;;3934:24;3954:3;3934:8;:15;3943:5;;;;;;;;;;;3934:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;3916:8;:15;3925:5;;;;;;;;;;;3916:15;;;;;;;;;;;;;;;:42;;;;3994:5;;;;;;;;;;;3973:32;;3982:10;3973:32;;;4001:3;3973:32;;;;;;;;;;;;;;;;;;3888:129;4048:3;4027:37;;4036:10;4027:37;;;4053:10;4027:37;;;;;;;;;;;;;;;;;;3499:573;;;;;:::o;146:208::-;204:7;281:9;233:1;228;:6;224:47;;;258:1;251:8;;;;224:47;297:1;293;:5;281:17;;325:1;320;316;:5;;;;;;;;:10;309:18;;;;;;345:1;338:8;;146:208;;;;;;:::o;7197:145::-;7275:14;7309:7;:15;7317:6;7309:15;;;;;;;;;;;;;;;:25;7325:8;7309:25;;;;;;;;;;;;;;;;7302:32;;7197:145;;;;:::o;362:288::-;420:7;519:9;535:1;531;:5;;;;;;;;519:17;;641:1;634:8;;362:288;;;;;:::o;658:123::-;716:7;748:1;743;:6;;736:14;;;;;;772:1;768;:5;761:12;;658:123;;;;:::o;789:147::-;847:7;867:9;883:1;879;:5;867:17;;907:1;902;:6;;895:14;;;;;;927:1;920:8;;789:147;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2215000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_UINT()": "824",
								"_totalSupply()": "628",
								"addBlackList(address)": "21967",
								"allowance(address,address)": "infinite",
								"allowed(address,address)": "905",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"balances(address)": "678",
								"basisPointsRate()": "958",
								"decimals()": "584",
								"deprecate(address)": "42128",
								"deprecated()": "550",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "863",
								"getOwner()": "838",
								"isBlackListed(address)": "1133",
								"issue(uint256)": "44324",
								"maximumFee()": "606",
								"name()": "infinite",
								"owner()": "852",
								"pause()": "22184",
								"paused()": "814",
								"redeem(uint256)": "43614",
								"removeBlackList(address)": "22495",
								"setParams(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "21414",
								"unpause()": "22071",
								"upgradedAddress()": "588"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "MSTORE"
								},
								{
									"begin": 7565,
									"end": 7570,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP1"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "EXP"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP2"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SLOAD"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP2"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "MUL"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "NOT"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "AND"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SWAP1"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "DUP4"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "ISZERO"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "ISZERO"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "MUL"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "OR"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SWAP1"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "SSTORE"
								},
								{
									"begin": 7544,
									"end": 7570,
									"name": "POP"
								},
								{
									"begin": 3109,
									"end": 3110,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3079,
									"end": 3110,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 3079,
									"end": 3110,
									"name": "SSTORE"
								},
								{
									"begin": 3142,
									"end": 3143,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3117,
									"end": 3143,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3117,
									"end": 3143,
									"name": "SSTORE"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "CALLVALUE"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ISZERO"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "JUMPI"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "REVERT"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "JUMPDEST"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "MLOAD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "CODESIZE"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SUB"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP4"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "CODECOPY"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP2"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ADD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "MSTORE"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "MLOAD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ADD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP2"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "MLOAD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP3"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ADD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP2"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ADD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "MLOAD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP3"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ADD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP2"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ADD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "DUP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "MLOAD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "ADD"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP2"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "SWAP1"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "POP"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "POP"
								},
								{
									"begin": 1367,
									"end": 1377,
									"name": "CALLER"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1359,
									"end": 1364,
									"name": "DUP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "EXP"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP2"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SLOAD"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP2"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "MUL"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "NOT"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "AND"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SWAP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "DUP4"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "AND"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "MUL"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "OR"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SWAP1"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "SSTORE"
								},
								{
									"begin": 1359,
									"end": 1377,
									"name": "POP"
								},
								{
									"begin": 10602,
									"end": 10616,
									"name": "DUP4"
								},
								{
									"begin": 10587,
									"end": 10599,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10587,
									"end": 10616,
									"name": "DUP2"
								},
								{
									"begin": 10587,
									"end": 10616,
									"name": "SWAP1"
								},
								{
									"begin": 10587,
									"end": 10616,
									"name": "SSTORE"
								},
								{
									"begin": 10587,
									"end": 10616,
									"name": "POP"
								},
								{
									"begin": 10634,
									"end": 10639,
									"name": "DUP3"
								},
								{
									"begin": 10627,
									"end": 10631,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "SWAP1"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "DUP1"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "MLOAD"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "SWAP1"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "ADD"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "SWAP1"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "SWAP3"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "SWAP2"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "SWAP1"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "JUMPDEST"
								},
								{
									"begin": 10627,
									"end": 10639,
									"name": "POP"
								},
								{
									"begin": 10659,
									"end": 10666,
									"name": "DUP2"
								},
								{
									"begin": 10650,
									"end": 10656,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "SWAP1"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "DUP1"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "MLOAD"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "SWAP1"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "ADD"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "SWAP1"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "SWAP3"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "SWAP2"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "SWAP1"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "JUMPDEST"
								},
								{
									"begin": 10650,
									"end": 10666,
									"name": "POP"
								},
								{
									"begin": 10688,
									"end": 10697,
									"name": "DUP1"
								},
								{
									"begin": 10677,
									"end": 10685,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 10677,
									"end": 10697,
									"name": "DUP2"
								},
								{
									"begin": 10677,
									"end": 10697,
									"name": "SWAP1"
								},
								{
									"begin": 10677,
									"end": 10697,
									"name": "SSTORE"
								},
								{
									"begin": 10677,
									"end": 10697,
									"name": "POP"
								},
								{
									"begin": 10726,
									"end": 10740,
									"name": "DUP4"
								},
								{
									"begin": 10708,
									"end": 10716,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "DUP1"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "SWAP1"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "SLOAD"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "SWAP1"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "EXP"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "SWAP1"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "DIV"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10717,
									"end": 10722,
									"name": "AND"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "AND"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "AND"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "DUP2"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "MSTORE"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "ADD"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "SWAP1"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "DUP2"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "MSTORE"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "ADD"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10708,
									"end": 10723,
									"name": "KECCAK256"
								},
								{
									"begin": 10708,
									"end": 10740,
									"name": "DUP2"
								},
								{
									"begin": 10708,
									"end": 10740,
									"name": "SWAP1"
								},
								{
									"begin": 10708,
									"end": 10740,
									"name": "SSTORE"
								},
								{
									"begin": 10708,
									"end": 10740,
									"name": "POP"
								},
								{
									"begin": 10764,
									"end": 10769,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10751,
									"end": 10761,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 10751,
									"end": 10761,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "EXP"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "DUP2"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "SLOAD"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "DUP2"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "MUL"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "NOT"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "AND"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "SWAP1"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "DUP4"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "ISZERO"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "ISZERO"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "MUL"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "OR"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "SWAP1"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "SSTORE"
								},
								{
									"begin": 10751,
									"end": 10769,
									"name": "POP"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "POP"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "POP"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "POP"
								},
								{
									"begin": 10481,
									"end": 10777,
									"name": "POP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SLOAD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "AND"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ISZERO"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "MUL"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SUB"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "AND"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DIV"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "MSTORE"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "KECCAK256"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DIV"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "LT"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPI"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "MLOAD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "NOT"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "AND"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP4"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "OR"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP6"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SSTORE"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP6"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SSTORE"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ISZERO"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPI"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "GT"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ISZERO"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPI"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "MLOAD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SSTORE"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "POP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "POP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "POP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP3"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "GT"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ISZERO"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPI"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP2"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SSTORE"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "POP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "ADD"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "POP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "SWAP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "JUMPDEST"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "DUP1"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "CODECOPY"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9971,
									"end": 14888,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820c593703cf7ce24400f8771831253545864d5caf9b4ad7dcb77c1ed6541cf067c0029",
									".code": [
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "MSTORE"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "LT"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "SWAP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DIV"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "AND"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "753C30C"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "E136B19"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "ECB93C0"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "26976E3F"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "35390714"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "3EAAF86B"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "59BF1ABE"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "5C658165"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "C0324C77"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "CC872B66"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "DB006A75"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "E47D6060"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "E4997DC5"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "E5B5019A"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "F3BDC228"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "EQ"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPI"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "JUMPDEST"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "DUP1"
										},
										{
											"begin": 9971,
											"end": 14888,
											"name": "REVERT"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "CALLVALUE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ISZERO"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPI"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "REVERT"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SUB"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "JUMPDEST"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "CALLVALUE"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "ISZERO"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "JUMPI"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "DUP1"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "REVERT"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "JUMPDEST"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "DUP1"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "DUP1"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "AND"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "SWAP1"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "ADD"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "SWAP1"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "SWAP2"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "SWAP1"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "POP"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "POP"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "JUMP"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "JUMPDEST"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "STOP"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "JUMPDEST"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "CALLVALUE"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "ISZERO"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "JUMPI"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "DUP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "REVERT"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "JUMPDEST"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "DUP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "DUP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "AND"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "ADD"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP2"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "DUP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "ADD"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP2"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "SWAP1"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "POP"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "POP"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "JUMP"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "JUMPDEST"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "STOP"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "JUMPDEST"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "CALLVALUE"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "ISZERO"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "JUMPI"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "DUP1"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "REVERT"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "JUMPDEST"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "JUMP"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "JUMPDEST"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "MLOAD"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "DUP1"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "DUP3"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "ISZERO"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "ISZERO"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "ISZERO"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "ISZERO"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "DUP2"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "MSTORE"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "ADD"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SWAP2"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "POP"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "POP"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "MLOAD"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "DUP1"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SWAP2"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SUB"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SWAP1"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "RETURN"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "JUMPDEST"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "CALLVALUE"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "ISZERO"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "JUMPI"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "DUP1"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "REVERT"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "JUMPDEST"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "DUP1"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "DUP1"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "AND"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "SWAP1"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "ADD"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "SWAP1"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "SWAP2"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "SWAP1"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "JUMP"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "JUMPDEST"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "STOP"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMPDEST"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "CALLVALUE"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "ISZERO"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMPI"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "DUP1"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "REVERT"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMPDEST"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMP"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMPDEST"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "MLOAD"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "DUP1"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "DUP3"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "DUP2"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "MSTORE"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "ADD"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "SWAP2"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "POP"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "POP"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "MLOAD"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "DUP1"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "SWAP2"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "SUB"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "SWAP1"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "RETURN"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "CALLVALUE"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "ISZERO"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "JUMPI"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "DUP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "REVERT"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "DUP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "DUP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "AND"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "ADD"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP2"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "DUP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "AND"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "ADD"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP2"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "DUP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "ADD"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP2"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "SWAP1"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "JUMP"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "STOP"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "JUMPDEST"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "CALLVALUE"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "ISZERO"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "JUMPI"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "REVERT"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "JUMPDEST"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "JUMP"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "JUMPDEST"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "MLOAD"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "DUP3"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "AND"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "AND"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "DUP2"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "MSTORE"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "ADD"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SWAP2"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "POP"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "MLOAD"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "DUP1"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SWAP2"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SUB"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "RETURN"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "JUMPDEST"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "CALLVALUE"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "ISZERO"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "JUMPI"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "REVERT"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "JUMPDEST"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "AND"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "ADD"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP2"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "POP"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "POP"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "JUMP"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "JUMPDEST"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "MLOAD"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP3"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP2"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "MSTORE"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "ADD"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP2"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "POP"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "POP"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "MLOAD"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP2"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SUB"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "RETURN"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "JUMPDEST"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "CALLVALUE"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "ISZERO"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "JUMPI"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "DUP1"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "REVERT"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "JUMPDEST"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "JUMP"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "JUMPDEST"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "MLOAD"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "DUP1"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "DUP3"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "DUP2"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "MSTORE"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "ADD"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "SWAP2"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "POP"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "POP"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "MLOAD"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "DUP1"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "SWAP2"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "SUB"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "SWAP1"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "RETURN"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMPDEST"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "CALLVALUE"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "ISZERO"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMPI"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "DUP1"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "REVERT"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMPDEST"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMP"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMPDEST"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "MLOAD"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "DUP1"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "DUP3"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "DUP2"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "MSTORE"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "ADD"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "SWAP2"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "POP"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "POP"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "MLOAD"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "DUP1"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "SWAP2"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "SUB"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "SWAP1"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "RETURN"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "CALLVALUE"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "ISZERO"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "JUMPI"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "REVERT"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "JUMP"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "MLOAD"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "DUP3"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "MSTORE"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "MLOAD"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "SUB"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "RETURN"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "CALLVALUE"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "ISZERO"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPI"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "DUP1"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "REVERT"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMP"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "STOP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "JUMPDEST"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "CALLVALUE"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "ISZERO"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "JUMPI"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "DUP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "REVERT"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "JUMPDEST"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "DUP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "DUP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "AND"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "ADD"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP2"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "POP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "POP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "JUMP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "JUMPDEST"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "MLOAD"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "DUP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "DUP3"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "ISZERO"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "ISZERO"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "ISZERO"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "ISZERO"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "DUP2"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "MSTORE"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "ADD"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP2"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "POP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "POP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "MLOAD"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "DUP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP2"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SUB"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "RETURN"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "JUMPDEST"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "CALLVALUE"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "ISZERO"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "JUMPI"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "REVERT"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "JUMPDEST"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "AND"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "ADD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "AND"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "ADD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "JUMP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "JUMPDEST"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "MLOAD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP3"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "ADD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "MLOAD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SUB"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "RETURN"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "CALLVALUE"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPI"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "REVERT"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "MLOAD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP3"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ISZERO"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "MSTORE"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "ADD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "POP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "POP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "MLOAD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SUB"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "RETURN"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "CALLVALUE"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "ISZERO"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMPI"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "DUP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "REVERT"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "DUP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "DUP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "AND"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP2"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMP"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "MLOAD"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "DUP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "DUP3"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "DUP2"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "MSTORE"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "ADD"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP2"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "MLOAD"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "DUP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP2"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SUB"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "RETURN"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "CALLVALUE"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "ISZERO"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPI"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "DUP1"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "REVERT"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMP"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "STOP"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "JUMPDEST"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "CALLVALUE"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "ISZERO"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "JUMPI"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "DUP1"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "REVERT"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "JUMPDEST"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "JUMP"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "JUMPDEST"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "MLOAD"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "DUP1"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "DUP3"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "AND"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "AND"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "DUP2"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "MSTORE"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "ADD"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "SWAP2"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "POP"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "POP"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "MLOAD"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "DUP1"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "SWAP2"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "SUB"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "SWAP1"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "RETURN"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "CALLVALUE"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "ISZERO"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPI"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "REVERT"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP3"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MSTORE"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "ADD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SUB"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "RETURN"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPDEST"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "CALLVALUE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ISZERO"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPI"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "REVERT"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPDEST"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPDEST"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP3"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SUB"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP3"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MSTORE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP4"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MSTORE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "POP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP4"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "JUMPDEST"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "CALLVALUE"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "ISZERO"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "JUMPI"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "DUP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "REVERT"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "JUMPDEST"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "DUP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "DUP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "AND"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "ADD"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP2"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "DUP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "ADD"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP2"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "SWAP1"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "POP"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "POP"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "JUMP"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "JUMPDEST"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "STOP"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "JUMPDEST"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "CALLVALUE"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "ISZERO"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "JUMPI"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "DUP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "REVERT"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "JUMPDEST"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "DUP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "DUP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "ADD"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP2"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "DUP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "ADD"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP2"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "SWAP1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "POP"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "POP"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "JUMP"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "JUMPDEST"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "STOP"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "JUMPDEST"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "CALLVALUE"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "ISZERO"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "JUMPI"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "DUP1"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "REVERT"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "JUMPDEST"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "DUP1"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "DUP1"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "SWAP1"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "ADD"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "SWAP1"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "SWAP2"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "SWAP1"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "POP"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "POP"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "JUMP"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "JUMPDEST"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "STOP"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "JUMPDEST"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "CALLVALUE"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "ISZERO"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "JUMPI"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "DUP1"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "REVERT"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "JUMPDEST"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "DUP1"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "DUP1"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "SWAP1"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "ADD"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "SWAP1"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "SWAP2"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "SWAP1"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "POP"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "POP"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "JUMP"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "JUMPDEST"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "STOP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMPDEST"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "CALLVALUE"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "ISZERO"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMPI"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "REVERT"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMPDEST"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "AND"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "ADD"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP2"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "AND"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "ADD"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP2"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "POP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "POP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMPDEST"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "MLOAD"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP3"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP2"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "MSTORE"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "ADD"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP2"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "POP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "POP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "MLOAD"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "DUP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP2"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SUB"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "RETURN"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "JUMPDEST"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "CALLVALUE"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "ISZERO"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "JUMPI"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "REVERT"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "JUMPDEST"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "JUMP"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "JUMPDEST"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "MLOAD"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "DUP3"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "MSTORE"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "ADD"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "SWAP2"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "POP"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "MLOAD"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "DUP1"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "SWAP2"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "SUB"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "SWAP1"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "RETURN"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "JUMPDEST"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "CALLVALUE"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "ISZERO"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "JUMPI"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "REVERT"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "JUMPDEST"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "AND"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "ADD"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP2"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "POP"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "POP"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "JUMP"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "JUMPDEST"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "MLOAD"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP3"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "ISZERO"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "ISZERO"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "ISZERO"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "ISZERO"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP2"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "MSTORE"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "ADD"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP2"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "POP"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "POP"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "MLOAD"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP2"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SUB"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "RETURN"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "JUMPDEST"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "CALLVALUE"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "ISZERO"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "JUMPI"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "DUP1"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "REVERT"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "JUMPDEST"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "DUP1"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "DUP1"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "AND"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "SWAP1"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "ADD"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "SWAP1"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "SWAP2"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "SWAP1"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "POP"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "POP"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "JUMP"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "JUMPDEST"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "STOP"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "CALLVALUE"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "ISZERO"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "JUMPI"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "REVERT"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "JUMP"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "MLOAD"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "DUP3"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "DUP2"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "MSTORE"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "ADD"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "SWAP2"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "MLOAD"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "DUP1"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "SWAP2"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "SUB"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "RETURN"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "CALLVALUE"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "ISZERO"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPI"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "REVERT"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "DUP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "AND"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "ADD"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP2"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "SWAP1"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "STOP"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "JUMPDEST"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "CALLVALUE"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "ISZERO"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "JUMPI"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "DUP1"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "REVERT"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "JUMPDEST"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "DUP1"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "DUP1"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "AND"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "SWAP1"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "ADD"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "SWAP1"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "SWAP2"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "SWAP1"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "POP"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "POP"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "JUMP"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "JUMPDEST"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "STOP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "AND"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ISZERO"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MUL"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SUB"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "AND"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DIV"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DIV"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MUL"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP3"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "AND"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ISZERO"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MUL"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SUB"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "AND"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DIV"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ISZERO"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPI"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "LT"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPI"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DIV"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MUL"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "KECCAK256"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SLOAD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "MSTORE"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP4"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "GT"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPI"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP1"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SUB"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "AND"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP3"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "ADD"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "SWAP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMPDEST"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "POP"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "DUP2"
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 12881,
											"end": 12885,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12868,
											"end": 12878,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12868,
											"end": 12878,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "EXP"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "DUP2"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "SLOAD"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "DUP2"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "MUL"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "NOT"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "AND"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "SWAP1"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "DUP4"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "ISZERO"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "ISZERO"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "MUL"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "OR"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "SWAP1"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "SSTORE"
										},
										{
											"begin": 12868,
											"end": 12885,
											"name": "POP"
										},
										{
											"begin": 12914,
											"end": 12930,
											"name": "DUP1"
										},
										{
											"begin": 12896,
											"end": 12911,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12896,
											"end": 12911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "EXP"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "DUP2"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "SLOAD"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "DUP2"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "MUL"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "NOT"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "AND"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "SWAP1"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "DUP4"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "AND"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "MUL"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "OR"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "SWAP1"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "SSTORE"
										},
										{
											"begin": 12896,
											"end": 12930,
											"name": "POP"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "PUSH",
											"value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
										},
										{
											"begin": 12951,
											"end": 12967,
											"name": "DUP2"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "MLOAD"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "DUP1"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "DUP3"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "AND"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "AND"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "DUP2"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "MSTORE"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "ADD"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "SWAP2"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "POP"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "POP"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "MLOAD"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "DUP1"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "SWAP2"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "SUB"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "SWAP1"
										},
										{
											"begin": 12941,
											"end": 12968,
											"name": "LOG1"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "POP"
										},
										{
											"begin": 12795,
											"end": 12976,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "JUMPDEST"
										},
										{
											"begin": 12120,
											"end": 12126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "DUP2"
										},
										{
											"begin": 3296,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "LT"
										},
										{
											"begin": 3276,
											"end": 3305,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPI"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "DUP1"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "REVERT"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPDEST"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "SLOAD"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "EXP"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "SWAP1"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "DIV"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12143,
											"end": 12153,
											"name": "AND"
										},
										{
											"begin": 12139,
											"end": 12344,
											"name": "ISZERO"
										},
										{
											"begin": 12139,
											"end": 12344,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 12139,
											"end": 12344,
											"name": "JUMPI"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "SWAP1"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "SLOAD"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "SWAP1"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "EXP"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "SWAP1"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "DIV"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "AND"
										},
										{
											"begin": 12177,
											"end": 12231,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12231,
											"name": "AND"
										},
										{
											"begin": 12177,
											"end": 12231,
											"name": "PUSH",
											"value": "AEE92D33"
										},
										{
											"begin": 12232,
											"end": 12242,
											"name": "CALLER"
										},
										{
											"begin": 12244,
											"end": 12252,
											"name": "DUP6"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "DUP6"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "MLOAD"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP5"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "MUL"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP5"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP4"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP3"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "SWAP4"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "MLOAD"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP4"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "SUB"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP8"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "JUMPI"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "REVERT"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "JUMPDEST"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "GAS"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "SUB"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "CALL"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "JUMPI"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "REVERT"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "JUMPDEST"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12177,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12170,
											"end": 12261,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 12170,
											"end": 12261,
											"name": "JUMP"
										},
										{
											"begin": 12139,
											"end": 12344,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 12139,
											"end": 12344,
											"name": "JUMPDEST"
										},
										{
											"begin": 12301,
											"end": 12332,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 12315,
											"end": 12323,
											"name": "DUP4"
										},
										{
											"begin": 12325,
											"end": 12331,
											"name": "DUP4"
										},
										{
											"begin": 12301,
											"end": 12314,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 12301,
											"end": 12332,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12301,
											"end": 12332,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 12301,
											"end": 12332,
											"name": "JUMPDEST"
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "JUMPDEST"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "POP"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "POP"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "POP"
										},
										{
											"begin": 12049,
											"end": 12351,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "JUMPDEST"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SWAP1"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SLOAD"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SWAP1"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "EXP"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "SWAP1"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "DIV"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "AND"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "DUP2"
										},
										{
											"begin": 10155,
											"end": 10177,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 8811,
											"end": 8815,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8784,
											"end": 8797,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8807,
											"name": "DUP4"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "AND"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "AND"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "DUP2"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "MSTORE"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "ADD"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "SWAP1"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "DUP2"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "MSTORE"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "ADD"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "KECCAK256"
										},
										{
											"begin": 8784,
											"end": 8808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "EXP"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "DUP2"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "SLOAD"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "DUP2"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "MUL"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "NOT"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "AND"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "SWAP1"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "DUP4"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "ISZERO"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "ISZERO"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "MUL"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "OR"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "SWAP1"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "SSTORE"
										},
										{
											"begin": 8784,
											"end": 8815,
											"name": "POP"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "PUSH",
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 8841,
											"end": 8850,
											"name": "DUP2"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "MLOAD"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "DUP1"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "DUP3"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "AND"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "AND"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "DUP2"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "MSTORE"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "ADD"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "SWAP2"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "POP"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "POP"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "MLOAD"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "DUP1"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "SWAP2"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "SUB"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "SWAP1"
										},
										{
											"begin": 8826,
											"end": 8851,
											"name": "LOG1"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "POP"
										},
										{
											"begin": 8714,
											"end": 8859,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMPDEST"
										},
										{
											"begin": 13090,
											"end": 13094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "SLOAD"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "EXP"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "SWAP1"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "DIV"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13111,
											"end": 13121,
											"name": "AND"
										},
										{
											"begin": 13107,
											"end": 13253,
											"name": "ISZERO"
										},
										{
											"begin": 13107,
											"end": 13253,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 13107,
											"end": 13253,
											"name": "JUMPI"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "SWAP1"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "SLOAD"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "SWAP1"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "EXP"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "SWAP1"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "DIV"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "AND"
										},
										{
											"begin": 13145,
											"end": 13187,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13145,
											"end": 13187,
											"name": "AND"
										},
										{
											"begin": 13145,
											"end": 13187,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MLOAD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "ADD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MSTORE"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MLOAD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP2"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "AND"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MUL"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP2"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MSTORE"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "ADD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MLOAD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP1"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP4"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "SUB"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP2"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP8"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP1"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "ISZERO"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "ISZERO"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "JUMPI"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP1"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "REVERT"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "JUMPDEST"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "GAS"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "SUB"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "CALL"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "ISZERO"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "ISZERO"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "JUMPI"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP1"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "REVERT"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "JUMPDEST"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "POP"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "POP"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "POP"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MLOAD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "DUP1"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "MLOAD"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "SWAP1"
										},
										{
											"begin": 13145,
											"end": 13189,
											"name": "POP"
										},
										{
											"begin": 13138,
											"end": 13189,
											"name": "SWAP1"
										},
										{
											"begin": 13138,
											"end": 13189,
											"name": "POP"
										},
										{
											"begin": 13138,
											"end": 13189,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 13138,
											"end": 13189,
											"name": "JUMP"
										},
										{
											"begin": 13107,
											"end": 13253,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 13107,
											"end": 13253,
											"name": "JUMPDEST"
										},
										{
											"begin": 13229,
											"end": 13241,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13229,
											"end": 13241,
											"name": "SLOAD"
										},
										{
											"begin": 13222,
											"end": 13241,
											"name": "SWAP1"
										},
										{
											"begin": 13222,
											"end": 13241,
											"name": "POP"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMPDEST"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "SWAP1"
										},
										{
											"begin": 13042,
											"end": 13260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "JUMPDEST"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SLOAD"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "EXP"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DIV"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "AND"
										},
										{
											"begin": 7719,
											"end": 7726,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPI"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "DUP1"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "REVERT"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPDEST"
										},
										{
											"begin": 11377,
											"end": 11390,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11396,
											"name": "DUP5"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "AND"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "AND"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "DUP2"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "MSTORE"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "ADD"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "SWAP1"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "DUP2"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "MSTORE"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "ADD"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "KECCAK256"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "SWAP1"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "SLOAD"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "SWAP1"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "EXP"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "SWAP1"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "DIV"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11377,
											"end": 11397,
											"name": "AND"
										},
										{
											"begin": 11376,
											"end": 11397,
											"name": "ISZERO"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "ISZERO"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "ISZERO"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "JUMPI"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "DUP1"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "REVERT"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "JUMPDEST"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "SWAP1"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "SLOAD"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "SWAP1"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "EXP"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "SWAP1"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "DIV"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "AND"
										},
										{
											"begin": 11409,
											"end": 11628,
											"name": "ISZERO"
										},
										{
											"begin": 11409,
											"end": 11628,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 11409,
											"end": 11628,
											"name": "JUMPI"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "SWAP1"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "SLOAD"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "SWAP1"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "EXP"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "SWAP1"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "DIV"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11469,
											"end": 11484,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11506,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11506,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11506,
											"name": "PUSH",
											"value": "8B477ADB"
										},
										{
											"begin": 11507,
											"end": 11517,
											"name": "CALLER"
										},
										{
											"begin": 11519,
											"end": 11524,
											"name": "DUP6"
										},
										{
											"begin": 11526,
											"end": 11529,
											"name": "DUP6"
										},
										{
											"begin": 11531,
											"end": 11537,
											"name": "DUP6"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MLOAD"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP6"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MUL"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP2"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MSTORE"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ADD"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP1"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP6"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP2"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MSTORE"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ADD"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP5"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP2"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MSTORE"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ADD"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP4"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "AND"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP2"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MSTORE"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ADD"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP3"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP2"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MSTORE"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ADD"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "SWAP5"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "MLOAD"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP1"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP4"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "SUB"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP2"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP8"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP1"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ISZERO"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ISZERO"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "JUMPI"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP1"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "REVERT"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "JUMPDEST"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "GAS"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "SUB"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "CALL"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ISZERO"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "ISZERO"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "JUMPI"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "DUP1"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "REVERT"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "JUMPDEST"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11447,
											"end": 11538,
											"name": "POP"
										},
										{
											"begin": 11440,
											"end": 11538,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 11440,
											"end": 11538,
											"name": "JUMP"
										},
										{
											"begin": 11409,
											"end": 11628,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 11409,
											"end": 11628,
											"name": "JUMPDEST"
										},
										{
											"begin": 11578,
											"end": 11616,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 11597,
											"end": 11602,
											"name": "DUP4"
										},
										{
											"begin": 11604,
											"end": 11607,
											"name": "DUP4"
										},
										{
											"begin": 11609,
											"end": 11615,
											"name": "DUP4"
										},
										{
											"begin": 11578,
											"end": 11596,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11578,
											"end": 11616,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11578,
											"end": 11616,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 11578,
											"end": 11616,
											"name": "JUMPDEST"
										},
										{
											"begin": 7734,
											"end": 7735,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 7734,
											"end": 7735,
											"name": "JUMPDEST"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "POP"
										},
										{
											"begin": 11273,
											"end": 11635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "JUMPDEST"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SLOAD"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "EXP"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "SWAP1"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "DIV"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "AND"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "DUP2"
										},
										{
											"begin": 10118,
											"end": 10148,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "JUMPDEST"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "MSTORE"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "MSTORE"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "KECCAK256"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP2"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "POP"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SWAP1"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "POP"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "SLOAD"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "DUP2"
										},
										{
											"begin": 2951,
											"end": 2991,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "JUMPDEST"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "SLOAD"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "DUP2"
										},
										{
											"begin": 10091,
											"end": 10111,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMPDEST"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "SLOAD"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "DUP2"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "SLOAD"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SWAP1"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SLOAD"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SWAP1"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "EXP"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "SWAP1"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DIV"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "AND"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "ISZERO"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "ISZERO"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "JUMPI"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "DUP1"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "REVERT"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7872,
											"end": 7887,
											"name": "JUMPDEST"
										},
										{
											"begin": 8223,
											"end": 8228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8220,
											"name": "DUP1"
										},
										{
											"begin": 8214,
											"end": 8220,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "EXP"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "DUP2"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SLOAD"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "DUP2"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "MUL"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "NOT"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "AND"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SWAP1"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "DUP4"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "ISZERO"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "ISZERO"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "MUL"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "OR"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SWAP1"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SSTORE"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "MLOAD"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "MLOAD"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "SWAP2"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "SUB"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8244,
											"name": "LOG1"
										},
										{
											"begin": 8160,
											"end": 8250,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "JUMPDEST"
										},
										{
											"begin": 8499,
											"end": 8503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8536,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP4"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "AND"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "AND"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "DUP2"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "MSTORE"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "ADD"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "SWAP1"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "DUP2"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "MSTORE"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "ADD"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "KECCAK256"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "SWAP1"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "SLOAD"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "SWAP1"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "EXP"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "SWAP1"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "DIV"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8523,
											"end": 8544,
											"name": "AND"
										},
										{
											"begin": 8516,
											"end": 8544,
											"name": "SWAP1"
										},
										{
											"begin": 8516,
											"end": 8544,
											"name": "POP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP2"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "SWAP1"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "POP"
										},
										{
											"begin": 8428,
											"end": 8552,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "JUMPDEST"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "KECCAK256"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP1"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "MSTORE"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "KECCAK256"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SWAP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "POP"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "SLOAD"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "DUP2"
										},
										{
											"begin": 4741,
											"end": 4802,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMPDEST"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SLOAD"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "EXP"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "SWAP1"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DIV"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "AND"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "DUP2"
										},
										{
											"begin": 7544,
											"end": 7570,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMPDEST"
										},
										{
											"begin": 11777,
											"end": 11781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "SWAP1"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "SLOAD"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "SWAP1"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "EXP"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "SWAP1"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "DIV"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11798,
											"end": 11808,
											"name": "AND"
										},
										{
											"begin": 11794,
											"end": 11957,
											"name": "ISZERO"
										},
										{
											"begin": 11794,
											"end": 11957,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 11794,
											"end": 11957,
											"name": "JUMPI"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "SWAP1"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "SLOAD"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "SWAP1"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "EXP"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "SWAP1"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "DIV"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11854,
											"end": 11869,
											"name": "AND"
										},
										{
											"begin": 11832,
											"end": 11880,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11832,
											"end": 11880,
											"name": "AND"
										},
										{
											"begin": 11832,
											"end": 11880,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11881,
											"end": 11884,
											"name": "DUP4"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "AND"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MUL"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP3"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "AND"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "AND"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MSTORE"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "ADD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "SWAP2"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP4"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "SUB"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP2"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP8"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "ISZERO"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "ISZERO"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "JUMPI"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "REVERT"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "JUMPDEST"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "GAS"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "SUB"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "CALL"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "ISZERO"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "ISZERO"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "JUMPI"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "REVERT"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "JUMPDEST"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "POP"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "DUP1"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "MLOAD"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11885,
											"name": "POP"
										},
										{
											"begin": 11825,
											"end": 11885,
											"name": "SWAP1"
										},
										{
											"begin": 11825,
											"end": 11885,
											"name": "POP"
										},
										{
											"begin": 11825,
											"end": 11885,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 11825,
											"end": 11885,
											"name": "JUMP"
										},
										{
											"begin": 11794,
											"end": 11957,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 11794,
											"end": 11957,
											"name": "JUMPDEST"
										},
										{
											"begin": 11925,
											"end": 11945,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 11941,
											"end": 11944,
											"name": "DUP3"
										},
										{
											"begin": 11925,
											"end": 11940,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 11925,
											"end": 11945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11925,
											"end": 11945,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 11925,
											"end": 11945,
											"name": "JUMPDEST"
										},
										{
											"begin": 11918,
											"end": 11945,
											"name": "SWAP1"
										},
										{
											"begin": 11918,
											"end": 11945,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMPDEST"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP2"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "SWAP1"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "POP"
										},
										{
											"begin": 11720,
											"end": 11964,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SLOAD"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "EXP"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DIV"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "AND"
										},
										{
											"begin": 7719,
											"end": 7726,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPI"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "DUP1"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "REVERT"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPDEST"
										},
										{
											"begin": 8049,
											"end": 8053,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "EXP"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "DUP2"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SLOAD"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "DUP2"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "MUL"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "NOT"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "AND"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SWAP1"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "DUP4"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "ISZERO"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "ISZERO"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "MUL"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "OR"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SWAP1"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "SSTORE"
										},
										{
											"begin": 8040,
											"end": 8053,
											"name": "POP"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "MLOAD"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "MLOAD"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP1"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "SWAP2"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "SUB"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "SWAP1"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "LOG1"
										},
										{
											"begin": 7985,
											"end": 8073,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "JUMPDEST"
										},
										{
											"begin": 8607,
											"end": 8614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "DUP1"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "SWAP1"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "SLOAD"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "SWAP1"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "EXP"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "SWAP1"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "DIV"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8634,
											"end": 8639,
											"name": "AND"
										},
										{
											"begin": 8627,
											"end": 8639,
											"name": "SWAP1"
										},
										{
											"begin": 8627,
											"end": 8639,
											"name": "POP"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "SWAP1"
										},
										{
											"begin": 8560,
											"end": 8647,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SLOAD"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "EXP"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DIV"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "AND"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP2"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPDEST"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "AND"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ISZERO"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MUL"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SUB"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "AND"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DIV"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DIV"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MUL"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MSTORE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP3"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MSTORE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP3"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "AND"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ISZERO"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MUL"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SUB"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "AND"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DIV"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ISZERO"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPI"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "LT"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPI"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP4"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DIV"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MUL"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP4"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MSTORE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPDEST"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP3"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MSTORE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "KECCAK256"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPDEST"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SLOAD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "MSTORE"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP4"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "GT"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPI"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP3"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP1"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SUB"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "AND"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP3"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "ADD"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "SWAP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMPDEST"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "POP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "POP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "POP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "POP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "POP"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "DUP2"
										},
										{
											"begin": 10064,
											"end": 10084,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "JUMPDEST"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SLOAD"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "EXP"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "SWAP1"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DIV"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "AND"
										},
										{
											"begin": 7719,
											"end": 7726,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "ISZERO"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPI"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "DUP1"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "REVERT"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 7711,
											"end": 7727,
											"name": "JUMPDEST"
										},
										{
											"begin": 10947,
											"end": 10960,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10961,
											"end": 10971,
											"name": "CALLER"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "AND"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "AND"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "DUP2"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "MSTORE"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "ADD"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "DUP2"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "MSTORE"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "ADD"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "KECCAK256"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "SLOAD"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "EXP"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "SWAP1"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "DIV"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10947,
											"end": 10972,
											"name": "AND"
										},
										{
											"begin": 10946,
											"end": 10972,
											"name": "ISZERO"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "ISZERO"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "ISZERO"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "JUMPI"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "DUP1"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "REVERT"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "JUMPDEST"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "SWAP1"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "SLOAD"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "SWAP1"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "EXP"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "SWAP1"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "DIV"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10988,
											"end": 10998,
											"name": "AND"
										},
										{
											"begin": 10984,
											"end": 11181,
											"name": "ISZERO"
										},
										{
											"begin": 10984,
											"end": 11181,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 10984,
											"end": 11181,
											"name": "JUMPI"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "SWAP1"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "SLOAD"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "SWAP1"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "EXP"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "SWAP1"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "DIV"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11044,
											"end": 11059,
											"name": "AND"
										},
										{
											"begin": 11022,
											"end": 11077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11022,
											"end": 11077,
											"name": "AND"
										},
										{
											"begin": 11022,
											"end": 11077,
											"name": "PUSH",
											"value": "6E18980A"
										},
										{
											"begin": 11078,
											"end": 11088,
											"name": "CALLER"
										},
										{
											"begin": 11090,
											"end": 11093,
											"name": "DUP5"
										},
										{
											"begin": 11095,
											"end": 11101,
											"name": "DUP5"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "MLOAD"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP5"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "AND"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "MUL"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP2"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "MSTORE"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ADD"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP1"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP5"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "AND"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "AND"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP2"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "MSTORE"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ADD"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP4"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "AND"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "AND"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP2"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "MSTORE"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ADD"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP3"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP2"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "MSTORE"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ADD"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "SWAP4"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "POP"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "POP"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "POP"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "POP"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "MLOAD"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP1"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP4"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "SUB"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP2"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP8"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP1"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ISZERO"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ISZERO"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "JUMPI"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP1"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "REVERT"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "JUMPDEST"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "GAS"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "SUB"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "CALL"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ISZERO"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "ISZERO"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "JUMPI"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "DUP1"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "REVERT"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "JUMPDEST"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "POP"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "POP"
										},
										{
											"begin": 11022,
											"end": 11102,
											"name": "POP"
										},
										{
											"begin": 11015,
											"end": 11102,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 11015,
											"end": 11102,
											"name": "JUMP"
										},
										{
											"begin": 10984,
											"end": 11181,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 10984,
											"end": 11181,
											"name": "JUMPDEST"
										},
										{
											"begin": 11142,
											"end": 11169,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 11157,
											"end": 11160,
											"name": "DUP3"
										},
										{
											"begin": 11162,
											"end": 11168,
											"name": "DUP3"
										},
										{
											"begin": 11142,
											"end": 11156,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 11142,
											"end": 11169,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11142,
											"end": 11169,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 11142,
											"end": 11169,
											"name": "JUMPDEST"
										},
										{
											"begin": 7734,
											"end": 7735,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 7734,
											"end": 7735,
											"name": "JUMPDEST"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "POP"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "POP"
										},
										{
											"begin": 10862,
											"end": 11188,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 14364,
											"end": 14366,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 14347,
											"end": 14361,
											"name": "DUP3"
										},
										{
											"begin": 14347,
											"end": 14366,
											"name": "LT"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "ISZERO"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "ISZERO"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "JUMPI"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "DUP1"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "REVERT"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 14339,
											"end": 14367,
											"name": "JUMPDEST"
										},
										{
											"begin": 14398,
											"end": 14400,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 14386,
											"end": 14395,
											"name": "DUP2"
										},
										{
											"begin": 14386,
											"end": 14400,
											"name": "LT"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "ISZERO"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "ISZERO"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "JUMPI"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "DUP1"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "REVERT"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 14378,
											"end": 14401,
											"name": "JUMPDEST"
										},
										{
											"begin": 14432,
											"end": 14446,
											"name": "DUP2"
										},
										{
											"begin": 14414,
											"end": 14429,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14414,
											"end": 14446,
											"name": "DUP2"
										},
										{
											"begin": 14414,
											"end": 14446,
											"name": "SWAP1"
										},
										{
											"begin": 14414,
											"end": 14446,
											"name": "SSTORE"
										},
										{
											"begin": 14414,
											"end": 14446,
											"name": "POP"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 14488,
											"end": 14496,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14488,
											"end": 14496,
											"name": "SLOAD"
										},
										{
											"begin": 14484,
											"end": 14486,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14484,
											"end": 14496,
											"name": "EXP"
										},
										{
											"begin": 14470,
											"end": 14479,
											"name": "DUP3"
										},
										{
											"begin": 14470,
											"end": 14483,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 14470,
											"end": 14483,
											"name": "SWAP1"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "SWAP2"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "SWAP1"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "AND"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 14470,
											"end": 14497,
											"name": "JUMPDEST"
										},
										{
											"begin": 14457,
											"end": 14467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14457,
											"end": 14497,
											"name": "DUP2"
										},
										{
											"begin": 14457,
											"end": 14497,
											"name": "SWAP1"
										},
										{
											"begin": 14457,
											"end": 14497,
											"name": "SSTORE"
										},
										{
											"begin": 14457,
											"end": 14497,
											"name": "POP"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "PUSH",
											"value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
										},
										{
											"begin": 14517,
											"end": 14532,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14517,
											"end": 14532,
											"name": "SLOAD"
										},
										{
											"begin": 14534,
											"end": 14544,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14534,
											"end": 14544,
											"name": "SLOAD"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "MLOAD"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "DUP1"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "DUP4"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "DUP2"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "MSTORE"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "ADD"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "DUP3"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "DUP2"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "MSTORE"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "ADD"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "SWAP3"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "POP"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "POP"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "POP"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "MLOAD"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "DUP1"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "SWAP2"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "SUB"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "SWAP1"
										},
										{
											"begin": 14510,
											"end": 14545,
											"name": "LOG1"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "POP"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "POP"
										},
										{
											"begin": 14166,
											"end": 14553,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 13512,
											"end": 13524,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13512,
											"end": 13524,
											"name": "SLOAD"
										},
										{
											"begin": 13503,
											"end": 13509,
											"name": "DUP2"
										},
										{
											"begin": 13488,
											"end": 13500,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13488,
											"end": 13500,
											"name": "SLOAD"
										},
										{
											"begin": 13488,
											"end": 13509,
											"name": "ADD"
										},
										{
											"begin": 13488,
											"end": 13524,
											"name": "GT"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "ISZERO"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "ISZERO"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "JUMPI"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "DUP1"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "REVERT"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 13480,
											"end": 13525,
											"name": "JUMPDEST"
										},
										{
											"begin": 13571,
											"end": 13579,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "DUP1"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "SWAP1"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "SLOAD"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "SWAP1"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "EXP"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "SWAP1"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "DIV"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13580,
											"end": 13585,
											"name": "AND"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "AND"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "AND"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "DUP2"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "MSTORE"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "ADD"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "SWAP1"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "DUP2"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "MSTORE"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "ADD"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "KECCAK256"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "SLOAD"
										},
										{
											"begin": 13562,
											"end": 13568,
											"name": "DUP2"
										},
										{
											"begin": 13544,
											"end": 13552,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "DUP1"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "SWAP1"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "SLOAD"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "SWAP1"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "EXP"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "SWAP1"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "DIV"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13553,
											"end": 13558,
											"name": "AND"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "AND"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "AND"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "DUP2"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "MSTORE"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "ADD"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "SWAP1"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "DUP2"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "MSTORE"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "ADD"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "KECCAK256"
										},
										{
											"begin": 13544,
											"end": 13559,
											"name": "SLOAD"
										},
										{
											"begin": 13544,
											"end": 13568,
											"name": "ADD"
										},
										{
											"begin": 13544,
											"end": 13586,
											"name": "GT"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "ISZERO"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "ISZERO"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "JUMPI"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "DUP1"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "REVERT"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 13536,
											"end": 13587,
											"name": "JUMPDEST"
										},
										{
											"begin": 13619,
											"end": 13625,
											"name": "DUP1"
										},
										{
											"begin": 13600,
											"end": 13608,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "DUP1"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "SWAP1"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "SLOAD"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "SWAP1"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "EXP"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "SWAP1"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "DIV"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13609,
											"end": 13614,
											"name": "AND"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "AND"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "AND"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "DUP2"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "MSTORE"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "ADD"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "SWAP1"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "DUP2"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "MSTORE"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "ADD"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "KECCAK256"
										},
										{
											"begin": 13600,
											"end": 13615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "DUP3"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "DUP3"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "SLOAD"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "ADD"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "SWAP3"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "POP"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "POP"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "DUP2"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "SWAP1"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "SSTORE"
										},
										{
											"begin": 13600,
											"end": 13625,
											"name": "POP"
										},
										{
											"begin": 13652,
											"end": 13658,
											"name": "DUP1"
										},
										{
											"begin": 13636,
											"end": 13648,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13636,
											"end": 13648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "DUP3"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "DUP3"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "SLOAD"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "ADD"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "SWAP3"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "POP"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "POP"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "DUP2"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "SWAP1"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "SSTORE"
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "PUSH",
											"value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
										},
										{
											"begin": 13675,
											"end": 13681,
											"name": "DUP2"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "MLOAD"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "DUP3"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "DUP2"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "MSTORE"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "ADD"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "SWAP2"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "POP"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "MLOAD"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "DUP1"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "SWAP2"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "SUB"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "SWAP1"
										},
										{
											"begin": 13669,
											"end": 13682,
											"name": "LOG1"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "POP"
										},
										{
											"begin": 13424,
											"end": 13690,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 14002,
											"end": 14008,
											"name": "DUP1"
										},
										{
											"begin": 13986,
											"end": 13998,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13986,
											"end": 13998,
											"name": "SLOAD"
										},
										{
											"begin": 13986,
											"end": 14008,
											"name": "LT"
										},
										{
											"begin": 13986,
											"end": 14008,
											"name": "ISZERO"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "ISZERO"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "ISZERO"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "JUMPI"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "DUP1"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "REVERT"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 13978,
											"end": 14009,
											"name": "JUMPDEST"
										},
										{
											"begin": 14047,
											"end": 14053,
											"name": "DUP1"
										},
										{
											"begin": 14028,
											"end": 14036,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "DUP1"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "SWAP1"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "SLOAD"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "SWAP1"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "EXP"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "SWAP1"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "DIV"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "AND"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "AND"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "AND"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "DUP2"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "MSTORE"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "ADD"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "SWAP1"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "DUP2"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "MSTORE"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "ADD"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "KECCAK256"
										},
										{
											"begin": 14028,
											"end": 14043,
											"name": "SLOAD"
										},
										{
											"begin": 14028,
											"end": 14053,
											"name": "LT"
										},
										{
											"begin": 14028,
											"end": 14053,
											"name": "ISZERO"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "ISZERO"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "ISZERO"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "JUMPI"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "DUP1"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "REVERT"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 14020,
											"end": 14054,
											"name": "JUMPDEST"
										},
										{
											"begin": 14083,
											"end": 14089,
											"name": "DUP1"
										},
										{
											"begin": 14067,
											"end": 14079,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14067,
											"end": 14079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "DUP3"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "DUP3"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "SLOAD"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "SUB"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "SWAP3"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "POP"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "POP"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "DUP2"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "SWAP1"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "SSTORE"
										},
										{
											"begin": 14067,
											"end": 14089,
											"name": "POP"
										},
										{
											"begin": 14119,
											"end": 14125,
											"name": "DUP1"
										},
										{
											"begin": 14100,
											"end": 14108,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "DUP1"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "SLOAD"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "EXP"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "SWAP1"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "DIV"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14109,
											"end": 14114,
											"name": "AND"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "AND"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "AND"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "DUP2"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "MSTORE"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "ADD"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "SWAP1"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "DUP2"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "MSTORE"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "ADD"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "KECCAK256"
										},
										{
											"begin": 14100,
											"end": 14115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "DUP3"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "DUP3"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "SLOAD"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "SUB"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "SWAP3"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "POP"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "POP"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "DUP2"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "SWAP1"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "SSTORE"
										},
										{
											"begin": 14100,
											"end": 14125,
											"name": "POP"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "PUSH",
											"value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
										},
										{
											"begin": 14143,
											"end": 14149,
											"name": "DUP2"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "MLOAD"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "DUP1"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "DUP3"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "DUP2"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "MSTORE"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "ADD"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "SWAP2"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "POP"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "POP"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "MLOAD"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "DUP1"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "SWAP2"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "SUB"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "SWAP1"
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "LOG1"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "POP"
										},
										{
											"begin": 13921,
											"end": 14158,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMPDEST"
										},
										{
											"begin": 12514,
											"end": 12528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "SWAP1"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "SLOAD"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "SWAP1"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "EXP"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "SWAP1"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "DIV"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12545,
											"end": 12555,
											"name": "AND"
										},
										{
											"begin": 12541,
											"end": 12722,
											"name": "ISZERO"
										},
										{
											"begin": 12541,
											"end": 12722,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 12541,
											"end": 12722,
											"name": "JUMPI"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "SWAP1"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "SLOAD"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "SWAP1"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "EXP"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "SWAP1"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "DIV"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12593,
											"end": 12608,
											"name": "AND"
										},
										{
											"begin": 12579,
											"end": 12619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12579,
											"end": 12619,
											"name": "AND"
										},
										{
											"begin": 12579,
											"end": 12619,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 12620,
											"end": 12626,
											"name": "DUP5"
										},
										{
											"begin": 12628,
											"end": 12636,
											"name": "DUP5"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MLOAD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ADD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MSTORE"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MLOAD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP4"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "AND"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MUL"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP2"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MSTORE"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ADD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP1"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP4"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "AND"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "AND"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP2"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MSTORE"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ADD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP3"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "AND"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "AND"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP2"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MSTORE"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ADD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "SWAP3"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MLOAD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP1"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP4"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "SUB"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP2"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP8"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP1"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ISZERO"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ISZERO"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "JUMPI"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP1"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "REVERT"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "JUMPDEST"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "GAS"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "SUB"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "CALL"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ISZERO"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "ISZERO"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "JUMPI"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP1"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "REVERT"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "JUMPDEST"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MLOAD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "DUP1"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "MLOAD"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "SWAP1"
										},
										{
											"begin": 12579,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12637,
											"name": "SWAP1"
										},
										{
											"begin": 12572,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12572,
											"end": 12637,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 12572,
											"end": 12637,
											"name": "JUMP"
										},
										{
											"begin": 12541,
											"end": 12722,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 12541,
											"end": 12722,
											"name": "JUMPDEST"
										},
										{
											"begin": 12677,
											"end": 12710,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 12693,
											"end": 12699,
											"name": "DUP4"
										},
										{
											"begin": 12701,
											"end": 12709,
											"name": "DUP4"
										},
										{
											"begin": 12677,
											"end": 12692,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 12677,
											"end": 12710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12677,
											"end": 12710,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 12677,
											"end": 12710,
											"name": "JUMPDEST"
										},
										{
											"begin": 12670,
											"end": 12710,
											"name": "SWAP1"
										},
										{
											"begin": 12670,
											"end": 12710,
											"name": "POP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMPDEST"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP3"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "SWAP2"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "POP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "POP"
										},
										{
											"begin": 12436,
											"end": 12729,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "JUMPDEST"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "SLOAD"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "DUP2"
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "JUMPDEST"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "MSTORE"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "MSTORE"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "KECCAK256"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP2"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "POP"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SLOAD"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "EXP"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DIV"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "AND"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "DUP2"
										},
										{
											"begin": 8655,
											"end": 8701,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 8973,
											"end": 8978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8956,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 8969,
											"name": "DUP4"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "AND"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "AND"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "DUP2"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "MSTORE"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "ADD"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "SWAP1"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "DUP2"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "MSTORE"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "ADD"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "KECCAK256"
										},
										{
											"begin": 8943,
											"end": 8970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "EXP"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "DUP2"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "SLOAD"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "DUP2"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "MUL"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "NOT"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "AND"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "SWAP1"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "DUP4"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "ISZERO"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "ISZERO"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "MUL"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "OR"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "SWAP1"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "SSTORE"
										},
										{
											"begin": 8943,
											"end": 8978,
											"name": "POP"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "PUSH",
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 9006,
											"end": 9018,
											"name": "DUP2"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "MLOAD"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "DUP3"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "AND"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "AND"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "DUP2"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "MSTORE"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "ADD"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "SWAP2"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "POP"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "MLOAD"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "DUP1"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "SWAP2"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "SUB"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "SWAP1"
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "LOG1"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "POP"
										},
										{
											"begin": 8867,
											"end": 9027,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "JUMPDEST"
										},
										{
											"begin": 4843,
											"end": 4853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "DUP2"
										},
										{
											"begin": 4811,
											"end": 4853,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMPDEST"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 1831,
											"end": 1832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "AND"
										},
										{
											"begin": 1811,
											"end": 1819,
											"name": "DUP2"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "AND"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "EQ"
										},
										{
											"begin": 1811,
											"end": 1833,
											"name": "ISZERO"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "ISZERO"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "JUMPI"
										},
										{
											"begin": 1858,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1855,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SLOAD"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "MUL"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "OR"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "SSTORE"
										},
										{
											"begin": 1850,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 1807,
											"end": 1878,
											"name": "JUMPDEST"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "POP"
										},
										{
											"begin": 1734,
											"end": 1885,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "JUMPDEST"
										},
										{
											"begin": 9168,
											"end": 9183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DUP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "EXP"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "SWAP1"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "DIV"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1534,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "CALLER"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "AND"
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "EQ"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "ISZERO"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPI"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "DUP1"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "REVERT"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 1512,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 9125,
											"end": 9138,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9139,
											"end": 9155,
											"name": "DUP4"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "AND"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "AND"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "DUP2"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "MSTORE"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "ADD"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "SWAP1"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "DUP2"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "MSTORE"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "ADD"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "KECCAK256"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "SWAP1"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "SLOAD"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "SWAP1"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "EXP"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "SWAP1"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "DIV"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9125,
											"end": 9156,
											"name": "AND"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "ISZERO"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "ISZERO"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "JUMPI"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "DUP1"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "REVERT"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 9117,
											"end": 9157,
											"name": "JUMPDEST"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 9196,
											"end": 9212,
											"name": "DUP3"
										},
										{
											"begin": 9186,
											"end": 9195,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST"
										},
										{
											"begin": 9168,
											"end": 9213,
											"name": "SWAP1"
										},
										{
											"begin": 9168,
											"end": 9213,
											"name": "POP"
										},
										{
											"begin": 9253,
											"end": 9254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9232,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9249,
											"name": "DUP5"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "AND"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "AND"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "DUP2"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "MSTORE"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "ADD"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "SWAP1"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "DUP2"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "MSTORE"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "ADD"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9250,
											"name": "KECCAK256"
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "DUP2"
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "SWAP1"
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "SSTORE"
										},
										{
											"begin": 9224,
											"end": 9254,
											"name": "POP"
										},
										{
											"begin": 9281,
											"end": 9291,
											"name": "DUP1"
										},
										{
											"begin": 9265,
											"end": 9277,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9265,
											"end": 9277,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "DUP3"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "DUP3"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "SLOAD"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "SUB"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "SWAP3"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "POP"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "POP"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "DUP2"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "SWAP1"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "SSTORE"
										},
										{
											"begin": 9265,
											"end": 9291,
											"name": "POP"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "PUSH",
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 9322,
											"end": 9338,
											"name": "DUP3"
										},
										{
											"begin": 9340,
											"end": 9350,
											"name": "DUP3"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "MLOAD"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "DUP1"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "DUP4"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "AND"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "AND"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "DUP2"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "MSTORE"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "ADD"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "DUP3"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "DUP2"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "MSTORE"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "ADD"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "SWAP3"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "POP"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "POP"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "POP"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "MLOAD"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "DUP1"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "SWAP2"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "SUB"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "SWAP1"
										},
										{
											"begin": 9302,
											"end": 9351,
											"name": "LOG1"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "POP"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "POP"
										},
										{
											"begin": 9035,
											"end": 9359,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6864,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 6291,
											"end": 6864,
											"name": "JUMPDEST"
										},
										{
											"begin": 6362,
											"end": 6368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "DUP2"
										},
										{
											"begin": 3296,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "LT"
										},
										{
											"begin": 3276,
											"end": 3305,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPI"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "DUP1"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "REVERT"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPDEST"
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP3"
										},
										{
											"begin": 6702,
											"end": 6713,
											"name": "EQ"
										},
										{
											"begin": 6702,
											"end": 6713,
											"name": "ISZERO"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "DUP1"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "ISZERO"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "JUMPI"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "POP"
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6726,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6737,
											"name": "CALLER"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "AND"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "AND"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "DUP2"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "MSTORE"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "ADD"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "SWAP1"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "DUP2"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "MSTORE"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "ADD"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6738,
											"name": "KECCAK256"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6747,
											"name": "DUP6"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "AND"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "AND"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "DUP2"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "MSTORE"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "ADD"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "SWAP1"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "DUP2"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "MSTORE"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "ADD"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "KECCAK256"
										},
										{
											"begin": 6719,
											"end": 6748,
											"name": "SLOAD"
										},
										{
											"begin": 6719,
											"end": 6753,
											"name": "EQ"
										},
										{
											"begin": 6719,
											"end": 6753,
											"name": "ISZERO"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 6701,
											"end": 6754,
											"name": "JUMPDEST"
										},
										{
											"begin": 6699,
											"end": 6755,
											"name": "ISZERO"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "ISZERO"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "ISZERO"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "JUMPI"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "DUP1"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "REVERT"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 6691,
											"end": 6756,
											"name": "JUMPDEST"
										},
										{
											"begin": 6801,
											"end": 6807,
											"name": "DUP2"
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6787,
											"name": "CALLER"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "AND"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "AND"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "DUP2"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "MSTORE"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "ADD"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "SWAP1"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "DUP2"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "MSTORE"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "ADD"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "KECCAK256"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6797,
											"name": "DUP6"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "AND"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "AND"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "DUP2"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "MSTORE"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "ADD"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "SWAP1"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "DUP2"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "MSTORE"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "ADD"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6798,
											"name": "KECCAK256"
										},
										{
											"begin": 6769,
											"end": 6807,
											"name": "DUP2"
										},
										{
											"begin": 6769,
											"end": 6807,
											"name": "SWAP1"
										},
										{
											"begin": 6769,
											"end": 6807,
											"name": "SSTORE"
										},
										{
											"begin": 6769,
											"end": 6807,
											"name": "POP"
										},
										{
											"begin": 6839,
											"end": 6847,
											"name": "DUP3"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "AND"
										},
										{
											"begin": 6827,
											"end": 6837,
											"name": "CALLER"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "AND"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6849,
											"end": 6855,
											"name": "DUP5"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "MLOAD"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "DUP1"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "DUP3"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "DUP2"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "MSTORE"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "ADD"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "SWAP2"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "POP"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "POP"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "MLOAD"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "DUP1"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "SWAP2"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "SUB"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "SWAP1"
										},
										{
											"begin": 6818,
											"end": 6856,
											"name": "LOG3"
										},
										{
											"begin": 6291,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6864,
											"name": "POP"
										},
										{
											"begin": 6291,
											"end": 6864,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "JUMPDEST"
										},
										{
											"begin": 5248,
											"end": 5262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5470,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5229,
											"end": 5235,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "DUP2"
										},
										{
											"begin": 3296,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "LT"
										},
										{
											"begin": 3276,
											"end": 3305,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPI"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "DUP1"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "REVERT"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPDEST"
										},
										{
											"begin": 5265,
											"end": 5272,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5278,
											"name": "DUP9"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "AND"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "DUP2"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "MSTORE"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "ADD"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "SWAP1"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "DUP2"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "MSTORE"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "ADD"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5279,
											"name": "KECCAK256"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5290,
											"name": "CALLER"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "AND"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "AND"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "DUP2"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "MSTORE"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "ADD"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "SWAP1"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "DUP2"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "MSTORE"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "ADD"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "KECCAK256"
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "SLOAD"
										},
										{
											"begin": 5248,
											"end": 5291,
											"name": "SWAP4"
										},
										{
											"begin": 5248,
											"end": 5291,
											"name": "POP"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 5507,
											"end": 5512,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5485,
											"end": 5500,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5485,
											"end": 5500,
											"name": "SLOAD"
										},
										{
											"begin": 5474,
											"end": 5480,
											"name": "DUP9"
										},
										{
											"begin": 5474,
											"end": 5484,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5474,
											"end": 5484,
											"name": "SWAP1"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "SWAP2"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "SWAP1"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "AND"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5474,
											"end": 5501,
											"name": "JUMPDEST"
										},
										{
											"begin": 5473,
											"end": 5506,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 5473,
											"end": 5506,
											"name": "SWAP1"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "SWAP2"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "SWAP1"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "AND"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 5473,
											"end": 5513,
											"name": "JUMPDEST"
										},
										{
											"begin": 5462,
											"end": 5513,
											"name": "SWAP3"
										},
										{
											"begin": 5462,
											"end": 5513,
											"name": "POP"
										},
										{
											"begin": 5534,
											"end": 5544,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5534,
											"end": 5544,
											"name": "SLOAD"
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP4"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "GT"
										},
										{
											"begin": 5524,
											"end": 5589,
											"name": "ISZERO"
										},
										{
											"begin": 5524,
											"end": 5589,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 5524,
											"end": 5589,
											"name": "JUMPI"
										},
										{
											"begin": 5567,
											"end": 5577,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5567,
											"end": 5577,
											"name": "SLOAD"
										},
										{
											"begin": 5561,
											"end": 5577,
											"name": "SWAP3"
										},
										{
											"begin": 5561,
											"end": 5577,
											"name": "POP"
										},
										{
											"begin": 5524,
											"end": 5589,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 5524,
											"end": 5589,
											"name": "JUMPDEST"
										},
										{
											"begin": 4843,
											"end": 4853,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5603,
											"end": 5613,
											"name": "DUP5"
										},
										{
											"begin": 5603,
											"end": 5624,
											"name": "LT"
										},
										{
											"begin": 5599,
											"end": 5704,
											"name": "ISZERO"
										},
										{
											"begin": 5599,
											"end": 5704,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 5599,
											"end": 5704,
											"name": "JUMPI"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 5685,
											"end": 5691,
											"name": "DUP6"
										},
										{
											"begin": 5670,
											"end": 5680,
											"name": "DUP6"
										},
										{
											"begin": 5670,
											"end": 5684,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5670,
											"end": 5684,
											"name": "SWAP1"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "SWAP2"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "SWAP1"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "AND"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "JUMPDEST"
										},
										{
											"begin": 5641,
											"end": 5648,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP10"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "AND"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "AND"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "DUP2"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "MSTORE"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "ADD"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "SWAP1"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "DUP2"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "MSTORE"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "ADD"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5655,
											"name": "KECCAK256"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5666,
											"name": "CALLER"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "AND"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "AND"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "DUP2"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "MSTORE"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "ADD"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "SWAP1"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "DUP2"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "MSTORE"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "ADD"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5667,
											"name": "KECCAK256"
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "DUP2"
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "SWAP1"
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "SSTORE"
										},
										{
											"begin": 5641,
											"end": 5692,
											"name": "POP"
										},
										{
											"begin": 5599,
											"end": 5704,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 5599,
											"end": 5704,
											"name": "JUMPDEST"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 5743,
											"end": 5746,
											"name": "DUP4"
										},
										{
											"begin": 5732,
											"end": 5738,
											"name": "DUP7"
										},
										{
											"begin": 5732,
											"end": 5742,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5732,
											"end": 5742,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "SWAP2"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "AND"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "JUMPDEST"
										},
										{
											"begin": 5714,
											"end": 5747,
											"name": "SWAP2"
										},
										{
											"begin": 5714,
											"end": 5747,
											"name": "POP"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "DUP6"
										},
										{
											"begin": 5776,
											"end": 5784,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5790,
											"name": "DUP11"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "MSTORE"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "MSTORE"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "KECCAK256"
										},
										{
											"begin": 5776,
											"end": 5791,
											"name": "SLOAD"
										},
										{
											"begin": 5776,
											"end": 5795,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5776,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "SWAP2"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 5776,
											"end": 5803,
											"name": "JUMPDEST"
										},
										{
											"begin": 5758,
											"end": 5766,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5772,
											"name": "DUP10"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "AND"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "AND"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "DUP2"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "MSTORE"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "ADD"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "SWAP1"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "DUP2"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "MSTORE"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "ADD"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "KECCAK256"
										},
										{
											"begin": 5758,
											"end": 5803,
											"name": "DUP2"
										},
										{
											"begin": 5758,
											"end": 5803,
											"name": "SWAP1"
										},
										{
											"begin": 5758,
											"end": 5803,
											"name": "SSTORE"
										},
										{
											"begin": 5758,
											"end": 5803,
											"name": "POP"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5848,
											"end": 5858,
											"name": "DUP3"
										},
										{
											"begin": 5830,
											"end": 5838,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5842,
											"name": "DUP10"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "AND"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "AND"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "DUP2"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "MSTORE"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "ADD"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "SWAP1"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "DUP2"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "MSTORE"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "ADD"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "KECCAK256"
										},
										{
											"begin": 5830,
											"end": 5843,
											"name": "SLOAD"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5830,
											"end": 5847,
											"name": "SWAP1"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "SWAP2"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "SWAP1"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "AND"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5830,
											"end": 5859,
											"name": "JUMPDEST"
										},
										{
											"begin": 5814,
											"end": 5822,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5826,
											"name": "DUP9"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "AND"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "AND"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "DUP2"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "MSTORE"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "ADD"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "DUP2"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "MSTORE"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "ADD"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "KECCAK256"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "DUP2"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "SWAP1"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "SSTORE"
										},
										{
											"begin": 5814,
											"end": 5859,
											"name": "POP"
										},
										{
											"begin": 5880,
											"end": 5881,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "DUP4"
										},
										{
											"begin": 5874,
											"end": 5881,
											"name": "GT"
										},
										{
											"begin": 5870,
											"end": 5994,
											"name": "ISZERO"
										},
										{
											"begin": 5870,
											"end": 5994,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 5870,
											"end": 5994,
											"name": "JUMPI"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5936,
											"end": 5939,
											"name": "DUP4"
										},
										{
											"begin": 5916,
											"end": 5924,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "DUP1"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "SWAP1"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "SLOAD"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "SWAP1"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "EXP"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "SWAP1"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "DIV"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "AND"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "AND"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "AND"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "DUP2"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "MSTORE"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "ADD"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "SWAP1"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "DUP2"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "MSTORE"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "ADD"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "KECCAK256"
										},
										{
											"begin": 5916,
											"end": 5931,
											"name": "SLOAD"
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "SWAP1"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "SWAP2"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "AND"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5916,
											"end": 5940,
											"name": "JUMPDEST"
										},
										{
											"begin": 5898,
											"end": 5906,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "DUP1"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "SWAP1"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "SLOAD"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "SWAP1"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "EXP"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "SWAP1"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "DIV"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5907,
											"end": 5912,
											"name": "AND"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "AND"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "AND"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "DUP2"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "MSTORE"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "ADD"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "DUP2"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "MSTORE"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "ADD"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5913,
											"name": "KECCAK256"
										},
										{
											"begin": 5898,
											"end": 5940,
											"name": "DUP2"
										},
										{
											"begin": 5898,
											"end": 5940,
											"name": "SWAP1"
										},
										{
											"begin": 5898,
											"end": 5940,
											"name": "SSTORE"
										},
										{
											"begin": 5898,
											"end": 5940,
											"name": "POP"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "DUP1"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "SWAP1"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "SLOAD"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "SWAP1"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "EXP"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "SWAP1"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "DIV"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5971,
											"end": 5976,
											"name": "AND"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "AND"
										},
										{
											"begin": 5964,
											"end": 5969,
											"name": "DUP8"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "AND"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5978,
											"end": 5981,
											"name": "DUP6"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "MLOAD"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "DUP1"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "DUP3"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "DUP2"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "MSTORE"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "ADD"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "SWAP2"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "POP"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "POP"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "MLOAD"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "DUP1"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "SWAP2"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "SUB"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "SWAP1"
										},
										{
											"begin": 5955,
											"end": 5982,
											"name": "LOG3"
										},
										{
											"begin": 5870,
											"end": 5994,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 5870,
											"end": 5994,
											"name": "JUMPDEST"
										},
										{
											"begin": 6020,
											"end": 6023,
											"name": "DUP6"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "AND"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "DUP8"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "AND"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6025,
											"end": 6035,
											"name": "DUP5"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "MLOAD"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "DUP1"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "DUP3"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "DUP2"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "MSTORE"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "ADD"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "SWAP2"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "POP"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "POP"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "MLOAD"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "DUP1"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "SWAP2"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "SUB"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "SWAP1"
										},
										{
											"begin": 6004,
											"end": 6036,
											"name": "LOG3"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "POP"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "POP"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "POP"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "POP"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "POP"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "POP"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "POP"
										},
										{
											"begin": 5143,
											"end": 6044,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4290,
											"end": 4406,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 4290,
											"end": 4406,
											"name": "JUMPDEST"
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4390,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP4"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "AND"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "AND"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "DUP2"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "MSTORE"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "ADD"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "SWAP1"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "DUP2"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "MSTORE"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "ADD"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "KECCAK256"
										},
										{
											"begin": 4382,
											"end": 4398,
											"name": "SLOAD"
										},
										{
											"begin": 4375,
											"end": 4398,
											"name": "SWAP1"
										},
										{
											"begin": 4375,
											"end": 4398,
											"name": "POP"
										},
										{
											"begin": 4290,
											"end": 4406,
											"name": "SWAP2"
										},
										{
											"begin": 4290,
											"end": 4406,
											"name": "SWAP1"
										},
										{
											"begin": 4290,
											"end": 4406,
											"name": "POP"
										},
										{
											"begin": 4290,
											"end": 4406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3737,
											"name": "DUP1"
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3300,
											"name": "DUP2"
										},
										{
											"begin": 3296,
											"end": 3304,
											"name": "ADD"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3286,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "SWAP1"
										},
										{
											"begin": 3278,
											"end": 3293,
											"name": "POP"
										},
										{
											"begin": 3278,
											"end": 3304,
											"name": "LT"
										},
										{
											"begin": 3276,
											"end": 3305,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "ISZERO"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPI"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "DUP1"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "REVERT"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 3268,
											"end": 3306,
											"name": "JUMPDEST"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "SLOAD"
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP8"
										},
										{
											"begin": 3597,
											"end": 3607,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 3597,
											"end": 3607,
											"name": "SWAP1"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "SWAP2"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "SWAP1"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "AND"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 3597,
											"end": 3624,
											"name": "JUMPDEST"
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 3596,
											"end": 3629,
											"name": "SWAP1"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "SWAP2"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "SWAP1"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "AND"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "JUMPDEST"
										},
										{
											"begin": 3585,
											"end": 3636,
											"name": "SWAP3"
										},
										{
											"begin": 3585,
											"end": 3636,
											"name": "POP"
										},
										{
											"begin": 3657,
											"end": 3667,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3667,
											"name": "SLOAD"
										},
										{
											"begin": 3651,
											"end": 3654,
											"name": "DUP4"
										},
										{
											"begin": 3651,
											"end": 3667,
											"name": "GT"
										},
										{
											"begin": 3647,
											"end": 3712,
											"name": "ISZERO"
										},
										{
											"begin": 3647,
											"end": 3712,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 3647,
											"end": 3712,
											"name": "JUMPI"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "SLOAD"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "SWAP3"
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "POP"
										},
										{
											"begin": 3647,
											"end": 3712,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 3647,
											"end": 3712,
											"name": "JUMPDEST"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 3751,
											"end": 3754,
											"name": "DUP4"
										},
										{
											"begin": 3740,
											"end": 3746,
											"name": "DUP6"
										},
										{
											"begin": 3740,
											"end": 3750,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3740,
											"end": 3750,
											"name": "SWAP1"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "SWAP2"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "SWAP1"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "AND"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 3740,
											"end": 3755,
											"name": "JUMPDEST"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SWAP2"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "POP"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP5"
										},
										{
											"begin": 3789,
											"end": 3797,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3808,
											"name": "CALLER"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "AND"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "AND"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "DUP2"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "MSTORE"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "ADD"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "SWAP1"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "DUP2"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "MSTORE"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "ADD"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "KECCAK256"
										},
										{
											"begin": 3789,
											"end": 3809,
											"name": "SLOAD"
										},
										{
											"begin": 3789,
											"end": 3813,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3789,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "SWAP2"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "SWAP1"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "AND"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 3789,
											"end": 3821,
											"name": "JUMPDEST"
										},
										{
											"begin": 3766,
											"end": 3774,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3785,
											"name": "CALLER"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "AND"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "AND"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "DUP2"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "MSTORE"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "ADD"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "SWAP1"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "DUP2"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "MSTORE"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "ADD"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3786,
											"name": "KECCAK256"
										},
										{
											"begin": 3766,
											"end": 3821,
											"name": "DUP2"
										},
										{
											"begin": 3766,
											"end": 3821,
											"name": "SWAP1"
										},
										{
											"begin": 3766,
											"end": 3821,
											"name": "SSTORE"
										},
										{
											"begin": 3766,
											"end": 3821,
											"name": "POP"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 3866,
											"end": 3876,
											"name": "DUP3"
										},
										{
											"begin": 3848,
											"end": 3856,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3860,
											"name": "DUP9"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "AND"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "AND"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "DUP2"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "MSTORE"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "ADD"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "SWAP1"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "DUP2"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "MSTORE"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "ADD"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "KECCAK256"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "SLOAD"
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "SWAP2"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "SWAP1"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "AND"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 3848,
											"end": 3877,
											"name": "JUMPDEST"
										},
										{
											"begin": 3832,
											"end": 3840,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3844,
											"name": "DUP8"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "AND"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "AND"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "DUP2"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "MSTORE"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "ADD"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "DUP2"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "MSTORE"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "ADD"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "KECCAK256"
										},
										{
											"begin": 3832,
											"end": 3877,
											"name": "DUP2"
										},
										{
											"begin": 3832,
											"end": 3877,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3877,
											"name": "SSTORE"
										},
										{
											"begin": 3832,
											"end": 3877,
											"name": "POP"
										},
										{
											"begin": 3898,
											"end": 3899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3895,
											"name": "DUP4"
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "GT"
										},
										{
											"begin": 3888,
											"end": 4017,
											"name": "ISZERO"
										},
										{
											"begin": 3888,
											"end": 4017,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3888,
											"end": 4017,
											"name": "JUMPI"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 3954,
											"end": 3957,
											"name": "DUP4"
										},
										{
											"begin": 3934,
											"end": 3942,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "DUP1"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "SLOAD"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "EXP"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "SWAP1"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "DIV"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3943,
											"end": 3948,
											"name": "AND"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "AND"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "AND"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "DUP2"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "MSTORE"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "ADD"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "SWAP1"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "DUP2"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "MSTORE"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "ADD"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "KECCAK256"
										},
										{
											"begin": 3934,
											"end": 3949,
											"name": "SLOAD"
										},
										{
											"begin": 3934,
											"end": 3953,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 3934,
											"end": 3953,
											"name": "SWAP1"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "SWAP2"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "SWAP1"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "AND"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "JUMPDEST"
										},
										{
											"begin": 3916,
											"end": 3924,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "DUP1"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "SWAP1"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "SLOAD"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "SWAP1"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "EXP"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "SWAP1"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "DIV"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "AND"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "AND"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "AND"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "DUP2"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "MSTORE"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "ADD"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "SWAP1"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "DUP2"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "MSTORE"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "ADD"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3931,
											"name": "KECCAK256"
										},
										{
											"begin": 3916,
											"end": 3958,
											"name": "DUP2"
										},
										{
											"begin": 3916,
											"end": 3958,
											"name": "SWAP1"
										},
										{
											"begin": 3916,
											"end": 3958,
											"name": "SSTORE"
										},
										{
											"begin": 3916,
											"end": 3958,
											"name": "POP"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "DUP1"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "SWAP1"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "SLOAD"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "SWAP1"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "EXP"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "SWAP1"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "DIV"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "AND"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "AND"
										},
										{
											"begin": 3982,
											"end": 3992,
											"name": "CALLER"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "AND"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4001,
											"end": 4004,
											"name": "DUP6"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "MLOAD"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "DUP3"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "SWAP2"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "MLOAD"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "SWAP2"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "SUB"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "SWAP1"
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "LOG3"
										},
										{
											"begin": 3888,
											"end": 4017,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 3888,
											"end": 4017,
											"name": "JUMPDEST"
										},
										{
											"begin": 4048,
											"end": 4051,
											"name": "DUP5"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "AND"
										},
										{
											"begin": 4036,
											"end": 4046,
											"name": "CALLER"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "AND"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4053,
											"end": 4063,
											"name": "DUP5"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "MLOAD"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "DUP1"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "DUP3"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "DUP2"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "MSTORE"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "ADD"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "SWAP2"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "POP"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "POP"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "MLOAD"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "DUP1"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "SWAP2"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "SUB"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "SWAP1"
										},
										{
											"begin": 4027,
											"end": 4064,
											"name": "LOG3"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "POP"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "POP"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "POP"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "POP"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "POP"
										},
										{
											"begin": 3499,
											"end": 4072,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 204,
											"end": 211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 281,
											"end": 290,
											"name": "DUP1"
										},
										{
											"begin": 233,
											"end": 234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 228,
											"end": 229,
											"name": "DUP5"
										},
										{
											"begin": 228,
											"end": 234,
											"name": "EQ"
										},
										{
											"begin": 224,
											"end": 271,
											"name": "ISZERO"
										},
										{
											"begin": 224,
											"end": 271,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 224,
											"end": 271,
											"name": "JUMPI"
										},
										{
											"begin": 258,
											"end": 259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "SWAP2"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "POP"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 251,
											"end": 259,
											"name": "JUMP"
										},
										{
											"begin": 224,
											"end": 271,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 224,
											"end": 271,
											"name": "JUMPDEST"
										},
										{
											"begin": 297,
											"end": 298,
											"name": "DUP3"
										},
										{
											"begin": 293,
											"end": 294,
											"name": "DUP5"
										},
										{
											"begin": 293,
											"end": 298,
											"name": "MUL"
										},
										{
											"begin": 281,
											"end": 298,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 298,
											"name": "POP"
										},
										{
											"begin": 325,
											"end": 326,
											"name": "DUP3"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP5"
										},
										{
											"begin": 316,
											"end": 317,
											"name": "DUP3"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "ISZERO"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "ISZERO"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "JUMPI"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "INVALID"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "DIV"
										},
										{
											"begin": 316,
											"end": 326,
											"name": "EQ"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "ISZERO"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "ISZERO"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "JUMPI"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "INVALID"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "JUMPDEST"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 338,
											"end": 346,
											"name": "SWAP2"
										},
										{
											"begin": 338,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "JUMPDEST"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "SWAP3"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "SWAP2"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "POP"
										},
										{
											"begin": 146,
											"end": 354,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7197,
											"end": 7342,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 7197,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7275,
											"end": 7289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7316,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7323,
											"name": "DUP5"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "AND"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "AND"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "DUP2"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "MSTORE"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "ADD"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "SWAP1"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "DUP2"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "MSTORE"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "ADD"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7324,
											"name": "KECCAK256"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7325,
											"end": 7333,
											"name": "DUP4"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "AND"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "AND"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "DUP2"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "MSTORE"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "ADD"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "SWAP1"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "DUP2"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "MSTORE"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "ADD"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "KECCAK256"
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "SLOAD"
										},
										{
											"begin": 7302,
											"end": 7334,
											"name": "SWAP1"
										},
										{
											"begin": 7302,
											"end": 7334,
											"name": "POP"
										},
										{
											"begin": 7197,
											"end": 7342,
											"name": "SWAP3"
										},
										{
											"begin": 7197,
											"end": 7342,
											"name": "SWAP2"
										},
										{
											"begin": 7197,
											"end": 7342,
											"name": "POP"
										},
										{
											"begin": 7197,
											"end": 7342,
											"name": "POP"
										},
										{
											"begin": 7197,
											"end": 7342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "JUMPDEST"
										},
										{
											"begin": 420,
											"end": 427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 519,
											"end": 528,
											"name": "DUP1"
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP3"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP5"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "DUP2"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "ISZERO"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "ISZERO"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "JUMPI"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "INVALID"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "JUMPDEST"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "DIV"
										},
										{
											"begin": 519,
											"end": 536,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 536,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "DUP1"
										},
										{
											"begin": 634,
											"end": 642,
											"name": "SWAP2"
										},
										{
											"begin": 634,
											"end": 642,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "SWAP3"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "SWAP2"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 650,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 658,
											"end": 781,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 658,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": 716,
											"end": 723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 748,
											"end": 749,
											"name": "DUP3"
										},
										{
											"begin": 743,
											"end": 744,
											"name": "DUP3"
										},
										{
											"begin": 743,
											"end": 749,
											"name": "GT"
										},
										{
											"begin": 743,
											"end": 749,
											"name": "ISZERO"
										},
										{
											"begin": 736,
											"end": 750,
											"name": "ISZERO"
										},
										{
											"begin": 736,
											"end": 750,
											"name": "ISZERO"
										},
										{
											"begin": 736,
											"end": 750,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 736,
											"end": 750,
											"name": "JUMPI"
										},
										{
											"begin": 736,
											"end": 750,
											"name": "INVALID"
										},
										{
											"begin": 736,
											"end": 750,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 736,
											"end": 750,
											"name": "JUMPDEST"
										},
										{
											"begin": 772,
											"end": 773,
											"name": "DUP2"
										},
										{
											"begin": 768,
											"end": 769,
											"name": "DUP4"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "SUB"
										},
										{
											"begin": 761,
											"end": 773,
											"name": "SWAP1"
										},
										{
											"begin": 761,
											"end": 773,
											"name": "POP"
										},
										{
											"begin": 658,
											"end": 781,
											"name": "SWAP3"
										},
										{
											"begin": 658,
											"end": 781,
											"name": "SWAP2"
										},
										{
											"begin": 658,
											"end": 781,
											"name": "POP"
										},
										{
											"begin": 658,
											"end": 781,
											"name": "POP"
										},
										{
											"begin": 658,
											"end": 781,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 867,
											"end": 876,
											"name": "DUP1"
										},
										{
											"begin": 883,
											"end": 884,
											"name": "DUP3"
										},
										{
											"begin": 879,
											"end": 880,
											"name": "DUP5"
										},
										{
											"begin": 879,
											"end": 884,
											"name": "ADD"
										},
										{
											"begin": 867,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 867,
											"end": 884,
											"name": "POP"
										},
										{
											"begin": 907,
											"end": 908,
											"name": "DUP4"
										},
										{
											"begin": 902,
											"end": 903,
											"name": "DUP2"
										},
										{
											"begin": 902,
											"end": 908,
											"name": "LT"
										},
										{
											"begin": 902,
											"end": 908,
											"name": "ISZERO"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "ISZERO"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "ISZERO"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "JUMPI"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "INVALID"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 895,
											"end": 909,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 928,
											"name": "SWAP2"
										},
										{
											"begin": 920,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "SWAP3"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "SWAP2"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "POP"
										},
										{
											"begin": 789,
											"end": 936,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"decimals()": "313ce567",
							"deprecate(address)": "0753c30c",
							"deprecated()": "0e136b19",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"issue(uint256)": "cc872b66",
							"maximumFee()": "35390714",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"removeBlackList(address)": "e4997dc5",
							"setParams(uint256,uint256)": "c0324c77",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradedAddress()": "26976e3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\\r\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\\r\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\\r\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\\r\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\\r\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/TetherToken.sol\":\"TetherToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TetherToken.sol\":{\"keccak256\":\"0x7c5dbf50adea1dc99fd5726975a99a7d50b232a2f476b34e41f2123c11686419\",\"urls\":[\"bzzr://cc4c9e576841fd9ddac4814961e80ecb800b5b18c90cc38fb6fdf6fac37e444f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\r"
							}
						}
					}
				},
				"UpgradedStandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.\r",
								"params": {
									"_owner": "address The address which owns the funds.\r",
									"_spender": "address The address which will spend the funds.\r"
								},
								"return": "A uint specifying the amount of tokens still available for the spender.\r"
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r",
								"params": {
									"_spender": "The address which will spend the funds.\r",
									"_value": "The amount of tokens to be spent.\r"
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.\r",
								"params": {
									"_owner": "The address to query the the balance of.\r"
								},
								"return": "An uint representing the amount owned by the passed address.\r"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address\r",
								"params": {
									"_to": "The address to transfer to.\r",
									"_value": "The amount to be transferred.\r"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another\r",
								"params": {
									"_from": "address The address which you want to send tokens from\r",
									"_to": "address The address which you want to transfer to\r",
									"_value": "uint the amount of tokens to be transferred\r"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.\r",
								"params": {
									"newOwner": "The address to transfer ownership to.\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"approveByLegacy(address,address,uint256)": "aee92d33",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferByLegacy(address,address,uint256)": "6e18980a",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromByLegacy(address,address,address,uint256)": "8b477adb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/TetherToken.sol": {
				"ast": {
					"absolutePath": "contracts/TetherToken.sol",
					"exportedSymbols": {
						"BasicToken": [
							347
						],
						"BlackList": [
							717
						],
						"ERC20": [
							205
						],
						"ERC20Basic": [
							169
						],
						"Ownable": [
							139
						],
						"Pausable": [
							603
						],
						"SafeMath": [
							97
						],
						"StandardToken": [
							546
						],
						"TetherToken": [
							1142
						],
						"UpgradedStandardToken": [
							749
						]
					},
					"id": 1143,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "213:141:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "228:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "233:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "228:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "224:47:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "236:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "258:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "251:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "281:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "281:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "293:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "293:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "281:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "316:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "320:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "316:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "325:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "316:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "309:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "309:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "309:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "345:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "338:8:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "159:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "170:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "158:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "203:9:0"
									},
									"scope": 97,
									"src": "146:208:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "429:221:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "519:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "531:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "531:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "519:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "641:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "634:8:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "375:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "386:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:9:0"
									},
									"scope": 97,
									"src": "362:288:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "725:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "743:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "743:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "736:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "736:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "768:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "772:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "768:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "761:12:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "671:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "682:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "670:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "716:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "715:9:0"
									},
									"scope": 97,
									"src": "658:123:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "856:80:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "867:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "879:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "867:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "902:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 87,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "895:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "895:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "927:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 94,
												"nodeType": "Return",
												"src": "920:8:0"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "802:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "801:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "847:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:9:0"
									},
									"scope": 97,
									"src": "789:147:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1143,
							"src": "122:817:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
							"fullyImplemented": true,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 99,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 139,
									"src": "1162:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1162:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1348:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1359:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 103,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1367:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1367:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1359:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1359:18:0"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:0"
									},
									"scope": 139,
									"src": "1322:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1501:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "1520:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1520:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1534:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1520:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "1512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1512:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1512:28:0"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "1551:1:0"
											}
										]
									},
									"id": 119,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1498:2:0"
									},
									"src": "1480:80:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1796:89:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1811:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1831:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1823:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1811:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 136,
												"nodeType": "IfStatement",
												"src": "1807:71:0",
												"trueBody": {
													"id": 135,
													"nodeType": "Block",
													"src": "1835:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1850:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "1858:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1850:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 134,
															"nodeType": "ExpressionStatement",
															"src": "1850:16:0"
														}
													]
												}
											}
										]
									},
									"id": 138,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 124,
											"modifierName": {
												"argumentTypes": null,
												"id": 123,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "1786:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1786:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1761:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1760:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 139,
									"src": "1734:151:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "1138:752:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\r\n@dev Simpler version of ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "2053:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2053:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 146,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2104:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2132:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2131:6:0"
									},
									"scope": 169,
									"src": "2084:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 153,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2163:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2162:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2201:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2201:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2200:6:0"
									},
									"scope": 169,
									"src": "2144:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 160,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2231:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2243:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2230:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2261:0:0"
									},
									"scope": 169,
									"src": "2213:49:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 168,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2283:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2305:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2325:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2282:54:0"
									},
									"src": "2268:69:0"
								}
							],
							"scope": 1143,
							"src": "2026:314:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 170,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2455:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "2455:10:0"
								}
							],
							"contractDependencies": [
								169
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205,
								169
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 180,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2507:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2491:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2549:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2548:6:0"
									},
									"scope": 205,
									"src": "2473:82:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 189,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2583:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2597:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2609:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2609:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2582:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:0:0"
									},
									"scope": 205,
									"src": "2561:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 196,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2651:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2668:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2650:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2686:0:0"
									},
									"scope": 205,
									"src": "2634:53:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2708:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2731:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2756:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2707:60:0"
									},
									"src": "2693:75:0"
								}
							],
							"scope": 1143,
							"src": "2437:334:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 206,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "2892:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "2892:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 208,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2901:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 209,
									"nodeType": "InheritanceSpecifier",
									"src": "2901:10:0"
								}
							],
							"contractDependencies": [
								139,
								169
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\r\n@dev Basic version of StandardToken, with no allowances.\r",
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347,
								169,
								139
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 212,
									"libraryName": {
										"contractScope": null,
										"id": 210,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 97,
										"src": "2925:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$97",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2919:24:0",
									"typeName": {
										"id": 211,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2938:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 216,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "2951:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 215,
										"keyType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2959:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2951:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 214,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2970:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 219,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3079:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3079:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3109:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 222,
									"name": "maximumFee",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3117:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3117:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3257:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3276:29:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 227,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "3278:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "data",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3278:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3278:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 230,
																				"name": "size",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3296:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "34",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3303:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "3296:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3278:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 234,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3277:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "3268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3268:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "3268:38:0"
											},
											{
												"id": 238,
												"nodeType": "PlaceholderStatement",
												"src": "3317:1:0"
											}
										]
									},
									"id": 240,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3246:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3245:11:0"
									},
									"src": "3221:105:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "3574:498:0",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3585:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3585:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3630:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 256,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3608:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 254,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "3597:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "3597:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3597:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 258,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3596:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "3596:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3596:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3585:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3651:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3657:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3651:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 271,
												"nodeType": "IfStatement",
												"src": "3647:65:0",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "3669:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 266,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "3684:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3690:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3684:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "3684:16:0"
														}
													]
												}
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3722:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3722:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 276,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3751:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 274,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3740:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "3740:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3740:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3722:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 279,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3766:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "3775:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3775:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3766:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 288,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3814:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3789:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 284,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "3798:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3798:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3789:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "3789:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3789:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3766:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3766:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 292,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3832:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"argumentTypes": null,
															"id": 293,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3841:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3832:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 299,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "3866:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3848:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 297,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 296,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3857:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3848:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "3848:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3848:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3832:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3832:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3892:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3898:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 325,
												"nodeType": "IfStatement",
												"src": "3888:129:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "3901:116:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 306,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "3916:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 307,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3925:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3916:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 313,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "3954:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 309,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "3934:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 311,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 310,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "3943:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3934:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "3934:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3934:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3916:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 316,
															"nodeType": "ExpressionStatement",
															"src": "3916:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "3982:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3982:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 320,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3994:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 321,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "4001:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "3973:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "3973:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "4036:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4036:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4048:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 330,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4053:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "4027:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4027:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "4027:37:0"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3566:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3570:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3566:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 250,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "3550:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3550:23:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3517:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3530:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3530:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3516:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3574:0:0"
									},
									"scope": 347,
									"src": "3499:573:0",
									"stateMutability": "nonpayable",
									"superFunction": 160,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4364:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4382:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 343,
													"indexExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4391:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4382:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 344,
												"nodeType": "Return",
												"src": "4375:23:0"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4309:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4308:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4350:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4349:14:0"
									},
									"scope": 347,
									"src": "4290:116:0",
									"stateMutability": "view",
									"superFunction": 153,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "2869:1542:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 348,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "4714:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "4714:10:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 350,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 205,
										"src": "4726:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$205",
											"typeString": "contract ERC20"
										}
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "4726:5:0"
								}
							],
							"contractDependencies": [
								139,
								347,
								205,
								169
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\r\n\n * @dev Implementation of the basic standard token.\r\n@dev https://github.com/ethereum/EIPs/issues/20\r\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r",
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								205,
								347,
								169,
								139
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 357,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4741:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 356,
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4750:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4741:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 355,
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4770:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4761:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 354,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4781:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 364,
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4811:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "4811:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										},
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											},
											"id": 361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 359,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4843:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 360,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4846:3:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "4843:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 362,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4852:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4843:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "5237:807:0",
										"statements": [
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"name": "_allowance",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5248:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 379,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 381,
														"indexExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5273:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5265:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 384,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 382,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "5280:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5280:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5265:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5248:43:0"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5462:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5462:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 396,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5507:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 390,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "5485:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 388,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5474:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "5474:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5474:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5473:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "5473:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5473:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5462:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5528:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 398,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "5534:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5528:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 405,
												"nodeType": "IfStatement",
												"src": "5524:65:0",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "5546:43:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 400,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5561:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "5567:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5561:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 403,
															"nodeType": "ExpressionStatement",
															"src": "5561:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "5603:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "MAX_UINT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5616:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5603:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 422,
												"nodeType": "IfStatement",
												"src": "5599:105:0",
												"trueBody": {
													"id": 421,
													"nodeType": "Block",
													"src": "5626:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 409,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5641:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 413,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 410,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "5649:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5641:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 414,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 411,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "5656:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5656:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5641:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 417,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5685:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 415,
																			"name": "_allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "5670:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "5670:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5670:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5641:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "5641:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5714:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5714:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 427,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5743:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 425,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5732:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "5732:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5732:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5714:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5758:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 432,
														"indexExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5767:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5758:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 437,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 433,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5776:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 435,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 434,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5785:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5776:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5776:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5776:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5758:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "5758:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 441,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5814:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 443,
														"indexExpression": {
															"argumentTypes": null,
															"id": 442,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5823:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5814:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 448,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5848:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 444,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5830:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5839:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5830:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "5830:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5830:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5814:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "5814:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 452,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5874:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5880:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 473,
												"nodeType": "IfStatement",
												"src": "5870:124:0",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "5883:111:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 455,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5898:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 457,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 456,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5907:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5898:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 462,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "5936:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 458,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "5916:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 460,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 459,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "5925:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5916:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "5916:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5916:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5898:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "5898:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 467,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "5964:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 468,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5971:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 469,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "5978:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 466,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5955:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5955:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5955:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6013:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6020:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 477,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "6025:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "6004:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6004:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "6004:32:0"
											}
										]
									},
									"id": 481,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5229:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5233:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 376,
											"modifierName": {
												"argumentTypes": null,
												"id": 372,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "5213:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5213:23:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5180:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5193:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5164:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5237:0:0"
									},
									"scope": 546,
									"src": "5143:901:0",
									"stateMutability": "nonpayable",
									"superFunction": 189,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "6370:494:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6699:56:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 494,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 485,
																						"src": "6702:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6712:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6702:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 497,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6701:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 498,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 357,
																								"src": "6719:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 501,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 499,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1154,
																									"src": "6727:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "6727:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6719:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 503,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 502,
																							"name": "_spender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 483,
																							"src": "6739:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6719:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6752:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6719:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 506,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6718:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "6701:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6700:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "6691:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6691:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6691:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 516,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "6777:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6777:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6769:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6789:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6769:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 518,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "6801:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6769:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "6769:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "6827:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6827:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 524,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6839:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 525,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "6849:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "6818:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6818:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "6818:38:0"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6362:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6366:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "6362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 491,
											"modifierName": {
												"argumentTypes": null,
												"id": 487,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "6346:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6346:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6308:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6326:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6307:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6370:0:0"
									},
									"scope": 546,
									"src": "6291:573:0",
									"stateMutability": "nonpayable",
									"superFunction": 196,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "7291:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 538,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "7309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 540,
														"indexExpression": {
															"argumentTypes": null,
															"id": 539,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7317:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7309:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 542,
													"indexExpression": {
														"argumentTypes": null,
														"id": 541,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "7325:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7309:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 543,
												"nodeType": "Return",
												"src": "7302:32:0"
											}
										]
									},
									"id": 545,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7216:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7232:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7215:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7274:16:0"
									},
									"scope": 546,
									"src": "7197:145:0",
									"stateMutability": "view",
									"superFunction": 180,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "4688:2659:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 547,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "7491:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "7491:7:0"
								}
							],
							"contractDependencies": [
								139
							],
							"contractKind": "contract",
							"documentation": "@title Pausable\r\n@dev Base contract which allows children to implement an emergency stop mechanism.\r",
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603,
								139
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 550,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7515:2:0"
									},
									"src": "7504:14:0"
								},
								{
									"anonymous": false,
									"id": 552,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7535:2:0"
									},
									"src": "7522:16:0"
								},
								{
									"constant": false,
									"id": 555,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "7544:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 553,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "7544:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7565:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "7704:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7719:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 558,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "7720:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "7711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "7711:16:0"
											},
											{
												"id": 562,
												"nodeType": "PlaceholderStatement",
												"src": "7734:1:0"
											}
										]
									},
									"id": 564,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7701:2:0"
									},
									"src": "7679:62:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "7865:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 567,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "7880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "7872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7872:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "7872:15:0"
											},
											{
												"id": 570,
												"nodeType": "PlaceholderStatement",
												"src": "7894:1:0"
											}
										]
									},
									"id": 572,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7862:2:0"
									},
									"src": "7843:58:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "8033:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 579,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "8040:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8049:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8040:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "8040:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "8060:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "8060:7:0"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 575,
											"modifierName": {
												"argumentTypes": null,
												"id": 574,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8002:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8002:9:0"
										},
										{
											"arguments": [],
											"id": 577,
											"modifierName": {
												"argumentTypes": null,
												"id": 576,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "8012:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8012:13:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7999:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8033:0:0"
									},
									"scope": 603,
									"src": "7985:88:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "8207:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 594,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "8214:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8223:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8214:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "8214:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 598,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "8235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8235:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "8235:9:0"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 590,
											"modifierName": {
												"argumentTypes": null,
												"id": 589,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8179:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8179:9:0"
										},
										{
											"arguments": [],
											"id": 592,
											"modifierName": {
												"argumentTypes": null,
												"id": 591,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 572,
												"src": "8189:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8189:10:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8176:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8207:0:0"
									},
									"scope": 603,
									"src": "8160:90:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "7470:783:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 604,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "8279:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 605,
									"nodeType": "InheritanceSpecifier",
									"src": "8279:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 606,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "8288:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 607,
									"nodeType": "InheritanceSpecifier",
									"src": "8288:10:0"
								}
							],
							"contractDependencies": [
								139,
								347,
								169
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 717,
							"linearizedBaseContracts": [
								717,
								347,
								169,
								139
							],
							"name": "BlackList",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "8505:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 614,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "8523:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 616,
													"indexExpression": {
														"argumentTypes": null,
														"id": 615,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "8537:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8523:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 617,
												"nodeType": "Return",
												"src": "8516:28:0"
											}
										]
									},
									"id": 619,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBlackListStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "_maker",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "8456:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8455:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "8499:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8499:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8498:6:0"
									},
									"scope": 717,
									"src": "8428:124:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "8616:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 624,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "8634:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 625,
												"nodeType": "Return",
												"src": "8627:12:0"
											}
										]
									},
									"id": 627,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8577:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "8607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8606:9:0"
									},
									"scope": 717,
									"src": "8560:87:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 631,
									"name": "isBlackListed",
									"nodeType": "VariableDeclaration",
									"scope": 717,
									"src": "8655:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 630,
										"keyType": {
											"id": 628,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8664:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8655:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 629,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8675:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "8773:86:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 638,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "8784:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 640,
														"indexExpression": {
															"argumentTypes": null,
															"id": 639,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8798:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8784:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8811:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8784:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "8784:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 645,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8841:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 644,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "8826:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8826:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "8826:25:0"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 636,
											"modifierName": {
												"argumentTypes": null,
												"id": 635,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8763:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8763:9:0"
										}
									],
									"name": "addBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "_evilUser",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8737:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8736:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8773:0:0"
									},
									"scope": 717,
									"src": "8714:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "8932:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "8943:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8957:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8943:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8973:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8943:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "8943:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 663,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "9006:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 662,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "8989:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8989:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "8989:30:0"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 654,
											"modifierName": {
												"argumentTypes": null,
												"id": 653,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8922:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8922:9:0"
										}
									],
									"name": "removeBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "8893:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8892:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8932:0:0"
									},
									"scope": 717,
									"src": "8867:160:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "9106:253:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "9125:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 677,
															"indexExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "9139:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9125:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "9117:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9117:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "9117:40:0"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"name": "dirtyFunds",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "9168:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9168:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9196:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 682,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346
														],
														"referencedDeclaration": 346,
														"src": "9186:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9168:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 686,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "9224:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 688,
														"indexExpression": {
															"argumentTypes": null,
															"id": 687,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9233:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9224:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9253:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9224:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "9224:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 692,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "9265:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 693,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "9281:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9265:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "9265:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 697,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9322:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 698,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "9340:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "9302:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "9302:49:0"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 672,
											"modifierName": {
												"argumentTypes": null,
												"id": 671,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "9096:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9096:9:0"
										}
									],
									"name": "destroyBlackFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "9063:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9062:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9106:0:0"
									},
									"scope": 717,
									"src": "9035:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 708,
									"name": "DestroyedBlackFunds",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": false,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "9393:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": false,
												"name": "_balance",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "9419:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9392:41:0"
									},
									"src": "9367:67:0"
								},
								{
									"anonymous": false,
									"id": 712,
									"name": "AddedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "9463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9462:15:0"
									},
									"src": "9442:36:0"
								},
								{
									"anonymous": false,
									"id": 716,
									"name": "RemovedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9509:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9508:15:0"
									},
									"src": "9486:38:0"
								}
							],
							"scope": 1143,
							"src": "8257:1272:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 718,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "9567:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 719,
									"nodeType": "InheritanceSpecifier",
									"src": "9567:13:0"
								}
							],
							"contractDependencies": [
								139,
								347,
								546,
								205,
								169
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 749,
							"linearizedBaseContracts": [
								749,
								546,
								205,
								347,
								169,
								139
							],
							"name": "UpgradedStandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 728,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9736:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9762:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9762:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9735:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:0"
									},
									"scope": 749,
									"src": "9710:71:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 739,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFromByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9817:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9833:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9864:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9816:59:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9882:0:0"
									},
									"scope": 749,
									"src": "9787:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 748,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "9914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "9928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "9945:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9913:43:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9963:0:0"
									},
									"scope": 749,
									"src": "9889:75:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "9533:434:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 750,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 603,
										"src": "9995:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$603",
											"typeString": "contract Pausable"
										}
									},
									"id": 751,
									"nodeType": "InheritanceSpecifier",
									"src": "9995:8:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 752,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "10005:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 753,
									"nodeType": "InheritanceSpecifier",
									"src": "10005:13:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 754,
										"name": "BlackList",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 717,
										"src": "10020:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlackList_$717",
											"typeString": "contract BlackList"
										}
									},
									"id": 755,
									"nodeType": "InheritanceSpecifier",
									"src": "10020:9:0"
								}
							],
							"contractDependencies": [
								717,
								139,
								347,
								546,
								603,
								205,
								169
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								717,
								546,
								205,
								347,
								169,
								603,
								139
							],
							"name": "TetherToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 757,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10039:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 756,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10039:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 759,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10064:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 758,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "10064:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 761,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10091:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "10091:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 763,
									"name": "upgradedAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10118:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 762,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10118:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 765,
									"name": "deprecated",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "10155:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 764,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10155:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "10576:201:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10587:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 777,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10602:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10587:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "10587:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 780,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "10627:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 781,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "10634:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10627:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "10627:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 784,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "10650:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 785,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "10659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10650:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "10650:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 788,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10677:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 789,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10688:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10677:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "10677:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 792,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "10708:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 794,
														"indexExpression": {
															"argumentTypes": null,
															"id": 793,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "10717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10708:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 795,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10726:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10708:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10708:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 798,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "10751:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10764:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10751:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "10751:18:0"
											}
										]
									},
									"id": 803,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "TetherToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "_initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10502:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10523:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10537:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10537:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10553:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10553:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10501:67:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10576:0:0"
									},
									"scope": 1142,
									"src": "10481:296:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "10927:261:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10946:26:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 813,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "10947:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 816,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 814,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "10961:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10961:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10947:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "10938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10938:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "10938:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 820,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "10988:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "11120:61:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 834,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "11157:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 835,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "11162:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 832,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11142:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "11142:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11142:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 811,
															"id": 837,
															"nodeType": "Return",
															"src": "11135:34:0"
														}
													]
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "10984:197:0",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "11000:114:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 825,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11078:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11078:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 827,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "11090:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 828,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "11095:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 822,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11044:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 821,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11022:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11022:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "11022:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11022:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 811,
															"id": 830,
															"nodeType": "Return",
															"src": "11015:87:0"
														}
													]
												}
											}
										]
									},
									"id": 841,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 810,
											"modifierName": {
												"argumentTypes": null,
												"id": 809,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "10913:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10913:13:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10880:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10893:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10879:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10927:0:0"
									},
									"scope": 1142,
									"src": "10862:326:0",
									"stateMutability": "nonpayable",
									"superFunction": 334,
									"visibility": "public"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "11357:278:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11376:21:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 853,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "11377:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 855,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 854,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "11391:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11377:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "11368:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11368:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "11368:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 859,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11413:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "11556:72:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 874,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11597:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 875,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "11604:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 876,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "11609:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 872,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11578:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "11578:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11578:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 851,
															"id": 878,
															"nodeType": "Return",
															"src": "11571:45:0"
														}
													]
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "11409:219:0",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "11425:125:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 864,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "11507:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11507:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 866,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11519:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "11526:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "11531:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 861,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11469:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 860,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11447:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11447:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFromByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 739,
																	"src": "11447:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256) external"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11447:91:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 851,
															"id": 870,
															"nodeType": "Return",
															"src": "11440:98:0"
														}
													]
												}
											}
										]
									},
									"id": 882,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 850,
											"modifierName": {
												"argumentTypes": null,
												"id": 849,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "11343:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11343:13:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "11295:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "11310:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "11323:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11294:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11357:0:0"
									},
									"scope": 1142,
									"src": "11273:362:0",
									"stateMutability": "nonpayable",
									"superFunction": 481,
									"visibility": "public"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "11783:181:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 889,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11798:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "11903:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 900,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "11941:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 898,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11925:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11925:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11925:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 888,
															"id": 902,
															"nodeType": "Return",
															"src": "11918:27:0"
														}
													]
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "11794:163:0",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "11810:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 894,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "11881:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 891,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11854:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 890,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11832:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11832:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11832:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11832:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 888,
															"id": 896,
															"nodeType": "Return",
															"src": "11825:60:0"
														}
													]
												}
											}
										]
									},
									"id": 906,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "11739:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11738:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "11777:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11776:6:0"
									},
									"scope": 1142,
									"src": "11720:244:0",
									"stateMutability": "view",
									"superFunction": 346,
									"visibility": "public"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "12128:223:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 918,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "12143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "12279:65:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 932,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "12315:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 933,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "12325:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 930,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "12301:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "12301:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12301:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 917,
															"id": 935,
															"nodeType": "Return",
															"src": "12294:38:0"
														}
													]
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "12139:205:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "12155:118:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 923,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1154,
																			"src": "12232:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12232:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 925,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "12244:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 926,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "12254:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 920,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "12199:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 919,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "12177:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12177:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approveByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 748,
																	"src": "12177:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12177:84:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 917,
															"id": 928,
															"nodeType": "Return",
															"src": "12170:91:0"
														}
													]
												}
											}
										]
									},
									"id": 939,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12120:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12124:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "12120:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 916,
											"modifierName": {
												"argumentTypes": null,
												"id": 912,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "12104:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12104:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "12066:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "12084:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12084:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12065:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12128:0:0"
									},
									"scope": 1142,
									"src": "12049:302:0",
									"stateMutability": "nonpayable",
									"superFunction": 529,
									"visibility": "public"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "12530:199:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 948,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "12545:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 964,
													"nodeType": "Block",
													"src": "12655:67:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 960,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "12693:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 961,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "12701:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 958,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "12677:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "12677:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12677:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 947,
															"id": 963,
															"nodeType": "Return",
															"src": "12670:40:0"
														}
													]
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "12541:181:0",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "12557:92:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 953,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "12620:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 954,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "12628:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 950,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "12593:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 949,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "12579:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12579:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "12579:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12579:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 947,
															"id": 956,
															"nodeType": "Return",
															"src": "12572:65:0"
														}
													]
												}
											}
										]
									},
									"id": 967,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12455:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12454:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12514:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12513:16:0"
									},
									"scope": 1142,
									"src": "12436:293:0",
									"stateMutability": "view",
									"superFunction": 545,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "12857:119:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 974,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "12868:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12881:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12868:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "12868:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 978,
														"name": "upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "12896:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 979,
														"name": "_upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "12914:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12896:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "12896:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 983,
															"name": "_upgradedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "12951:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 982,
														"name": "Deprecate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "12941:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12941:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "12941:27:0"
											}
										]
									},
									"id": 987,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 972,
											"modifierName": {
												"argumentTypes": null,
												"id": 971,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "12847:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12847:9:0"
										}
									],
									"name": "deprecate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"name": "_upgradedAddress",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "12814:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12813:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12857:0:0"
									},
									"scope": 1142,
									"src": "12795:181:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "13096:164:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 992,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "13111:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "13207:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1000,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13229:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 991,
															"id": 1001,
															"nodeType": "Return",
															"src": "13222:19:0"
														}
													]
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "13107:146:0",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "13123:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 994,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "13159:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 993,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "13145:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13145:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 146,
																	"src": "13145:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13145:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 991,
															"id": 998,
															"nodeType": "Return",
															"src": "13138:51:0"
														}
													]
												}
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13062:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "13090:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13090:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13089:6:0"
									},
									"scope": 1142,
									"src": "13042:218:0",
									"stateMutability": "view",
									"superFunction": 146,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "13469:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1013,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "13488:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "13503:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13488:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1016,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13512:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13488:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "13480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13480:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "13480:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1021,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "13544:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1023,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1022,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "13553:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13544:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "13562:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13544:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1026,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "13571:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1028,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "13580:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13571:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13544:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "13536:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13536:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "13536:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1032,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "13600:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1033,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "13609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13600:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1035,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "13619:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13600:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "13600:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1038,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13636:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1039,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "13652:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13636:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "13636:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1043,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "13675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1042,
														"name": "Issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "13669:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13669:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "13669:13:0"
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1010,
											"modifierName": {
												"argumentTypes": null,
												"id": 1009,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13459:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13459:9:0"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "13439:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13439:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13438:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13469:0:0"
									},
									"scope": 1142,
									"src": "13424:266:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "13967:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1055,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13986:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1056,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "14002:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13986:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "13978:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13978:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "13978:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1061,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "14028:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1063,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1062,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "14037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14028:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1064,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "14047:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14028:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "14020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14020:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "14020:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1068,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "14067:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1069,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "14083:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14067:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "14067:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1072,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "14100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1074,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1073,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "14109:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14100:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1075,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "14119:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14100:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "14100:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "14143:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "Redeem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "14136:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14136:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "14136:14:0"
											}
										]
									},
									"id": 1083,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1052,
											"modifierName": {
												"argumentTypes": null,
												"id": 1051,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13957:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13957:9:0"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "13937:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13936:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13967:0:0"
									},
									"scope": 1142,
									"src": "13921:237:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "14239:314:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1093,
																"name": "newBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "14347:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14364:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "14347:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "14339:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14339:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "14339:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1099,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "14386:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3530",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14398:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "14386:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "14378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14378:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "14378:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1104,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "14414:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1105,
														"name": "newBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "14432:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14414:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "14414:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1108,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "14457:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14484:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "14488:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14484:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1109,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "14470:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "14470:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14470:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14457:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "14457:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "basisPointsRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "14517:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1119,
															"name": "maximumFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "14534:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "Params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "14510:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14510:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "14510:35:0"
											}
										]
									},
									"id": 1123,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1090,
											"modifierName": {
												"argumentTypes": null,
												"id": 1089,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "14229:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14229:9:0"
										}
									],
									"name": "setParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"name": "newBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "14185:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14185:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"name": "newMaxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "14206:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14184:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14239:0:0"
									},
									"scope": 1142,
									"src": "14166:387:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1127,
									"name": "Issue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14614:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14613:13:0"
									},
									"src": "14602:25:0"
								},
								{
									"anonymous": false,
									"id": 1131,
									"name": "Redeem",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "14688:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14687:13:0"
									},
									"src": "14675:26:0"
								},
								{
									"anonymous": false,
									"id": 1135,
									"name": "Deprecate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "14768:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14767:20:0"
									},
									"src": "14752:36:0"
								},
								{
									"anonymous": false,
									"id": 1141,
									"name": "Params",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"name": "feeBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "14851:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14851:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"name": "maxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "14872:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14872:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14850:34:0"
									},
									"src": "14838:47:0"
								}
							],
							"scope": 1143,
							"src": "9971:4917:0"
						}
					],
					"src": "0:14888:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/TetherToken.sol",
						"exportedSymbols": {
							"BasicToken": [
								347
							],
							"BlackList": [
								717
							],
							"ERC20": [
								205
							],
							"ERC20Basic": [
								169
							],
							"Ownable": [
								139
							],
							"Pausable": [
								603
							],
							"SafeMath": [
								97
							],
							"StandardToken": [
								546
							],
							"TetherToken": [
								1142
							],
							"UpgradedStandardToken": [
								749
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": "@title SafeMath\r\n@dev Math operations with safety checks that throw on error\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									97
								],
								"name": "SafeMath",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 2,
															"name": "ElementaryTypeName",
															"src": "159:7:0"
														}
													],
													"id": 3,
													"name": "VariableDeclaration",
													"src": "159:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 4,
															"name": "ElementaryTypeName",
															"src": "170:7:0"
														}
													],
													"id": 5,
													"name": "VariableDeclaration",
													"src": "170:9:0"
												}
											],
											"id": 6,
											"name": "ParameterList",
											"src": "158:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 7,
															"name": "ElementaryTypeName",
															"src": "204:7:0"
														}
													],
													"id": 8,
													"name": "VariableDeclaration",
													"src": "204:7:0"
												}
											],
											"id": 9,
											"name": "ParameterList",
											"src": "203:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 10,
																	"name": "Identifier",
																	"src": "228:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 11,
																	"name": "Literal",
																	"src": "233:1:0"
																}
															],
															"id": 12,
															"name": "BinaryOperation",
															"src": "228:6:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 9
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 13,
																			"name": "Literal",
																			"src": "258:1:0"
																		}
																	],
																	"id": 14,
																	"name": "Return",
																	"src": "251:8:0"
																}
															],
															"id": 15,
															"name": "Block",
															"src": "236:35:0"
														}
													],
													"id": 16,
													"name": "IfStatement",
													"src": "224:47:0"
												},
												{
													"attributes": {
														"assignments": [
															18
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 34,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 17,
																	"name": "ElementaryTypeName",
																	"src": "281:7:0"
																}
															],
															"id": 18,
															"name": "VariableDeclaration",
															"src": "281:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 19,
																	"name": "Identifier",
																	"src": "293:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 5,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 20,
																	"name": "Identifier",
																	"src": "297:1:0"
																}
															],
															"id": 21,
															"name": "BinaryOperation",
															"src": "293:5:0"
														}
													],
													"id": 22,
													"name": "VariableDeclarationStatement",
													"src": "281:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1145,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 23,
																	"name": "Identifier",
																	"src": "309:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 18,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 24,
																					"name": "Identifier",
																					"src": "316:1:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 3,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 25,
																					"name": "Identifier",
																					"src": "320:1:0"
																				}
																			],
																			"id": 26,
																			"name": "BinaryOperation",
																			"src": "316:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 5,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 27,
																			"name": "Identifier",
																			"src": "325:1:0"
																		}
																	],
																	"id": 28,
																	"name": "BinaryOperation",
																	"src": "316:10:0"
																}
															],
															"id": 29,
															"name": "FunctionCall",
															"src": "309:18:0"
														}
													],
													"id": 30,
													"name": "ExpressionStatement",
													"src": "309:18:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 9
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "uint256",
																"value": "c"
															},
															"id": 31,
															"name": "Identifier",
															"src": "345:1:0"
														}
													],
													"id": 32,
													"name": "Return",
													"src": "338:8:0"
												}
											],
											"id": 33,
											"name": "Block",
											"src": "213:141:0"
										}
									],
									"id": 34,
									"name": "FunctionDefinition",
									"src": "146:208:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 35,
															"name": "ElementaryTypeName",
															"src": "375:7:0"
														}
													],
													"id": 36,
													"name": "VariableDeclaration",
													"src": "375:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 37,
															"name": "ElementaryTypeName",
															"src": "386:7:0"
														}
													],
													"id": 38,
													"name": "VariableDeclaration",
													"src": "386:9:0"
												}
											],
											"id": 39,
											"name": "ParameterList",
											"src": "374:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 40,
															"name": "ElementaryTypeName",
															"src": "420:7:0"
														}
													],
													"id": 41,
													"name": "VariableDeclaration",
													"src": "420:7:0"
												}
											],
											"id": 42,
											"name": "ParameterList",
											"src": "419:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															44
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 52,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 43,
																	"name": "ElementaryTypeName",
																	"src": "519:7:0"
																}
															],
															"id": 44,
															"name": "VariableDeclaration",
															"src": "519:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 36,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 45,
																	"name": "Identifier",
																	"src": "531:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 38,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 46,
																	"name": "Identifier",
																	"src": "535:1:0"
																}
															],
															"id": 47,
															"name": "BinaryOperation",
															"src": "531:5:0"
														}
													],
													"id": 48,
													"name": "VariableDeclarationStatement",
													"src": "519:17:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 42
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 44,
																"type": "uint256",
																"value": "c"
															},
															"id": 49,
															"name": "Identifier",
															"src": "641:1:0"
														}
													],
													"id": 50,
													"name": "Return",
													"src": "634:8:0"
												}
											],
											"id": 51,
											"name": "Block",
											"src": "429:221:0"
										}
									],
									"id": 52,
									"name": "FunctionDefinition",
									"src": "362:288:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 53,
															"name": "ElementaryTypeName",
															"src": "671:7:0"
														}
													],
													"id": 54,
													"name": "VariableDeclaration",
													"src": "671:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 55,
															"name": "ElementaryTypeName",
															"src": "682:7:0"
														}
													],
													"id": 56,
													"name": "VariableDeclaration",
													"src": "682:9:0"
												}
											],
											"id": 57,
											"name": "ParameterList",
											"src": "670:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 58,
															"name": "ElementaryTypeName",
															"src": "716:7:0"
														}
													],
													"id": 59,
													"name": "VariableDeclaration",
													"src": "716:7:0"
												}
											],
											"id": 60,
											"name": "ParameterList",
											"src": "715:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1145,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 61,
																	"name": "Identifier",
																	"src": "736:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 56,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 62,
																			"name": "Identifier",
																			"src": "743:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 54,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 63,
																			"name": "Identifier",
																			"src": "748:1:0"
																		}
																	],
																	"id": 64,
																	"name": "BinaryOperation",
																	"src": "743:6:0"
																}
															],
															"id": 65,
															"name": "FunctionCall",
															"src": "736:14:0"
														}
													],
													"id": 66,
													"name": "ExpressionStatement",
													"src": "736:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 60
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 54,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 67,
																	"name": "Identifier",
																	"src": "768:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 56,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 68,
																	"name": "Identifier",
																	"src": "772:1:0"
																}
															],
															"id": 69,
															"name": "BinaryOperation",
															"src": "768:5:0"
														}
													],
													"id": 70,
													"name": "Return",
													"src": "761:12:0"
												}
											],
											"id": 71,
											"name": "Block",
											"src": "725:56:0"
										}
									],
									"id": 72,
									"name": "FunctionDefinition",
									"src": "658:123:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 73,
															"name": "ElementaryTypeName",
															"src": "802:7:0"
														}
													],
													"id": 74,
													"name": "VariableDeclaration",
													"src": "802:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 75,
															"name": "ElementaryTypeName",
															"src": "813:7:0"
														}
													],
													"id": 76,
													"name": "VariableDeclaration",
													"src": "813:9:0"
												}
											],
											"id": 77,
											"name": "ParameterList",
											"src": "801:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 78,
															"name": "ElementaryTypeName",
															"src": "847:7:0"
														}
													],
													"id": 79,
													"name": "VariableDeclaration",
													"src": "847:7:0"
												}
											],
											"id": 80,
											"name": "ParameterList",
											"src": "846:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															82
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 96,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 81,
																	"name": "ElementaryTypeName",
																	"src": "867:7:0"
																}
															],
															"id": 82,
															"name": "VariableDeclaration",
															"src": "867:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 74,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 83,
																	"name": "Identifier",
																	"src": "879:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 76,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 84,
																	"name": "Identifier",
																	"src": "883:1:0"
																}
															],
															"id": 85,
															"name": "BinaryOperation",
															"src": "879:5:0"
														}
													],
													"id": 86,
													"name": "VariableDeclarationStatement",
													"src": "867:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1145,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 87,
																	"name": "Identifier",
																	"src": "895:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 82,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 88,
																			"name": "Identifier",
																			"src": "902:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 74,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 89,
																			"name": "Identifier",
																			"src": "907:1:0"
																		}
																	],
																	"id": 90,
																	"name": "BinaryOperation",
																	"src": "902:6:0"
																}
															],
															"id": 91,
															"name": "FunctionCall",
															"src": "895:14:0"
														}
													],
													"id": 92,
													"name": "ExpressionStatement",
													"src": "895:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 80
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 82,
																"type": "uint256",
																"value": "c"
															},
															"id": 93,
															"name": "Identifier",
															"src": "927:1:0"
														}
													],
													"id": 94,
													"name": "Return",
													"src": "920:8:0"
												}
											],
											"id": 95,
											"name": "Block",
											"src": "856:80:0"
										}
									],
									"id": 96,
									"name": "FunctionDefinition",
									"src": "789:147:0"
								}
							],
							"id": 97,
							"name": "ContractDefinition",
							"src": "122:817:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title Ownable\r\n@dev The Ownable contract has an owner address, and provides basic authorization control\r\nfunctions, this simplifies the implementation of \"user permissions\".\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									139
								],
								"name": "Ownable",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 139,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 98,
											"name": "ElementaryTypeName",
											"src": "1162:7:0"
										}
									],
									"id": 99,
									"name": "VariableDeclaration",
									"src": "1162:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Ownable",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 100,
											"name": "ParameterList",
											"src": "1338:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 101,
											"name": "ParameterList",
											"src": "1348:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 102,
																	"name": "Identifier",
																	"src": "1359:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1154,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 103,
																			"name": "Identifier",
																			"src": "1367:3:0"
																		}
																	],
																	"id": 104,
																	"name": "MemberAccess",
																	"src": "1367:10:0"
																}
															],
															"id": 105,
															"name": "Assignment",
															"src": "1359:18:0"
														}
													],
													"id": 106,
													"name": "ExpressionStatement",
													"src": "1359:18:0"
												}
											],
											"id": 107,
											"name": "Block",
											"src": "1348:37:0"
										}
									],
									"id": 108,
									"name": "FunctionDefinition",
									"src": "1322:63:0"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 109,
											"name": "ParameterList",
											"src": "1498:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 110,
																	"name": "Identifier",
																	"src": "1512:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1154,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 111,
																					"name": "Identifier",
																					"src": "1520:3:0"
																				}
																			],
																			"id": 112,
																			"name": "MemberAccess",
																			"src": "1520:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 113,
																			"name": "Identifier",
																			"src": "1534:5:0"
																		}
																	],
																	"id": 114,
																	"name": "BinaryOperation",
																	"src": "1520:19:0"
																}
															],
															"id": 115,
															"name": "FunctionCall",
															"src": "1512:28:0"
														}
													],
													"id": 116,
													"name": "ExpressionStatement",
													"src": "1512:28:0"
												},
												{
													"id": 117,
													"name": "PlaceholderStatement",
													"src": "1551:1:0"
												}
											],
											"id": 118,
											"name": "Block",
											"src": "1501:59:0"
										}
									],
									"id": 119,
									"name": "ModifierDefinition",
									"src": "1480:80:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferOwnership",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newOwner",
														"scope": 138,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 120,
															"name": "ElementaryTypeName",
															"src": "1761:7:0"
														}
													],
													"id": 121,
													"name": "VariableDeclaration",
													"src": "1761:16:0"
												}
											],
											"id": 122,
											"name": "ParameterList",
											"src": "1760:18:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 125,
											"name": "ParameterList",
											"src": "1796:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 123,
													"name": "Identifier",
													"src": "1786:9:0"
												}
											],
											"id": 124,
											"name": "ModifierInvocation",
											"src": "1786:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "!=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 121,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 126,
																	"name": "Identifier",
																	"src": "1811:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 127,
																			"name": "ElementaryTypeNameExpression",
																			"src": "1823:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 128,
																			"name": "Literal",
																			"src": "1831:1:0"
																		}
																	],
																	"id": 129,
																	"name": "FunctionCall",
																	"src": "1823:10:0"
																}
															],
															"id": 130,
															"name": "BinaryOperation",
															"src": "1811:22:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 131,
																					"name": "Identifier",
																					"src": "1850:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 121,
																						"type": "address",
																						"value": "newOwner"
																					},
																					"id": 132,
																					"name": "Identifier",
																					"src": "1858:8:0"
																				}
																			],
																			"id": 133,
																			"name": "Assignment",
																			"src": "1850:16:0"
																		}
																	],
																	"id": 134,
																	"name": "ExpressionStatement",
																	"src": "1850:16:0"
																}
															],
															"id": 135,
															"name": "Block",
															"src": "1835:43:0"
														}
													],
													"id": 136,
													"name": "IfStatement",
													"src": "1807:71:0"
												}
											],
											"id": 137,
											"name": "Block",
											"src": "1796:89:0"
										}
									],
									"id": 138,
									"name": "FunctionDefinition",
									"src": "1734:151:0"
								}
							],
							"id": 139,
							"name": "ContractDefinition",
							"src": "1138:752:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title ERC20Basic\r\n@dev Simpler version of ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									169
								],
								"name": "ERC20Basic",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "_totalSupply",
										"scope": 169,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 140,
											"name": "ElementaryTypeName",
											"src": "2053:4:0"
										}
									],
									"id": 141,
									"name": "VariableDeclaration",
									"src": "2053:24:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 142,
											"name": "ParameterList",
											"src": "2104:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 146,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 143,
															"name": "ElementaryTypeName",
															"src": "2132:4:0"
														}
													],
													"id": 144,
													"name": "VariableDeclaration",
													"src": "2132:4:0"
												}
											],
											"id": 145,
											"name": "ParameterList",
											"src": "2131:6:0"
										}
									],
									"id": 146,
									"name": "FunctionDefinition",
									"src": "2084:54:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 147,
															"name": "ElementaryTypeName",
															"src": "2163:7:0"
														}
													],
													"id": 148,
													"name": "VariableDeclaration",
													"src": "2163:11:0"
												}
											],
											"id": 149,
											"name": "ParameterList",
											"src": "2162:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 150,
															"name": "ElementaryTypeName",
															"src": "2201:4:0"
														}
													],
													"id": 151,
													"name": "VariableDeclaration",
													"src": "2201:4:0"
												}
											],
											"id": 152,
											"name": "ParameterList",
											"src": "2200:6:0"
										}
									],
									"id": 153,
									"name": "FunctionDefinition",
									"src": "2144:63:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transfer",
										"payable": false,
										"scope": 169,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 154,
															"name": "ElementaryTypeName",
															"src": "2231:7:0"
														}
													],
													"id": 155,
													"name": "VariableDeclaration",
													"src": "2231:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 156,
															"name": "ElementaryTypeName",
															"src": "2243:4:0"
														}
													],
													"id": 157,
													"name": "VariableDeclaration",
													"src": "2243:10:0"
												}
											],
											"id": 158,
											"name": "ParameterList",
											"src": "2230:24:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 159,
											"name": "ParameterList",
											"src": "2261:0:0"
										}
									],
									"id": 160,
									"name": "FunctionDefinition",
									"src": "2213:49:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Transfer"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "from",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 161,
															"name": "ElementaryTypeName",
															"src": "2283:7:0"
														}
													],
													"id": 162,
													"name": "VariableDeclaration",
													"src": "2283:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "to",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 163,
															"name": "ElementaryTypeName",
															"src": "2305:7:0"
														}
													],
													"id": 164,
													"name": "VariableDeclaration",
													"src": "2305:18:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 165,
															"name": "ElementaryTypeName",
															"src": "2325:4:0"
														}
													],
													"id": 166,
													"name": "VariableDeclaration",
													"src": "2325:10:0"
												}
											],
											"id": 167,
											"name": "ParameterList",
											"src": "2282:54:0"
										}
									],
									"id": 168,
									"name": "EventDefinition",
									"src": "2268:69:0"
								}
							],
							"id": 169,
							"name": "ContractDefinition",
							"src": "2026:314:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									169
								],
								"contractKind": "contract",
								"documentation": "@title ERC20 interface\r\n@dev see https://github.com/ethereum/EIPs/issues/20\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									205,
									169
								],
								"name": "ERC20",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ERC20Basic"
											},
											"id": 170,
											"name": "UserDefinedTypeName",
											"src": "2455:10:0"
										}
									],
									"id": 171,
									"name": "InheritanceSpecifier",
									"src": "2455:10:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 205,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "owner",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 172,
															"name": "ElementaryTypeName",
															"src": "2492:7:0"
														}
													],
													"id": 173,
													"name": "VariableDeclaration",
													"src": "2492:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 174,
															"name": "ElementaryTypeName",
															"src": "2507:7:0"
														}
													],
													"id": 175,
													"name": "VariableDeclaration",
													"src": "2507:15:0"
												}
											],
											"id": 176,
											"name": "ParameterList",
											"src": "2491:32:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 177,
															"name": "ElementaryTypeName",
															"src": "2549:4:0"
														}
													],
													"id": 178,
													"name": "VariableDeclaration",
													"src": "2549:4:0"
												}
											],
											"id": 179,
											"name": "ParameterList",
											"src": "2548:6:0"
										}
									],
									"id": 180,
									"name": "FunctionDefinition",
									"src": "2473:82:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFrom",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 181,
															"name": "ElementaryTypeName",
															"src": "2583:7:0"
														}
													],
													"id": 182,
													"name": "VariableDeclaration",
													"src": "2583:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 183,
															"name": "ElementaryTypeName",
															"src": "2597:7:0"
														}
													],
													"id": 184,
													"name": "VariableDeclaration",
													"src": "2597:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 185,
															"name": "ElementaryTypeName",
															"src": "2609:4:0"
														}
													],
													"id": 186,
													"name": "VariableDeclaration",
													"src": "2609:10:0"
												}
											],
											"id": 187,
											"name": "ParameterList",
											"src": "2582:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 188,
											"name": "ParameterList",
											"src": "2627:0:0"
										}
									],
									"id": 189,
									"name": "FunctionDefinition",
									"src": "2561:67:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approve",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 190,
															"name": "ElementaryTypeName",
															"src": "2651:7:0"
														}
													],
													"id": 191,
													"name": "VariableDeclaration",
													"src": "2651:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 192,
															"name": "ElementaryTypeName",
															"src": "2668:4:0"
														}
													],
													"id": 193,
													"name": "VariableDeclaration",
													"src": "2668:10:0"
												}
											],
											"id": 194,
											"name": "ParameterList",
											"src": "2650:29:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 195,
											"name": "ParameterList",
											"src": "2686:0:0"
										}
									],
									"id": 196,
									"name": "FunctionDefinition",
									"src": "2634:53:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Approval"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "owner",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 197,
															"name": "ElementaryTypeName",
															"src": "2708:7:0"
														}
													],
													"id": 198,
													"name": "VariableDeclaration",
													"src": "2708:21:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "spender",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 199,
															"name": "ElementaryTypeName",
															"src": "2731:7:0"
														}
													],
													"id": 200,
													"name": "VariableDeclaration",
													"src": "2731:23:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 201,
															"name": "ElementaryTypeName",
															"src": "2756:4:0"
														}
													],
													"id": 202,
													"name": "VariableDeclaration",
													"src": "2756:10:0"
												}
											],
											"id": 203,
											"name": "ParameterList",
											"src": "2707:60:0"
										}
									],
									"id": 204,
									"name": "EventDefinition",
									"src": "2693:75:0"
								}
							],
							"id": 205,
							"name": "ContractDefinition",
							"src": "2437:334:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169
								],
								"contractKind": "contract",
								"documentation": "@title Basic token\r\n@dev Basic version of StandardToken, with no allowances.\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									347,
									169,
									139
								],
								"name": "BasicToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 206,
											"name": "UserDefinedTypeName",
											"src": "2892:7:0"
										}
									],
									"id": 207,
									"name": "InheritanceSpecifier",
									"src": "2892:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ERC20Basic"
											},
											"id": 208,
											"name": "UserDefinedTypeName",
											"src": "2901:10:0"
										}
									],
									"id": 209,
									"name": "InheritanceSpecifier",
									"src": "2901:10:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 97,
												"type": "library SafeMath"
											},
											"id": 210,
											"name": "UserDefinedTypeName",
											"src": "2925:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 211,
											"name": "ElementaryTypeName",
											"src": "2938:4:0"
										}
									],
									"id": 212,
									"name": "UsingForDirective",
									"src": "2919:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "balances",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 213,
													"name": "ElementaryTypeName",
													"src": "2959:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 214,
													"name": "ElementaryTypeName",
													"src": "2970:4:0"
												}
											],
											"id": 215,
											"name": "Mapping",
											"src": "2951:24:0"
										}
									],
									"id": 216,
									"name": "VariableDeclaration",
									"src": "2951:40:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "basisPointsRate",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 217,
											"name": "ElementaryTypeName",
											"src": "3079:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 218,
											"name": "Literal",
											"src": "3109:1:0"
										}
									],
									"id": 219,
									"name": "VariableDeclaration",
									"src": "3079:31:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "maximumFee",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 220,
											"name": "ElementaryTypeName",
											"src": "3117:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 221,
											"name": "Literal",
											"src": "3142:1:0"
										}
									],
									"id": 222,
									"name": "VariableDeclaration",
									"src": "3117:26:0"
								},
								{
									"attributes": {
										"name": "onlyPayloadSize",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "size",
														"scope": 240,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 223,
															"name": "ElementaryTypeName",
															"src": "3246:4:0"
														}
													],
													"id": 224,
													"name": "VariableDeclaration",
													"src": "3246:9:0"
												}
											],
											"id": 225,
											"name": "ParameterList",
											"src": "3245:11:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 226,
																	"name": "Identifier",
																	"src": "3268:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "length",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "data",
																										"referencedDeclaration": null,
																										"type": "bytes calldata"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1154,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 227,
																											"name": "Identifier",
																											"src": "3278:3:0"
																										}
																									],
																									"id": 228,
																									"name": "MemberAccess",
																									"src": "3278:8:0"
																								}
																							],
																							"id": 229,
																							"name": "MemberAccess",
																							"src": "3278:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"operator": "+",
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 224,
																										"type": "uint256",
																										"value": "size"
																									},
																									"id": 230,
																									"name": "Identifier",
																									"src": "3296:4:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"hexvalue": "34",
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"subdenomination": null,
																										"token": "number",
																										"type": "int_const 4",
																										"value": "4"
																									},
																									"id": 231,
																									"name": "Literal",
																									"src": "3303:1:0"
																								}
																							],
																							"id": 232,
																							"name": "BinaryOperation",
																							"src": "3296:8:0"
																						}
																					],
																					"id": 233,
																					"name": "BinaryOperation",
																					"src": "3278:26:0"
																				}
																			],
																			"id": 234,
																			"name": "TupleExpression",
																			"src": "3277:28:0"
																		}
																	],
																	"id": 235,
																	"name": "UnaryOperation",
																	"src": "3276:29:0"
																}
															],
															"id": 236,
															"name": "FunctionCall",
															"src": "3268:38:0"
														}
													],
													"id": 237,
													"name": "ExpressionStatement",
													"src": "3268:38:0"
												},
												{
													"id": 238,
													"name": "PlaceholderStatement",
													"src": "3317:1:0"
												}
											],
											"id": 239,
											"name": "Block",
											"src": "3257:69:0"
										}
									],
									"id": 240,
									"name": "ModifierDefinition",
									"src": "3221:105:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 347,
										"stateMutability": "nonpayable",
										"superFunction": 160,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 241,
															"name": "ElementaryTypeName",
															"src": "3517:7:0"
														}
													],
													"id": 242,
													"name": "VariableDeclaration",
													"src": "3517:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 243,
															"name": "ElementaryTypeName",
															"src": "3530:4:0"
														}
													],
													"id": 244,
													"name": "VariableDeclaration",
													"src": "3530:11:0"
												}
											],
											"id": 245,
											"name": "ParameterList",
											"src": "3516:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 251,
											"name": "ParameterList",
											"src": "3574:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 246,
													"name": "Identifier",
													"src": "3550:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 247,
															"name": "Literal",
															"src": "3566:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 248,
															"name": "Literal",
															"src": "3570:2:0"
														}
													],
													"id": 249,
													"name": "BinaryOperation",
													"src": "3566:6:0"
												}
											],
											"id": 250,
											"name": "ModifierInvocation",
											"src": "3550:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															253
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 252,
																	"name": "ElementaryTypeName",
																	"src": "3585:4:0"
																}
															],
															"id": 253,
															"name": "VariableDeclaration",
															"src": "3585:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 244,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 254,
																									"name": "Identifier",
																									"src": "3597:6:0"
																								}
																							],
																							"id": 255,
																							"name": "MemberAccess",
																							"src": "3597:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 256,
																							"name": "Identifier",
																							"src": "3608:15:0"
																						}
																					],
																					"id": 257,
																					"name": "FunctionCall",
																					"src": "3597:27:0"
																				}
																			],
																			"id": 258,
																			"name": "TupleExpression",
																			"src": "3596:29:0"
																		}
																	],
																	"id": 259,
																	"name": "MemberAccess",
																	"src": "3596:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 260,
																	"name": "Literal",
																	"src": "3630:5:0"
																}
															],
															"id": 261,
															"name": "FunctionCall",
															"src": "3596:40:0"
														}
													],
													"id": 262,
													"name": "VariableDeclarationStatement",
													"src": "3585:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 263,
																	"name": "Identifier",
																	"src": "3651:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 264,
																	"name": "Identifier",
																	"src": "3657:10:0"
																}
															],
															"id": 265,
															"name": "BinaryOperation",
															"src": "3651:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 266,
																					"name": "Identifier",
																					"src": "3684:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 267,
																					"name": "Identifier",
																					"src": "3690:10:0"
																				}
																			],
																			"id": 268,
																			"name": "Assignment",
																			"src": "3684:16:0"
																		}
																	],
																	"id": 269,
																	"name": "ExpressionStatement",
																	"src": "3684:16:0"
																}
															],
															"id": 270,
															"name": "Block",
															"src": "3669:43:0"
														}
													],
													"id": 271,
													"name": "IfStatement",
													"src": "3647:65:0"
												},
												{
													"attributes": {
														"assignments": [
															273
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 272,
																	"name": "ElementaryTypeName",
																	"src": "3722:4:0"
																}
															],
															"id": 273,
															"name": "VariableDeclaration",
															"src": "3722:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 274,
																			"name": "Identifier",
																			"src": "3740:6:0"
																		}
																	],
																	"id": 275,
																	"name": "MemberAccess",
																	"src": "3740:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 276,
																	"name": "Identifier",
																	"src": "3751:3:0"
																}
															],
															"id": 277,
															"name": "FunctionCall",
															"src": "3740:15:0"
														}
													],
													"id": 278,
													"name": "VariableDeclarationStatement",
													"src": "3722:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 279,
																			"name": "Identifier",
																			"src": "3766:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1154,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 280,
																					"name": "Identifier",
																					"src": "3775:3:0"
																				}
																			],
																			"id": 281,
																			"name": "MemberAccess",
																			"src": "3775:10:0"
																		}
																	],
																	"id": 282,
																	"name": "IndexAccess",
																	"src": "3766:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 283,
																							"name": "Identifier",
																							"src": "3789:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1154,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 284,
																									"name": "Identifier",
																									"src": "3798:3:0"
																								}
																							],
																							"id": 285,
																							"name": "MemberAccess",
																							"src": "3798:10:0"
																						}
																					],
																					"id": 286,
																					"name": "IndexAccess",
																					"src": "3789:20:0"
																				}
																			],
																			"id": 287,
																			"name": "MemberAccess",
																			"src": "3789:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 288,
																			"name": "Identifier",
																			"src": "3814:6:0"
																		}
																	],
																	"id": 289,
																	"name": "FunctionCall",
																	"src": "3789:32:0"
																}
															],
															"id": 290,
															"name": "Assignment",
															"src": "3766:55:0"
														}
													],
													"id": 291,
													"name": "ExpressionStatement",
													"src": "3766:55:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 292,
																			"name": "Identifier",
																			"src": "3832:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 242,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 293,
																			"name": "Identifier",
																			"src": "3841:3:0"
																		}
																	],
																	"id": 294,
																	"name": "IndexAccess",
																	"src": "3832:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 295,
																							"name": "Identifier",
																							"src": "3848:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 242,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 296,
																							"name": "Identifier",
																							"src": "3857:3:0"
																						}
																					],
																					"id": 297,
																					"name": "IndexAccess",
																					"src": "3848:13:0"
																				}
																			],
																			"id": 298,
																			"name": "MemberAccess",
																			"src": "3848:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 273,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 299,
																			"name": "Identifier",
																			"src": "3866:10:0"
																		}
																	],
																	"id": 300,
																	"name": "FunctionCall",
																	"src": "3848:29:0"
																}
															],
															"id": 301,
															"name": "Assignment",
															"src": "3832:45:0"
														}
													],
													"id": 302,
													"name": "ExpressionStatement",
													"src": "3832:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 303,
																	"name": "Identifier",
																	"src": "3892:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 304,
																	"name": "Literal",
																	"src": "3898:1:0"
																}
															],
															"id": 305,
															"name": "BinaryOperation",
															"src": "3892:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 306,
																							"name": "Identifier",
																							"src": "3916:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 307,
																							"name": "Identifier",
																							"src": "3925:5:0"
																						}
																					],
																					"id": 308,
																					"name": "IndexAccess",
																					"src": "3916:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 309,
																											"name": "Identifier",
																											"src": "3934:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 310,
																											"name": "Identifier",
																											"src": "3943:5:0"
																										}
																									],
																									"id": 311,
																									"name": "IndexAccess",
																									"src": "3934:15:0"
																								}
																							],
																							"id": 312,
																							"name": "MemberAccess",
																							"src": "3934:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 253,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 313,
																							"name": "Identifier",
																							"src": "3954:3:0"
																						}
																					],
																					"id": 314,
																					"name": "FunctionCall",
																					"src": "3934:24:0"
																				}
																			],
																			"id": 315,
																			"name": "Assignment",
																			"src": "3916:42:0"
																		}
																	],
																	"id": 316,
																	"name": "ExpressionStatement",
																	"src": "3916:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 317,
																					"name": "Identifier",
																					"src": "3973:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1154,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 318,
																							"name": "Identifier",
																							"src": "3982:3:0"
																						}
																					],
																					"id": 319,
																					"name": "MemberAccess",
																					"src": "3982:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 320,
																					"name": "Identifier",
																					"src": "3994:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 321,
																					"name": "Identifier",
																					"src": "4001:3:0"
																				}
																			],
																			"id": 322,
																			"name": "FunctionCall",
																			"src": "3973:32:0"
																		}
																	],
																	"id": 323,
																	"name": "ExpressionStatement",
																	"src": "3973:32:0"
																}
															],
															"id": 324,
															"name": "Block",
															"src": "3901:116:0"
														}
													],
													"id": 325,
													"name": "IfStatement",
													"src": "3888:129:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 326,
																	"name": "Identifier",
																	"src": "4027:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1154,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 327,
																			"name": "Identifier",
																			"src": "4036:3:0"
																		}
																	],
																	"id": 328,
																	"name": "MemberAccess",
																	"src": "4036:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 242,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 329,
																	"name": "Identifier",
																	"src": "4048:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 273,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 330,
																	"name": "Identifier",
																	"src": "4053:10:0"
																}
															],
															"id": 331,
															"name": "FunctionCall",
															"src": "4027:37:0"
														}
													],
													"id": 332,
													"name": "ExpressionStatement",
													"src": "4027:37:0"
												}
											],
											"id": 333,
											"name": "Block",
											"src": "3574:498:0"
										}
									],
									"id": 334,
									"name": "FunctionDefinition",
									"src": "3499:573:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 347,
										"stateMutability": "view",
										"superFunction": 153,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 335,
															"name": "ElementaryTypeName",
															"src": "4309:7:0"
														}
													],
													"id": 336,
													"name": "VariableDeclaration",
													"src": "4309:14:0"
												}
											],
											"id": 337,
											"name": "ParameterList",
											"src": "4308:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "balance",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 338,
															"name": "ElementaryTypeName",
															"src": "4350:4:0"
														}
													],
													"id": 339,
													"name": "VariableDeclaration",
													"src": "4350:12:0"
												}
											],
											"id": 340,
											"name": "ParameterList",
											"src": "4349:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 340
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 216,
																		"type": "mapping(address => uint256)",
																		"value": "balances"
																	},
																	"id": 341,
																	"name": "Identifier",
																	"src": "4382:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 336,
																		"type": "address",
																		"value": "_owner"
																	},
																	"id": 342,
																	"name": "Identifier",
																	"src": "4391:6:0"
																}
															],
															"id": 343,
															"name": "IndexAccess",
															"src": "4382:16:0"
														}
													],
													"id": 344,
													"name": "Return",
													"src": "4375:23:0"
												}
											],
											"id": 345,
											"name": "Block",
											"src": "4364:42:0"
										}
									],
									"id": 346,
									"name": "FunctionDefinition",
									"src": "4290:116:0"
								}
							],
							"id": 347,
							"name": "ContractDefinition",
							"src": "2869:1542:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									347,
									205,
									169
								],
								"contractKind": "contract",
								"documentation": "@title Standard ERC20 token\r\n\n * @dev Implementation of the basic standard token.\r\n@dev https://github.com/ethereum/EIPs/issues/20\r\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\r",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									546,
									205,
									347,
									169,
									139
								],
								"name": "StandardToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 348,
											"name": "UserDefinedTypeName",
											"src": "4714:10:0"
										}
									],
									"id": 349,
									"name": "InheritanceSpecifier",
									"src": "4714:10:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20",
												"referencedDeclaration": 205,
												"type": "contract ERC20"
											},
											"id": 350,
											"name": "UserDefinedTypeName",
											"src": "4726:5:0"
										}
									],
									"id": 351,
									"name": "InheritanceSpecifier",
									"src": "4726:5:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "allowed",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => mapping(address => uint256))",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => mapping(address => uint256))"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 352,
													"name": "ElementaryTypeName",
													"src": "4750:7:0"
												},
												{
													"attributes": {
														"type": "mapping(address => uint256)"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 353,
															"name": "ElementaryTypeName",
															"src": "4770:7:0"
														},
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 354,
															"name": "ElementaryTypeName",
															"src": "4781:4:0"
														}
													],
													"id": 355,
													"name": "Mapping",
													"src": "4761:25:0"
												}
											],
											"id": 356,
											"name": "Mapping",
											"src": "4741:46:0"
										}
									],
									"id": 357,
									"name": "VariableDeclaration",
									"src": "4741:61:0"
								},
								{
									"attributes": {
										"constant": true,
										"name": "MAX_UINT",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 358,
											"name": "ElementaryTypeName",
											"src": "4811:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
													"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
												},
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"operator": "-",
												"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
															"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "**",
														"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 359,
															"name": "Literal",
															"src": "4843:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "323536",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 256",
																"value": "256"
															},
															"id": 360,
															"name": "Literal",
															"src": "4846:3:0"
														}
													],
													"id": 361,
													"name": "BinaryOperation",
													"src": "4843:6:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "31",
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 1",
														"value": "1"
													},
													"id": 362,
													"name": "Literal",
													"src": "4852:1:0"
												}
											],
											"id": 363,
											"name": "BinaryOperation",
											"src": "4843:10:0"
										}
									],
									"id": 364,
									"name": "VariableDeclaration",
									"src": "4811:42:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 189,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 365,
															"name": "ElementaryTypeName",
															"src": "5165:7:0"
														}
													],
													"id": 366,
													"name": "VariableDeclaration",
													"src": "5165:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 367,
															"name": "ElementaryTypeName",
															"src": "5180:7:0"
														}
													],
													"id": 368,
													"name": "VariableDeclaration",
													"src": "5180:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 369,
															"name": "ElementaryTypeName",
															"src": "5193:4:0"
														}
													],
													"id": 370,
													"name": "VariableDeclaration",
													"src": "5193:11:0"
												}
											],
											"id": 371,
											"name": "ParameterList",
											"src": "5164:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 377,
											"name": "ParameterList",
											"src": "5237:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 372,
													"name": "Identifier",
													"src": "5213:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 96"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "33",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 3",
																"value": "3"
															},
															"id": 373,
															"name": "Literal",
															"src": "5229:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 374,
															"name": "Literal",
															"src": "5233:2:0"
														}
													],
													"id": 375,
													"name": "BinaryOperation",
													"src": "5229:6:0"
												}
											],
											"id": 376,
											"name": "ModifierInvocation",
											"src": "5213:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															378
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "_allowance",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"typeName": null,
																"value": null,
																"visibility": "internal"
															},
															"children": [],
															"id": 378,
															"name": "VariableDeclaration",
															"src": "5248:14:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 379,
																			"name": "Identifier",
																			"src": "5265:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 380,
																			"name": "Identifier",
																			"src": "5273:5:0"
																		}
																	],
																	"id": 381,
																	"name": "IndexAccess",
																	"src": "5265:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1154,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 382,
																			"name": "Identifier",
																			"src": "5280:3:0"
																		}
																	],
																	"id": 383,
																	"name": "MemberAccess",
																	"src": "5280:10:0"
																}
															],
															"id": 384,
															"name": "IndexAccess",
															"src": "5265:26:0"
														}
													],
													"id": 385,
													"name": "VariableDeclarationStatement",
													"src": "5248:43:0"
												},
												{
													"attributes": {
														"assignments": [
															387
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 386,
																	"name": "ElementaryTypeName",
																	"src": "5462:4:0"
																}
															],
															"id": 387,
															"name": "VariableDeclaration",
															"src": "5462:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 370,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 388,
																									"name": "Identifier",
																									"src": "5474:6:0"
																								}
																							],
																							"id": 389,
																							"name": "MemberAccess",
																							"src": "5474:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 390,
																							"name": "Identifier",
																							"src": "5485:15:0"
																						}
																					],
																					"id": 391,
																					"name": "FunctionCall",
																					"src": "5474:27:0"
																				}
																			],
																			"id": 392,
																			"name": "TupleExpression",
																			"src": "5473:29:0"
																		}
																	],
																	"id": 393,
																	"name": "MemberAccess",
																	"src": "5473:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 394,
																	"name": "Literal",
																	"src": "5507:5:0"
																}
															],
															"id": 395,
															"name": "FunctionCall",
															"src": "5473:40:0"
														}
													],
													"id": 396,
													"name": "VariableDeclarationStatement",
													"src": "5462:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 397,
																	"name": "Identifier",
																	"src": "5528:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 398,
																	"name": "Identifier",
																	"src": "5534:10:0"
																}
															],
															"id": 399,
															"name": "BinaryOperation",
															"src": "5528:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 400,
																					"name": "Identifier",
																					"src": "5561:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 401,
																					"name": "Identifier",
																					"src": "5567:10:0"
																				}
																			],
																			"id": 402,
																			"name": "Assignment",
																			"src": "5561:16:0"
																		}
																	],
																	"id": 403,
																	"name": "ExpressionStatement",
																	"src": "5561:16:0"
																}
															],
															"id": 404,
															"name": "Block",
															"src": "5546:43:0"
														}
													],
													"id": 405,
													"name": "IfStatement",
													"src": "5524:65:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "<",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 378,
																		"type": "uint256",
																		"value": "_allowance"
																	},
																	"id": 406,
																	"name": "Identifier",
																	"src": "5603:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 364,
																		"type": "uint256",
																		"value": "MAX_UINT"
																	},
																	"id": 407,
																	"name": "Identifier",
																	"src": "5616:8:0"
																}
															],
															"id": 408,
															"name": "BinaryOperation",
															"src": "5603:21:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "mapping(address => uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 357,
																										"type": "mapping(address => mapping(address => uint256))",
																										"value": "allowed"
																									},
																									"id": 409,
																									"name": "Identifier",
																									"src": "5641:7:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 366,
																										"type": "address",
																										"value": "_from"
																									},
																									"id": 410,
																									"name": "Identifier",
																									"src": "5649:5:0"
																								}
																							],
																							"id": 413,
																							"name": "IndexAccess",
																							"src": "5641:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1154,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 411,
																									"name": "Identifier",
																									"src": "5656:3:0"
																								}
																							],
																							"id": 412,
																							"name": "MemberAccess",
																							"src": "5656:10:0"
																						}
																					],
																					"id": 414,
																					"name": "IndexAccess",
																					"src": "5641:26:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 72,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 378,
																										"type": "uint256",
																										"value": "_allowance"
																									},
																									"id": 415,
																									"name": "Identifier",
																									"src": "5670:10:0"
																								}
																							],
																							"id": 416,
																							"name": "MemberAccess",
																							"src": "5670:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 370,
																								"type": "uint256",
																								"value": "_value"
																							},
																							"id": 417,
																							"name": "Identifier",
																							"src": "5685:6:0"
																						}
																					],
																					"id": 418,
																					"name": "FunctionCall",
																					"src": "5670:22:0"
																				}
																			],
																			"id": 419,
																			"name": "Assignment",
																			"src": "5641:51:0"
																		}
																	],
																	"id": 420,
																	"name": "ExpressionStatement",
																	"src": "5641:51:0"
																}
															],
															"id": 421,
															"name": "Block",
															"src": "5626:78:0"
														}
													],
													"id": 422,
													"name": "IfStatement",
													"src": "5599:105:0"
												},
												{
													"attributes": {
														"assignments": [
															424
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 423,
																	"name": "ElementaryTypeName",
																	"src": "5714:4:0"
																}
															],
															"id": 424,
															"name": "VariableDeclaration",
															"src": "5714:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 425,
																			"name": "Identifier",
																			"src": "5732:6:0"
																		}
																	],
																	"id": 426,
																	"name": "MemberAccess",
																	"src": "5732:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 427,
																	"name": "Identifier",
																	"src": "5743:3:0"
																}
															],
															"id": 428,
															"name": "FunctionCall",
															"src": "5732:15:0"
														}
													],
													"id": 429,
													"name": "VariableDeclarationStatement",
													"src": "5714:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 430,
																			"name": "Identifier",
																			"src": "5758:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 431,
																			"name": "Identifier",
																			"src": "5767:5:0"
																		}
																	],
																	"id": 432,
																	"name": "IndexAccess",
																	"src": "5758:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 433,
																							"name": "Identifier",
																							"src": "5776:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 366,
																								"type": "address",
																								"value": "_from"
																							},
																							"id": 434,
																							"name": "Identifier",
																							"src": "5785:5:0"
																						}
																					],
																					"id": 435,
																					"name": "IndexAccess",
																					"src": "5776:15:0"
																				}
																			],
																			"id": 436,
																			"name": "MemberAccess",
																			"src": "5776:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 437,
																			"name": "Identifier",
																			"src": "5796:6:0"
																		}
																	],
																	"id": 438,
																	"name": "FunctionCall",
																	"src": "5776:27:0"
																}
															],
															"id": 439,
															"name": "Assignment",
															"src": "5758:45:0"
														}
													],
													"id": 440,
													"name": "ExpressionStatement",
													"src": "5758:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 441,
																			"name": "Identifier",
																			"src": "5814:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 368,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 442,
																			"name": "Identifier",
																			"src": "5823:3:0"
																		}
																	],
																	"id": 443,
																	"name": "IndexAccess",
																	"src": "5814:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 444,
																							"name": "Identifier",
																							"src": "5830:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 368,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 445,
																							"name": "Identifier",
																							"src": "5839:3:0"
																						}
																					],
																					"id": 446,
																					"name": "IndexAccess",
																					"src": "5830:13:0"
																				}
																			],
																			"id": 447,
																			"name": "MemberAccess",
																			"src": "5830:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 424,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 448,
																			"name": "Identifier",
																			"src": "5848:10:0"
																		}
																	],
																	"id": 449,
																	"name": "FunctionCall",
																	"src": "5830:29:0"
																}
															],
															"id": 450,
															"name": "Assignment",
															"src": "5814:45:0"
														}
													],
													"id": 451,
													"name": "ExpressionStatement",
													"src": "5814:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 452,
																	"name": "Identifier",
																	"src": "5874:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 453,
																	"name": "Literal",
																	"src": "5880:1:0"
																}
															],
															"id": 454,
															"name": "BinaryOperation",
															"src": "5874:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 455,
																							"name": "Identifier",
																							"src": "5898:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 456,
																							"name": "Identifier",
																							"src": "5907:5:0"
																						}
																					],
																					"id": 457,
																					"name": "IndexAccess",
																					"src": "5898:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 458,
																											"name": "Identifier",
																											"src": "5916:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 459,
																											"name": "Identifier",
																											"src": "5925:5:0"
																										}
																									],
																									"id": 460,
																									"name": "IndexAccess",
																									"src": "5916:15:0"
																								}
																							],
																							"id": 461,
																							"name": "MemberAccess",
																							"src": "5916:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 387,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 462,
																							"name": "Identifier",
																							"src": "5936:3:0"
																						}
																					],
																					"id": 463,
																					"name": "FunctionCall",
																					"src": "5916:24:0"
																				}
																			],
																			"id": 464,
																			"name": "Assignment",
																			"src": "5898:42:0"
																		}
																	],
																	"id": 465,
																	"name": "ExpressionStatement",
																	"src": "5898:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 466,
																					"name": "Identifier",
																					"src": "5955:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 366,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 467,
																					"name": "Identifier",
																					"src": "5964:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 468,
																					"name": "Identifier",
																					"src": "5971:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 469,
																					"name": "Identifier",
																					"src": "5978:3:0"
																				}
																			],
																			"id": 470,
																			"name": "FunctionCall",
																			"src": "5955:27:0"
																		}
																	],
																	"id": 471,
																	"name": "ExpressionStatement",
																	"src": "5955:27:0"
																}
															],
															"id": 472,
															"name": "Block",
															"src": "5883:111:0"
														}
													],
													"id": 473,
													"name": "IfStatement",
													"src": "5870:124:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 474,
																	"name": "Identifier",
																	"src": "6004:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 366,
																		"type": "address",
																		"value": "_from"
																	},
																	"id": 475,
																	"name": "Identifier",
																	"src": "6013:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 368,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 476,
																	"name": "Identifier",
																	"src": "6020:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 424,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 477,
																	"name": "Identifier",
																	"src": "6025:10:0"
																}
															],
															"id": 478,
															"name": "FunctionCall",
															"src": "6004:32:0"
														}
													],
													"id": 479,
													"name": "ExpressionStatement",
													"src": "6004:32:0"
												}
											],
											"id": 480,
											"name": "Block",
											"src": "5237:807:0"
										}
									],
									"id": 481,
									"name": "FunctionDefinition",
									"src": "5143:901:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 196,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 482,
															"name": "ElementaryTypeName",
															"src": "6308:7:0"
														}
													],
													"id": 483,
													"name": "VariableDeclaration",
													"src": "6308:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 484,
															"name": "ElementaryTypeName",
															"src": "6326:4:0"
														}
													],
													"id": 485,
													"name": "VariableDeclaration",
													"src": "6326:11:0"
												}
											],
											"id": 486,
											"name": "ParameterList",
											"src": "6307:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 492,
											"name": "ParameterList",
											"src": "6370:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 487,
													"name": "Identifier",
													"src": "6346:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 488,
															"name": "Literal",
															"src": "6362:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 489,
															"name": "Literal",
															"src": "6366:2:0"
														}
													],
													"id": 490,
													"name": "BinaryOperation",
													"src": "6362:6:0"
												}
											],
											"id": 491,
											"name": "ModifierInvocation",
											"src": "6346:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 493,
																	"name": "Identifier",
																	"src": "6691:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "&&",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 485,
																												"type": "uint256",
																												"value": "_value"
																											},
																											"id": 494,
																											"name": "Identifier",
																											"src": "6702:6:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 495,
																											"name": "Literal",
																											"src": "6712:1:0"
																										}
																									],
																									"id": 496,
																									"name": "BinaryOperation",
																									"src": "6702:11:0"
																								}
																							],
																							"id": 497,
																							"name": "TupleExpression",
																							"src": "6701:13:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"type": "mapping(address => uint256)"
																													},
																													"children": [
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"overloadedDeclarations": [
																																	null
																																],
																																"referencedDeclaration": 357,
																																"type": "mapping(address => mapping(address => uint256))",
																																"value": "allowed"
																															},
																															"id": 498,
																															"name": "Identifier",
																															"src": "6719:7:0"
																														},
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"member_name": "sender",
																																"referencedDeclaration": null,
																																"type": "address"
																															},
																															"children": [
																																{
																																	"attributes": {
																																		"argumentTypes": null,
																																		"overloadedDeclarations": [
																																			null
																																		],
																																		"referencedDeclaration": 1154,
																																		"type": "msg",
																																		"value": "msg"
																																	},
																																	"id": 499,
																																	"name": "Identifier",
																																	"src": "6727:3:0"
																																}
																															],
																															"id": 500,
																															"name": "MemberAccess",
																															"src": "6727:10:0"
																														}
																													],
																													"id": 501,
																													"name": "IndexAccess",
																													"src": "6719:19:0"
																												},
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 483,
																														"type": "address",
																														"value": "_spender"
																													},
																													"id": 502,
																													"name": "Identifier",
																													"src": "6739:8:0"
																												}
																											],
																											"id": 503,
																											"name": "IndexAccess",
																											"src": "6719:29:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 504,
																											"name": "Literal",
																											"src": "6752:1:0"
																										}
																									],
																									"id": 505,
																									"name": "BinaryOperation",
																									"src": "6719:34:0"
																								}
																							],
																							"id": 506,
																							"name": "TupleExpression",
																							"src": "6718:36:0"
																						}
																					],
																					"id": 507,
																					"name": "BinaryOperation",
																					"src": "6701:53:0"
																				}
																			],
																			"id": 508,
																			"name": "TupleExpression",
																			"src": "6700:55:0"
																		}
																	],
																	"id": 509,
																	"name": "UnaryOperation",
																	"src": "6699:56:0"
																}
															],
															"id": 510,
															"name": "FunctionCall",
															"src": "6691:65:0"
														}
													],
													"id": 511,
													"name": "ExpressionStatement",
													"src": "6691:65:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "mapping(address => uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 357,
																						"type": "mapping(address => mapping(address => uint256))",
																						"value": "allowed"
																					},
																					"id": 512,
																					"name": "Identifier",
																					"src": "6769:7:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1154,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 513,
																							"name": "Identifier",
																							"src": "6777:3:0"
																						}
																					],
																					"id": 514,
																					"name": "MemberAccess",
																					"src": "6777:10:0"
																				}
																			],
																			"id": 516,
																			"name": "IndexAccess",
																			"src": "6769:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 483,
																				"type": "address",
																				"value": "_spender"
																			},
																			"id": 515,
																			"name": "Identifier",
																			"src": "6789:8:0"
																		}
																	],
																	"id": 517,
																	"name": "IndexAccess",
																	"src": "6769:29:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 518,
																	"name": "Identifier",
																	"src": "6801:6:0"
																}
															],
															"id": 519,
															"name": "Assignment",
															"src": "6769:38:0"
														}
													],
													"id": 520,
													"name": "ExpressionStatement",
													"src": "6769:38:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 204,
																		"type": "function (address,address,uint256)",
																		"value": "Approval"
																	},
																	"id": 521,
																	"name": "Identifier",
																	"src": "6818:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1154,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 522,
																			"name": "Identifier",
																			"src": "6827:3:0"
																		}
																	],
																	"id": 523,
																	"name": "MemberAccess",
																	"src": "6827:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 483,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 524,
																	"name": "Identifier",
																	"src": "6839:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 525,
																	"name": "Identifier",
																	"src": "6849:6:0"
																}
															],
															"id": 526,
															"name": "FunctionCall",
															"src": "6818:38:0"
														}
													],
													"id": 527,
													"name": "ExpressionStatement",
													"src": "6818:38:0"
												}
											],
											"id": 528,
											"name": "Block",
											"src": "6370:494:0"
										}
									],
									"id": 529,
									"name": "FunctionDefinition",
									"src": "6291:573:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 546,
										"stateMutability": "view",
										"superFunction": 180,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 530,
															"name": "ElementaryTypeName",
															"src": "7216:7:0"
														}
													],
													"id": 531,
													"name": "VariableDeclaration",
													"src": "7216:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 532,
															"name": "ElementaryTypeName",
															"src": "7232:7:0"
														}
													],
													"id": 533,
													"name": "VariableDeclaration",
													"src": "7232:16:0"
												}
											],
											"id": 534,
											"name": "ParameterList",
											"src": "7215:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 535,
															"name": "ElementaryTypeName",
															"src": "7275:4:0"
														}
													],
													"id": 536,
													"name": "VariableDeclaration",
													"src": "7275:14:0"
												}
											],
											"id": 537,
											"name": "ParameterList",
											"src": "7274:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 537
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 538,
																			"name": "Identifier",
																			"src": "7309:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 531,
																				"type": "address",
																				"value": "_owner"
																			},
																			"id": 539,
																			"name": "Identifier",
																			"src": "7317:6:0"
																		}
																	],
																	"id": 540,
																	"name": "IndexAccess",
																	"src": "7309:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 533,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 541,
																	"name": "Identifier",
																	"src": "7325:8:0"
																}
															],
															"id": 542,
															"name": "IndexAccess",
															"src": "7309:25:0"
														}
													],
													"id": 543,
													"name": "Return",
													"src": "7302:32:0"
												}
											],
											"id": 544,
											"name": "Block",
											"src": "7291:51:0"
										}
									],
									"id": 545,
									"name": "FunctionDefinition",
									"src": "7197:145:0"
								}
							],
							"id": 546,
							"name": "ContractDefinition",
							"src": "4688:2659:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139
								],
								"contractKind": "contract",
								"documentation": "@title Pausable\r\n@dev Base contract which allows children to implement an emergency stop mechanism.\r",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									603,
									139
								],
								"name": "Pausable",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 547,
											"name": "UserDefinedTypeName",
											"src": "7491:7:0"
										}
									],
									"id": 548,
									"name": "InheritanceSpecifier",
									"src": "7491:7:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Pause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 549,
											"name": "ParameterList",
											"src": "7515:2:0"
										}
									],
									"id": 550,
									"name": "EventDefinition",
									"src": "7504:14:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Unpause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 551,
											"name": "ParameterList",
											"src": "7535:2:0"
										}
									],
									"id": 552,
									"name": "EventDefinition",
									"src": "7522:16:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "paused",
										"scope": 603,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 553,
											"name": "ElementaryTypeName",
											"src": "7544:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "66616c7365",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "bool",
												"type": "bool",
												"value": "false"
											},
											"id": 554,
											"name": "Literal",
											"src": "7565:5:0"
										}
									],
									"id": 555,
									"name": "VariableDeclaration",
									"src": "7544:26:0"
								},
								{
									"attributes": {
										"name": "whenNotPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 556,
											"name": "ParameterList",
											"src": "7701:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 557,
																	"name": "Identifier",
																	"src": "7711:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 555,
																				"type": "bool",
																				"value": "paused"
																			},
																			"id": 558,
																			"name": "Identifier",
																			"src": "7720:6:0"
																		}
																	],
																	"id": 559,
																	"name": "UnaryOperation",
																	"src": "7719:7:0"
																}
															],
															"id": 560,
															"name": "FunctionCall",
															"src": "7711:16:0"
														}
													],
													"id": 561,
													"name": "ExpressionStatement",
													"src": "7711:16:0"
												},
												{
													"id": 562,
													"name": "PlaceholderStatement",
													"src": "7734:1:0"
												}
											],
											"id": 563,
											"name": "Block",
											"src": "7704:37:0"
										}
									],
									"id": 564,
									"name": "ModifierDefinition",
									"src": "7679:62:0"
								},
								{
									"attributes": {
										"name": "whenPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 565,
											"name": "ParameterList",
											"src": "7862:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 566,
																	"name": "Identifier",
																	"src": "7872:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 567,
																	"name": "Identifier",
																	"src": "7880:6:0"
																}
															],
															"id": 568,
															"name": "FunctionCall",
															"src": "7872:15:0"
														}
													],
													"id": 569,
													"name": "ExpressionStatement",
													"src": "7872:15:0"
												},
												{
													"id": 570,
													"name": "PlaceholderStatement",
													"src": "7894:1:0"
												}
											],
											"id": 571,
											"name": "Block",
											"src": "7865:36:0"
										}
									],
									"id": 572,
									"name": "ModifierDefinition",
									"src": "7843:58:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "pause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 573,
											"name": "ParameterList",
											"src": "7999:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 578,
											"name": "ParameterList",
											"src": "8033:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 574,
													"name": "Identifier",
													"src": "8002:9:0"
												}
											],
											"id": 575,
											"name": "ModifierInvocation",
											"src": "8002:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 576,
													"name": "Identifier",
													"src": "8012:13:0"
												}
											],
											"id": 577,
											"name": "ModifierInvocation",
											"src": "8012:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 579,
																	"name": "Identifier",
																	"src": "8040:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 580,
																	"name": "Literal",
																	"src": "8049:4:0"
																}
															],
															"id": 581,
															"name": "Assignment",
															"src": "8040:13:0"
														}
													],
													"id": 582,
													"name": "ExpressionStatement",
													"src": "8040:13:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 550,
																		"type": "function ()",
																		"value": "Pause"
																	},
																	"id": 583,
																	"name": "Identifier",
																	"src": "8060:5:0"
																}
															],
															"id": 584,
															"name": "FunctionCall",
															"src": "8060:7:0"
														}
													],
													"id": 585,
													"name": "ExpressionStatement",
													"src": "8060:7:0"
												}
											],
											"id": 586,
											"name": "Block",
											"src": "8033:40:0"
										}
									],
									"id": 587,
									"name": "FunctionDefinition",
									"src": "7985:88:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "unpause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 588,
											"name": "ParameterList",
											"src": "8176:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 593,
											"name": "ParameterList",
											"src": "8207:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 589,
													"name": "Identifier",
													"src": "8179:9:0"
												}
											],
											"id": 590,
											"name": "ModifierInvocation",
											"src": "8179:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 572,
														"type": "modifier ()",
														"value": "whenPaused"
													},
													"id": 591,
													"name": "Identifier",
													"src": "8189:10:0"
												}
											],
											"id": 592,
											"name": "ModifierInvocation",
											"src": "8189:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 594,
																	"name": "Identifier",
																	"src": "8214:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 595,
																	"name": "Literal",
																	"src": "8223:5:0"
																}
															],
															"id": 596,
															"name": "Assignment",
															"src": "8214:14:0"
														}
													],
													"id": 597,
													"name": "ExpressionStatement",
													"src": "8214:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 552,
																		"type": "function ()",
																		"value": "Unpause"
																	},
																	"id": 598,
																	"name": "Identifier",
																	"src": "8235:7:0"
																}
															],
															"id": 599,
															"name": "FunctionCall",
															"src": "8235:9:0"
														}
													],
													"id": 600,
													"name": "ExpressionStatement",
													"src": "8235:9:0"
												}
											],
											"id": 601,
											"name": "Block",
											"src": "8207:43:0"
										}
									],
									"id": 602,
									"name": "FunctionDefinition",
									"src": "8160:90:0"
								}
							],
							"id": 603,
							"name": "ContractDefinition",
							"src": "7470:783:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									347,
									169
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									717,
									347,
									169,
									139
								],
								"name": "BlackList",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 604,
											"name": "UserDefinedTypeName",
											"src": "8279:7:0"
										}
									],
									"id": 605,
									"name": "InheritanceSpecifier",
									"src": "8279:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 606,
											"name": "UserDefinedTypeName",
											"src": "8288:10:0"
										}
									],
									"id": 607,
									"name": "InheritanceSpecifier",
									"src": "8288:10:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBlackListStatus",
										"payable": false,
										"scope": 717,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_maker",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 608,
															"name": "ElementaryTypeName",
															"src": "8456:7:0"
														}
													],
													"id": 609,
													"name": "VariableDeclaration",
													"src": "8456:14:0"
												}
											],
											"id": 610,
											"name": "ParameterList",
											"src": "8455:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 611,
															"name": "ElementaryTypeName",
															"src": "8499:4:0"
														}
													],
													"id": 612,
													"name": "VariableDeclaration",
													"src": "8499:4:0"
												}
											],
											"id": 613,
											"name": "ParameterList",
											"src": "8498:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 613
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 631,
																		"type": "mapping(address => bool)",
																		"value": "isBlackListed"
																	},
																	"id": 614,
																	"name": "Identifier",
																	"src": "8523:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 609,
																		"type": "address",
																		"value": "_maker"
																	},
																	"id": 615,
																	"name": "Identifier",
																	"src": "8537:6:0"
																}
															],
															"id": 616,
															"name": "IndexAccess",
															"src": "8523:21:0"
														}
													],
													"id": 617,
													"name": "Return",
													"src": "8516:28:0"
												}
											],
											"id": 618,
											"name": "Block",
											"src": "8505:47:0"
										}
									],
									"id": 619,
									"name": "FunctionDefinition",
									"src": "8428:124:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getOwner",
										"payable": false,
										"scope": 717,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 620,
											"name": "ParameterList",
											"src": "8577:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 627,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 621,
															"name": "ElementaryTypeName",
															"src": "8607:7:0"
														}
													],
													"id": 622,
													"name": "VariableDeclaration",
													"src": "8607:7:0"
												}
											],
											"id": 623,
											"name": "ParameterList",
											"src": "8606:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 623
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 99,
																"type": "address",
																"value": "owner"
															},
															"id": 624,
															"name": "Identifier",
															"src": "8634:5:0"
														}
													],
													"id": 625,
													"name": "Return",
													"src": "8627:12:0"
												}
											],
											"id": 626,
											"name": "Block",
											"src": "8616:31:0"
										}
									],
									"id": 627,
									"name": "FunctionDefinition",
									"src": "8560:87:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "isBlackListed",
										"scope": 717,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 628,
													"name": "ElementaryTypeName",
													"src": "8664:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 629,
													"name": "ElementaryTypeName",
													"src": "8675:4:0"
												}
											],
											"id": 630,
											"name": "Mapping",
											"src": "8655:25:0"
										}
									],
									"id": 631,
									"name": "VariableDeclaration",
									"src": "8655:46:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "addBlackList",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_evilUser",
														"scope": 649,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 632,
															"name": "ElementaryTypeName",
															"src": "8737:7:0"
														}
													],
													"id": 633,
													"name": "VariableDeclaration",
													"src": "8737:17:0"
												}
											],
											"id": 634,
											"name": "ParameterList",
											"src": "8736:19:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 637,
											"name": "ParameterList",
											"src": "8773:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 635,
													"name": "Identifier",
													"src": "8763:9:0"
												}
											],
											"id": 636,
											"name": "ModifierInvocation",
											"src": "8763:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 638,
																			"name": "Identifier",
																			"src": "8784:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 633,
																				"type": "address",
																				"value": "_evilUser"
																			},
																			"id": 639,
																			"name": "Identifier",
																			"src": "8798:9:0"
																		}
																	],
																	"id": 640,
																	"name": "IndexAccess",
																	"src": "8784:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 641,
																	"name": "Literal",
																	"src": "8811:4:0"
																}
															],
															"id": 642,
															"name": "Assignment",
															"src": "8784:31:0"
														}
													],
													"id": 643,
													"name": "ExpressionStatement",
													"src": "8784:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 712,
																		"type": "function (address)",
																		"value": "AddedBlackList"
																	},
																	"id": 644,
																	"name": "Identifier",
																	"src": "8826:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 633,
																		"type": "address",
																		"value": "_evilUser"
																	},
																	"id": 645,
																	"name": "Identifier",
																	"src": "8841:9:0"
																}
															],
															"id": 646,
															"name": "FunctionCall",
															"src": "8826:25:0"
														}
													],
													"id": 647,
													"name": "ExpressionStatement",
													"src": "8826:25:0"
												}
											],
											"id": 648,
											"name": "Block",
											"src": "8773:86:0"
										}
									],
									"id": 649,
									"name": "FunctionDefinition",
									"src": "8714:145:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "removeBlackList",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_clearedUser",
														"scope": 667,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 650,
															"name": "ElementaryTypeName",
															"src": "8893:7:0"
														}
													],
													"id": 651,
													"name": "VariableDeclaration",
													"src": "8893:20:0"
												}
											],
											"id": 652,
											"name": "ParameterList",
											"src": "8892:22:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 655,
											"name": "ParameterList",
											"src": "8932:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 653,
													"name": "Identifier",
													"src": "8922:9:0"
												}
											],
											"id": 654,
											"name": "ModifierInvocation",
											"src": "8922:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 656,
																			"name": "Identifier",
																			"src": "8943:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 651,
																				"type": "address",
																				"value": "_clearedUser"
																			},
																			"id": 657,
																			"name": "Identifier",
																			"src": "8957:12:0"
																		}
																	],
																	"id": 658,
																	"name": "IndexAccess",
																	"src": "8943:27:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 659,
																	"name": "Literal",
																	"src": "8973:5:0"
																}
															],
															"id": 660,
															"name": "Assignment",
															"src": "8943:35:0"
														}
													],
													"id": 661,
													"name": "ExpressionStatement",
													"src": "8943:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 716,
																		"type": "function (address)",
																		"value": "RemovedBlackList"
																	},
																	"id": 662,
																	"name": "Identifier",
																	"src": "8989:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 651,
																		"type": "address",
																		"value": "_clearedUser"
																	},
																	"id": 663,
																	"name": "Identifier",
																	"src": "9006:12:0"
																}
															],
															"id": 664,
															"name": "FunctionCall",
															"src": "8989:30:0"
														}
													],
													"id": 665,
													"name": "ExpressionStatement",
													"src": "8989:30:0"
												}
											],
											"id": 666,
											"name": "Block",
											"src": "8932:95:0"
										}
									],
									"id": 667,
									"name": "FunctionDefinition",
									"src": "8867:160:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyBlackFunds",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_blackListedUser",
														"scope": 702,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 668,
															"name": "ElementaryTypeName",
															"src": "9063:7:0"
														}
													],
													"id": 669,
													"name": "VariableDeclaration",
													"src": "9063:24:0"
												}
											],
											"id": 670,
											"name": "ParameterList",
											"src": "9062:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 673,
											"name": "ParameterList",
											"src": "9106:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 671,
													"name": "Identifier",
													"src": "9096:9:0"
												}
											],
											"id": 672,
											"name": "ModifierInvocation",
											"src": "9096:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 674,
																	"name": "Identifier",
																	"src": "9117:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 675,
																			"name": "Identifier",
																			"src": "9125:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 676,
																			"name": "Identifier",
																			"src": "9139:16:0"
																		}
																	],
																	"id": 677,
																	"name": "IndexAccess",
																	"src": "9125:31:0"
																}
															],
															"id": 678,
															"name": "FunctionCall",
															"src": "9117:40:0"
														}
													],
													"id": 679,
													"name": "ExpressionStatement",
													"src": "9117:40:0"
												},
												{
													"attributes": {
														"assignments": [
															681
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "dirtyFunds",
																"scope": 702,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 680,
																	"name": "ElementaryTypeName",
																	"src": "9168:4:0"
																}
															],
															"id": 681,
															"name": "VariableDeclaration",
															"src": "9168:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			346
																		],
																		"referencedDeclaration": 346,
																		"type": "function (address) view returns (uint256)",
																		"value": "balanceOf"
																	},
																	"id": 682,
																	"name": "Identifier",
																	"src": "9186:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 683,
																	"name": "Identifier",
																	"src": "9196:16:0"
																}
															],
															"id": 684,
															"name": "FunctionCall",
															"src": "9186:27:0"
														}
													],
													"id": 685,
													"name": "VariableDeclarationStatement",
													"src": "9168:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 686,
																			"name": "Identifier",
																			"src": "9224:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 687,
																			"name": "Identifier",
																			"src": "9233:16:0"
																		}
																	],
																	"id": 688,
																	"name": "IndexAccess",
																	"src": "9224:26:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 689,
																	"name": "Literal",
																	"src": "9253:1:0"
																}
															],
															"id": 690,
															"name": "Assignment",
															"src": "9224:30:0"
														}
													],
													"id": 691,
													"name": "ExpressionStatement",
													"src": "9224:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 692,
																	"name": "Identifier",
																	"src": "9265:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 693,
																	"name": "Identifier",
																	"src": "9281:10:0"
																}
															],
															"id": 694,
															"name": "Assignment",
															"src": "9265:26:0"
														}
													],
													"id": 695,
													"name": "ExpressionStatement",
													"src": "9265:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 708,
																		"type": "function (address,uint256)",
																		"value": "DestroyedBlackFunds"
																	},
																	"id": 696,
																	"name": "Identifier",
																	"src": "9302:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 697,
																	"name": "Identifier",
																	"src": "9322:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 698,
																	"name": "Identifier",
																	"src": "9340:10:0"
																}
															],
															"id": 699,
															"name": "FunctionCall",
															"src": "9302:49:0"
														}
													],
													"id": 700,
													"name": "ExpressionStatement",
													"src": "9302:49:0"
												}
											],
											"id": 701,
											"name": "Block",
											"src": "9106:253:0"
										}
									],
									"id": 702,
									"name": "FunctionDefinition",
									"src": "9035:324:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "DestroyedBlackFunds"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_blackListedUser",
														"scope": 708,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 703,
															"name": "ElementaryTypeName",
															"src": "9393:7:0"
														}
													],
													"id": 704,
													"name": "VariableDeclaration",
													"src": "9393:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_balance",
														"scope": 708,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 705,
															"name": "ElementaryTypeName",
															"src": "9419:4:0"
														}
													],
													"id": 706,
													"name": "VariableDeclaration",
													"src": "9419:13:0"
												}
											],
											"id": 707,
											"name": "ParameterList",
											"src": "9392:41:0"
										}
									],
									"id": 708,
									"name": "EventDefinition",
									"src": "9367:67:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "AddedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 712,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 709,
															"name": "ElementaryTypeName",
															"src": "9463:7:0"
														}
													],
													"id": 710,
													"name": "VariableDeclaration",
													"src": "9463:13:0"
												}
											],
											"id": 711,
											"name": "ParameterList",
											"src": "9462:15:0"
										}
									],
									"id": 712,
									"name": "EventDefinition",
									"src": "9442:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "RemovedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 716,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 713,
															"name": "ElementaryTypeName",
															"src": "9509:7:0"
														}
													],
													"id": 714,
													"name": "VariableDeclaration",
													"src": "9509:13:0"
												}
											],
											"id": 715,
											"name": "ParameterList",
											"src": "9508:15:0"
										}
									],
									"id": 716,
									"name": "EventDefinition",
									"src": "9486:38:0"
								}
							],
							"id": 717,
							"name": "ContractDefinition",
							"src": "8257:1272:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									347,
									546,
									205,
									169
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									749,
									546,
									205,
									347,
									169,
									139
								],
								"name": "UpgradedStandardToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 718,
											"name": "UserDefinedTypeName",
											"src": "9567:13:0"
										}
									],
									"id": 719,
									"name": "InheritanceSpecifier",
									"src": "9567:13:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 720,
															"name": "ElementaryTypeName",
															"src": "9736:7:0"
														}
													],
													"id": 721,
													"name": "VariableDeclaration",
													"src": "9736:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 722,
															"name": "ElementaryTypeName",
															"src": "9750:7:0"
														}
													],
													"id": 723,
													"name": "VariableDeclaration",
													"src": "9750:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 724,
															"name": "ElementaryTypeName",
															"src": "9762:4:0"
														}
													],
													"id": 725,
													"name": "VariableDeclaration",
													"src": "9762:10:0"
												}
											],
											"id": 726,
											"name": "ParameterList",
											"src": "9735:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 727,
											"name": "ParameterList",
											"src": "9780:0:0"
										}
									],
									"id": 728,
									"name": "FunctionDefinition",
									"src": "9710:71:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFromByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "sender",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 729,
															"name": "ElementaryTypeName",
															"src": "9817:7:0"
														}
													],
													"id": 730,
													"name": "VariableDeclaration",
													"src": "9817:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 731,
															"name": "ElementaryTypeName",
															"src": "9833:7:0"
														}
													],
													"id": 732,
													"name": "VariableDeclaration",
													"src": "9833:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 733,
															"name": "ElementaryTypeName",
															"src": "9847:7:0"
														}
													],
													"id": 734,
													"name": "VariableDeclaration",
													"src": "9847:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 735,
															"name": "ElementaryTypeName",
															"src": "9864:4:0"
														}
													],
													"id": 736,
													"name": "VariableDeclaration",
													"src": "9864:10:0"
												}
											],
											"id": 737,
											"name": "ParameterList",
											"src": "9816:59:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 738,
											"name": "ParameterList",
											"src": "9882:0:0"
										}
									],
									"id": 739,
									"name": "FunctionDefinition",
									"src": "9787:96:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approveByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 740,
															"name": "ElementaryTypeName",
															"src": "9914:7:0"
														}
													],
													"id": 741,
													"name": "VariableDeclaration",
													"src": "9914:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 742,
															"name": "ElementaryTypeName",
															"src": "9928:7:0"
														}
													],
													"id": 743,
													"name": "VariableDeclaration",
													"src": "9928:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 744,
															"name": "ElementaryTypeName",
															"src": "9945:4:0"
														}
													],
													"id": 745,
													"name": "VariableDeclaration",
													"src": "9945:10:0"
												}
											],
											"id": 746,
											"name": "ParameterList",
											"src": "9913:43:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 747,
											"name": "ParameterList",
											"src": "9963:0:0"
										}
									],
									"id": 748,
									"name": "FunctionDefinition",
									"src": "9889:75:0"
								}
							],
							"id": 749,
							"name": "ContractDefinition",
							"src": "9533:434:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									717,
									139,
									347,
									546,
									603,
									205,
									169
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1142,
									717,
									546,
									205,
									347,
									169,
									603,
									139
								],
								"name": "TetherToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Pausable",
												"referencedDeclaration": 603,
												"type": "contract Pausable"
											},
											"id": 750,
											"name": "UserDefinedTypeName",
											"src": "9995:8:0"
										}
									],
									"id": 751,
									"name": "InheritanceSpecifier",
									"src": "9995:8:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 752,
											"name": "UserDefinedTypeName",
											"src": "10005:13:0"
										}
									],
									"id": 753,
									"name": "InheritanceSpecifier",
									"src": "10005:13:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BlackList",
												"referencedDeclaration": 717,
												"type": "contract BlackList"
											},
											"id": 754,
											"name": "UserDefinedTypeName",
											"src": "10020:9:0"
										}
									],
									"id": 755,
									"name": "InheritanceSpecifier",
									"src": "10020:9:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "name",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 756,
											"name": "ElementaryTypeName",
											"src": "10039:6:0"
										}
									],
									"id": 757,
									"name": "VariableDeclaration",
									"src": "10039:18:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "symbol",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 758,
											"name": "ElementaryTypeName",
											"src": "10064:6:0"
										}
									],
									"id": 759,
									"name": "VariableDeclaration",
									"src": "10064:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "decimals",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 760,
											"name": "ElementaryTypeName",
											"src": "10091:4:0"
										}
									],
									"id": 761,
									"name": "VariableDeclaration",
									"src": "10091:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "upgradedAddress",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 762,
											"name": "ElementaryTypeName",
											"src": "10118:7:0"
										}
									],
									"id": 763,
									"name": "VariableDeclaration",
									"src": "10118:30:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "deprecated",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 764,
											"name": "ElementaryTypeName",
											"src": "10155:4:0"
										}
									],
									"id": 765,
									"name": "VariableDeclaration",
									"src": "10155:22:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "TetherToken",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_initialSupply",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 766,
															"name": "ElementaryTypeName",
															"src": "10502:4:0"
														}
													],
													"id": 767,
													"name": "VariableDeclaration",
													"src": "10502:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_name",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 768,
															"name": "ElementaryTypeName",
															"src": "10523:6:0"
														}
													],
													"id": 769,
													"name": "VariableDeclaration",
													"src": "10523:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_symbol",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 770,
															"name": "ElementaryTypeName",
															"src": "10537:6:0"
														}
													],
													"id": 771,
													"name": "VariableDeclaration",
													"src": "10537:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_decimals",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 772,
															"name": "ElementaryTypeName",
															"src": "10553:4:0"
														}
													],
													"id": 773,
													"name": "VariableDeclaration",
													"src": "10553:14:0"
												}
											],
											"id": 774,
											"name": "ParameterList",
											"src": "10501:67:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 775,
											"name": "ParameterList",
											"src": "10576:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 776,
																	"name": "Identifier",
																	"src": "10587:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 777,
																	"name": "Identifier",
																	"src": "10602:14:0"
																}
															],
															"id": 778,
															"name": "Assignment",
															"src": "10587:29:0"
														}
													],
													"id": 779,
													"name": "ExpressionStatement",
													"src": "10587:29:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 757,
																		"type": "string storage ref",
																		"value": "name"
																	},
																	"id": 780,
																	"name": "Identifier",
																	"src": "10627:4:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 769,
																		"type": "string memory",
																		"value": "_name"
																	},
																	"id": 781,
																	"name": "Identifier",
																	"src": "10634:5:0"
																}
															],
															"id": 782,
															"name": "Assignment",
															"src": "10627:12:0"
														}
													],
													"id": 783,
													"name": "ExpressionStatement",
													"src": "10627:12:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 759,
																		"type": "string storage ref",
																		"value": "symbol"
																	},
																	"id": 784,
																	"name": "Identifier",
																	"src": "10650:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 771,
																		"type": "string memory",
																		"value": "_symbol"
																	},
																	"id": 785,
																	"name": "Identifier",
																	"src": "10659:7:0"
																}
															],
															"id": 786,
															"name": "Assignment",
															"src": "10650:16:0"
														}
													],
													"id": 787,
													"name": "ExpressionStatement",
													"src": "10650:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 761,
																		"type": "uint256",
																		"value": "decimals"
																	},
																	"id": 788,
																	"name": "Identifier",
																	"src": "10677:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 773,
																		"type": "uint256",
																		"value": "_decimals"
																	},
																	"id": 789,
																	"name": "Identifier",
																	"src": "10688:9:0"
																}
															],
															"id": 790,
															"name": "Assignment",
															"src": "10677:20:0"
														}
													],
													"id": 791,
													"name": "ExpressionStatement",
													"src": "10677:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 792,
																			"name": "Identifier",
																			"src": "10708:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 793,
																			"name": "Identifier",
																			"src": "10717:5:0"
																		}
																	],
																	"id": 794,
																	"name": "IndexAccess",
																	"src": "10708:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 795,
																	"name": "Identifier",
																	"src": "10726:14:0"
																}
															],
															"id": 796,
															"name": "Assignment",
															"src": "10708:32:0"
														}
													],
													"id": 797,
													"name": "ExpressionStatement",
													"src": "10708:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 765,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 798,
																	"name": "Identifier",
																	"src": "10751:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 799,
																	"name": "Literal",
																	"src": "10764:5:0"
																}
															],
															"id": 800,
															"name": "Assignment",
															"src": "10751:18:0"
														}
													],
													"id": 801,
													"name": "ExpressionStatement",
													"src": "10751:18:0"
												}
											],
											"id": 802,
											"name": "Block",
											"src": "10576:201:0"
										}
									],
									"id": 803,
									"name": "FunctionDefinition",
									"src": "10481:296:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 334,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 841,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 804,
															"name": "ElementaryTypeName",
															"src": "10880:7:0"
														}
													],
													"id": 805,
													"name": "VariableDeclaration",
													"src": "10880:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 841,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 806,
															"name": "ElementaryTypeName",
															"src": "10893:4:0"
														}
													],
													"id": 807,
													"name": "VariableDeclaration",
													"src": "10893:11:0"
												}
											],
											"id": 808,
											"name": "ParameterList",
											"src": "10879:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 811,
											"name": "ParameterList",
											"src": "10927:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 809,
													"name": "Identifier",
													"src": "10913:13:0"
												}
											],
											"id": 810,
											"name": "ModifierInvocation",
											"src": "10913:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 812,
																	"name": "Identifier",
																	"src": "10938:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 813,
																					"name": "Identifier",
																					"src": "10947:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1154,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 814,
																							"name": "Identifier",
																							"src": "10961:3:0"
																						}
																					],
																					"id": 815,
																					"name": "MemberAccess",
																					"src": "10961:10:0"
																				}
																			],
																			"id": 816,
																			"name": "IndexAccess",
																			"src": "10947:25:0"
																		}
																	],
																	"id": 817,
																	"name": "UnaryOperation",
																	"src": "10946:26:0"
																}
															],
															"id": 818,
															"name": "FunctionCall",
															"src": "10938:35:0"
														}
													],
													"id": 819,
													"name": "ExpressionStatement",
													"src": "10938:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 820,
															"name": "Identifier",
															"src": "10988:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 811
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferByLegacy",
																						"referencedDeclaration": 728,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 821,
																									"name": "Identifier",
																									"src": "11022:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 822,
																									"name": "Identifier",
																									"src": "11044:15:0"
																								}
																							],
																							"id": 823,
																							"name": "FunctionCall",
																							"src": "11022:38:0"
																						}
																					],
																					"id": 824,
																					"name": "MemberAccess",
																					"src": "11022:55:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1154,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 825,
																							"name": "Identifier",
																							"src": "11078:3:0"
																						}
																					],
																					"id": 826,
																					"name": "MemberAccess",
																					"src": "11078:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 805,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 827,
																					"name": "Identifier",
																					"src": "11090:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 807,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 828,
																					"name": "Identifier",
																					"src": "11095:6:0"
																				}
																			],
																			"id": 829,
																			"name": "FunctionCall",
																			"src": "11022:80:0"
																		}
																	],
																	"id": 830,
																	"name": "Return",
																	"src": "11015:87:0"
																}
															],
															"id": 831,
															"name": "Block",
															"src": "11000:114:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 811
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transfer",
																						"referencedDeclaration": 334,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 832,
																							"name": "Identifier",
																							"src": "11142:5:0"
																						}
																					],
																					"id": 833,
																					"name": "MemberAccess",
																					"src": "11142:14:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 805,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 834,
																					"name": "Identifier",
																					"src": "11157:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 807,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 835,
																					"name": "Identifier",
																					"src": "11162:6:0"
																				}
																			],
																			"id": 836,
																			"name": "FunctionCall",
																			"src": "11142:27:0"
																		}
																	],
																	"id": 837,
																	"name": "Return",
																	"src": "11135:34:0"
																}
															],
															"id": 838,
															"name": "Block",
															"src": "11120:61:0"
														}
													],
													"id": 839,
													"name": "IfStatement",
													"src": "10984:197:0"
												}
											],
											"id": 840,
											"name": "Block",
											"src": "10927:261:0"
										}
									],
									"id": 841,
									"name": "FunctionDefinition",
									"src": "10862:326:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 481,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 842,
															"name": "ElementaryTypeName",
															"src": "11295:7:0"
														}
													],
													"id": 843,
													"name": "VariableDeclaration",
													"src": "11295:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 844,
															"name": "ElementaryTypeName",
															"src": "11310:7:0"
														}
													],
													"id": 845,
													"name": "VariableDeclaration",
													"src": "11310:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 846,
															"name": "ElementaryTypeName",
															"src": "11323:4:0"
														}
													],
													"id": 847,
													"name": "VariableDeclaration",
													"src": "11323:11:0"
												}
											],
											"id": 848,
											"name": "ParameterList",
											"src": "11294:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 851,
											"name": "ParameterList",
											"src": "11357:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 849,
													"name": "Identifier",
													"src": "11343:13:0"
												}
											],
											"id": 850,
											"name": "ModifierInvocation",
											"src": "11343:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 852,
																	"name": "Identifier",
																	"src": "11368:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 853,
																					"name": "Identifier",
																					"src": "11377:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 854,
																					"name": "Identifier",
																					"src": "11391:5:0"
																				}
																			],
																			"id": 855,
																			"name": "IndexAccess",
																			"src": "11377:20:0"
																		}
																	],
																	"id": 856,
																	"name": "UnaryOperation",
																	"src": "11376:21:0"
																}
															],
															"id": 857,
															"name": "FunctionCall",
															"src": "11368:30:0"
														}
													],
													"id": 858,
													"name": "ExpressionStatement",
													"src": "11368:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 859,
															"name": "Identifier",
															"src": "11413:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 851
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFromByLegacy",
																						"referencedDeclaration": 739,
																						"type": "function (address,address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 860,
																									"name": "Identifier",
																									"src": "11447:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 861,
																									"name": "Identifier",
																									"src": "11469:15:0"
																								}
																							],
																							"id": 862,
																							"name": "FunctionCall",
																							"src": "11447:38:0"
																						}
																					],
																					"id": 863,
																					"name": "MemberAccess",
																					"src": "11447:59:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1154,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 864,
																							"name": "Identifier",
																							"src": "11507:3:0"
																						}
																					],
																					"id": 865,
																					"name": "MemberAccess",
																					"src": "11507:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 866,
																					"name": "Identifier",
																					"src": "11519:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 845,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 867,
																					"name": "Identifier",
																					"src": "11526:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 847,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 868,
																					"name": "Identifier",
																					"src": "11531:6:0"
																				}
																			],
																			"id": 869,
																			"name": "FunctionCall",
																			"src": "11447:91:0"
																		}
																	],
																	"id": 870,
																	"name": "Return",
																	"src": "11440:98:0"
																}
															],
															"id": 871,
															"name": "Block",
															"src": "11425:125:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 851
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFrom",
																						"referencedDeclaration": 481,
																						"type": "function (address,address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 872,
																							"name": "Identifier",
																							"src": "11578:5:0"
																						}
																					],
																					"id": 873,
																					"name": "MemberAccess",
																					"src": "11578:18:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 874,
																					"name": "Identifier",
																					"src": "11597:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 845,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 875,
																					"name": "Identifier",
																					"src": "11604:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 847,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 876,
																					"name": "Identifier",
																					"src": "11609:6:0"
																				}
																			],
																			"id": 877,
																			"name": "FunctionCall",
																			"src": "11578:38:0"
																		}
																	],
																	"id": 878,
																	"name": "Return",
																	"src": "11571:45:0"
																}
															],
															"id": 879,
															"name": "Block",
															"src": "11556:72:0"
														}
													],
													"id": 880,
													"name": "IfStatement",
													"src": "11409:219:0"
												}
											],
											"id": 881,
											"name": "Block",
											"src": "11357:278:0"
										}
									],
									"id": 882,
									"name": "FunctionDefinition",
									"src": "11273:362:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 346,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 883,
															"name": "ElementaryTypeName",
															"src": "11739:7:0"
														}
													],
													"id": 884,
													"name": "VariableDeclaration",
													"src": "11739:11:0"
												}
											],
											"id": 885,
											"name": "ParameterList",
											"src": "11738:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 886,
															"name": "ElementaryTypeName",
															"src": "11777:4:0"
														}
													],
													"id": 887,
													"name": "VariableDeclaration",
													"src": "11777:4:0"
												}
											],
											"id": 888,
											"name": "ParameterList",
											"src": "11776:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 889,
															"name": "Identifier",
															"src": "11798:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 888
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 890,
																									"name": "Identifier",
																									"src": "11832:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 891,
																									"name": "Identifier",
																									"src": "11854:15:0"
																								}
																							],
																							"id": 892,
																							"name": "FunctionCall",
																							"src": "11832:38:0"
																						}
																					],
																					"id": 893,
																					"name": "MemberAccess",
																					"src": "11832:48:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 884,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 894,
																					"name": "Identifier",
																					"src": "11881:3:0"
																				}
																			],
																			"id": 895,
																			"name": "FunctionCall",
																			"src": "11832:53:0"
																		}
																	],
																	"id": 896,
																	"name": "Return",
																	"src": "11825:60:0"
																}
															],
															"id": 897,
															"name": "Block",
															"src": "11810:87:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 888
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 898,
																							"name": "Identifier",
																							"src": "11925:5:0"
																						}
																					],
																					"id": 899,
																					"name": "MemberAccess",
																					"src": "11925:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 884,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 900,
																					"name": "Identifier",
																					"src": "11941:3:0"
																				}
																			],
																			"id": 901,
																			"name": "FunctionCall",
																			"src": "11925:20:0"
																		}
																	],
																	"id": 902,
																	"name": "Return",
																	"src": "11918:27:0"
																}
															],
															"id": 903,
															"name": "Block",
															"src": "11903:54:0"
														}
													],
													"id": 904,
													"name": "IfStatement",
													"src": "11794:163:0"
												}
											],
											"id": 905,
											"name": "Block",
											"src": "11783:181:0"
										}
									],
									"id": 906,
									"name": "FunctionDefinition",
									"src": "11720:244:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 529,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 939,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 907,
															"name": "ElementaryTypeName",
															"src": "12066:7:0"
														}
													],
													"id": 908,
													"name": "VariableDeclaration",
													"src": "12066:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 939,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 909,
															"name": "ElementaryTypeName",
															"src": "12084:4:0"
														}
													],
													"id": 910,
													"name": "VariableDeclaration",
													"src": "12084:11:0"
												}
											],
											"id": 911,
											"name": "ParameterList",
											"src": "12065:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 917,
											"name": "ParameterList",
											"src": "12128:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 912,
													"name": "Identifier",
													"src": "12104:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 913,
															"name": "Literal",
															"src": "12120:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 914,
															"name": "Literal",
															"src": "12124:2:0"
														}
													],
													"id": 915,
													"name": "BinaryOperation",
													"src": "12120:6:0"
												}
											],
											"id": 916,
											"name": "ModifierInvocation",
											"src": "12104:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 918,
															"name": "Identifier",
															"src": "12143:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 917
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approveByLegacy",
																						"referencedDeclaration": 748,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 919,
																									"name": "Identifier",
																									"src": "12177:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 920,
																									"name": "Identifier",
																									"src": "12199:15:0"
																								}
																							],
																							"id": 921,
																							"name": "FunctionCall",
																							"src": "12177:38:0"
																						}
																					],
																					"id": 922,
																					"name": "MemberAccess",
																					"src": "12177:54:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1154,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 923,
																							"name": "Identifier",
																							"src": "12232:3:0"
																						}
																					],
																					"id": 924,
																					"name": "MemberAccess",
																					"src": "12232:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 908,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 925,
																					"name": "Identifier",
																					"src": "12244:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 910,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 926,
																					"name": "Identifier",
																					"src": "12254:6:0"
																				}
																			],
																			"id": 927,
																			"name": "FunctionCall",
																			"src": "12177:84:0"
																		}
																	],
																	"id": 928,
																	"name": "Return",
																	"src": "12170:91:0"
																}
															],
															"id": 929,
															"name": "Block",
															"src": "12155:118:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 917
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approve",
																						"referencedDeclaration": 529,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 930,
																							"name": "Identifier",
																							"src": "12301:5:0"
																						}
																					],
																					"id": 931,
																					"name": "MemberAccess",
																					"src": "12301:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 908,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 932,
																					"name": "Identifier",
																					"src": "12315:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 910,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 933,
																					"name": "Identifier",
																					"src": "12325:6:0"
																				}
																			],
																			"id": 934,
																			"name": "FunctionCall",
																			"src": "12301:31:0"
																		}
																	],
																	"id": 935,
																	"name": "Return",
																	"src": "12294:38:0"
																}
															],
															"id": 936,
															"name": "Block",
															"src": "12279:65:0"
														}
													],
													"id": 937,
													"name": "IfStatement",
													"src": "12139:205:0"
												}
											],
											"id": 938,
											"name": "Block",
											"src": "12128:223:0"
										}
									],
									"id": 939,
									"name": "FunctionDefinition",
									"src": "12049:302:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 545,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 940,
															"name": "ElementaryTypeName",
															"src": "12455:7:0"
														}
													],
													"id": 941,
													"name": "VariableDeclaration",
													"src": "12455:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 942,
															"name": "ElementaryTypeName",
															"src": "12471:7:0"
														}
													],
													"id": 943,
													"name": "VariableDeclaration",
													"src": "12471:16:0"
												}
											],
											"id": 944,
											"name": "ParameterList",
											"src": "12454:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 945,
															"name": "ElementaryTypeName",
															"src": "12514:4:0"
														}
													],
													"id": 946,
													"name": "VariableDeclaration",
													"src": "12514:14:0"
												}
											],
											"id": 947,
											"name": "ParameterList",
											"src": "12513:16:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 948,
															"name": "Identifier",
															"src": "12545:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 947
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 949,
																									"name": "Identifier",
																									"src": "12579:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 950,
																									"name": "Identifier",
																									"src": "12593:15:0"
																								}
																							],
																							"id": 951,
																							"name": "FunctionCall",
																							"src": "12579:30:0"
																						}
																					],
																					"id": 952,
																					"name": "MemberAccess",
																					"src": "12579:40:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 941,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 953,
																					"name": "Identifier",
																					"src": "12620:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 943,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 954,
																					"name": "Identifier",
																					"src": "12628:8:0"
																				}
																			],
																			"id": 955,
																			"name": "FunctionCall",
																			"src": "12579:58:0"
																		}
																	],
																	"id": 956,
																	"name": "Return",
																	"src": "12572:65:0"
																}
															],
															"id": 957,
															"name": "Block",
															"src": "12557:92:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 947
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 958,
																							"name": "Identifier",
																							"src": "12677:5:0"
																						}
																					],
																					"id": 959,
																					"name": "MemberAccess",
																					"src": "12677:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 941,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 960,
																					"name": "Identifier",
																					"src": "12693:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 943,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 961,
																					"name": "Identifier",
																					"src": "12701:8:0"
																				}
																			],
																			"id": 962,
																			"name": "FunctionCall",
																			"src": "12677:33:0"
																		}
																	],
																	"id": 963,
																	"name": "Return",
																	"src": "12670:40:0"
																}
															],
															"id": 964,
															"name": "Block",
															"src": "12655:67:0"
														}
													],
													"id": 965,
													"name": "IfStatement",
													"src": "12541:181:0"
												}
											],
											"id": 966,
											"name": "Block",
											"src": "12530:199:0"
										}
									],
									"id": 967,
									"name": "FunctionDefinition",
									"src": "12436:293:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "deprecate",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_upgradedAddress",
														"scope": 987,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 968,
															"name": "ElementaryTypeName",
															"src": "12814:7:0"
														}
													],
													"id": 969,
													"name": "VariableDeclaration",
													"src": "12814:24:0"
												}
											],
											"id": 970,
											"name": "ParameterList",
											"src": "12813:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 973,
											"name": "ParameterList",
											"src": "12857:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 971,
													"name": "Identifier",
													"src": "12847:9:0"
												}
											],
											"id": 972,
											"name": "ModifierInvocation",
											"src": "12847:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 765,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 974,
																	"name": "Identifier",
																	"src": "12868:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 975,
																	"name": "Literal",
																	"src": "12881:4:0"
																}
															],
															"id": 976,
															"name": "Assignment",
															"src": "12868:17:0"
														}
													],
													"id": 977,
													"name": "ExpressionStatement",
													"src": "12868:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 763,
																		"type": "address",
																		"value": "upgradedAddress"
																	},
																	"id": 978,
																	"name": "Identifier",
																	"src": "12896:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 969,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 979,
																	"name": "Identifier",
																	"src": "12914:16:0"
																}
															],
															"id": 980,
															"name": "Assignment",
															"src": "12896:34:0"
														}
													],
													"id": 981,
													"name": "ExpressionStatement",
													"src": "12896:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1135,
																		"type": "function (address)",
																		"value": "Deprecate"
																	},
																	"id": 982,
																	"name": "Identifier",
																	"src": "12941:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 969,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 983,
																	"name": "Identifier",
																	"src": "12951:16:0"
																}
															],
															"id": 984,
															"name": "FunctionCall",
															"src": "12941:27:0"
														}
													],
													"id": 985,
													"name": "ExpressionStatement",
													"src": "12941:27:0"
												}
											],
											"id": 986,
											"name": "Block",
											"src": "12857:119:0"
										}
									],
									"id": 987,
									"name": "FunctionDefinition",
									"src": "12795:181:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 146,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 988,
											"name": "ParameterList",
											"src": "13062:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1005,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 989,
															"name": "ElementaryTypeName",
															"src": "13090:4:0"
														}
													],
													"id": 990,
													"name": "VariableDeclaration",
													"src": "13090:4:0"
												}
											],
											"id": 991,
											"name": "ParameterList",
											"src": "13089:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 992,
															"name": "Identifier",
															"src": "13111:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 991
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "totalSupply",
																						"referencedDeclaration": 146,
																						"type": "function () view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 993,
																									"name": "Identifier",
																									"src": "13145:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 994,
																									"name": "Identifier",
																									"src": "13159:15:0"
																								}
																							],
																							"id": 995,
																							"name": "FunctionCall",
																							"src": "13145:30:0"
																						}
																					],
																					"id": 996,
																					"name": "MemberAccess",
																					"src": "13145:42:0"
																				}
																			],
																			"id": 997,
																			"name": "FunctionCall",
																			"src": "13145:44:0"
																		}
																	],
																	"id": 998,
																	"name": "Return",
																	"src": "13138:51:0"
																}
															],
															"id": 999,
															"name": "Block",
															"src": "13123:78:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 991
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1000,
																			"name": "Identifier",
																			"src": "13229:12:0"
																		}
																	],
																	"id": 1001,
																	"name": "Return",
																	"src": "13222:19:0"
																}
															],
															"id": 1002,
															"name": "Block",
															"src": "13207:46:0"
														}
													],
													"id": 1003,
													"name": "IfStatement",
													"src": "13107:146:0"
												}
											],
											"id": 1004,
											"name": "Block",
											"src": "13096:164:0"
										}
									],
									"id": 1005,
									"name": "FunctionDefinition",
									"src": "13042:218:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "issue",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1047,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1006,
															"name": "ElementaryTypeName",
															"src": "13439:4:0"
														}
													],
													"id": 1007,
													"name": "VariableDeclaration",
													"src": "13439:11:0"
												}
											],
											"id": 1008,
											"name": "ParameterList",
											"src": "13438:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1011,
											"name": "ParameterList",
											"src": "13469:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1009,
													"name": "Identifier",
													"src": "13459:9:0"
												}
											],
											"id": 1010,
											"name": "ModifierInvocation",
											"src": "13459:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1012,
																	"name": "Identifier",
																	"src": "13480:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 141,
																						"type": "uint256",
																						"value": "_totalSupply"
																					},
																					"id": 1013,
																					"name": "Identifier",
																					"src": "13488:12:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1007,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1014,
																					"name": "Identifier",
																					"src": "13503:6:0"
																				}
																			],
																			"id": 1015,
																			"name": "BinaryOperation",
																			"src": "13488:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1016,
																			"name": "Identifier",
																			"src": "13512:12:0"
																		}
																	],
																	"id": 1017,
																	"name": "BinaryOperation",
																	"src": "13488:36:0"
																}
															],
															"id": 1018,
															"name": "FunctionCall",
															"src": "13480:45:0"
														}
													],
													"id": 1019,
													"name": "ExpressionStatement",
													"src": "13480:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1020,
																	"name": "Identifier",
																	"src": "13536:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1021,
																							"name": "Identifier",
																							"src": "13544:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 1022,
																							"name": "Identifier",
																							"src": "13553:5:0"
																						}
																					],
																					"id": 1023,
																					"name": "IndexAccess",
																					"src": "13544:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1007,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1024,
																					"name": "Identifier",
																					"src": "13562:6:0"
																				}
																			],
																			"id": 1025,
																			"name": "BinaryOperation",
																			"src": "13544:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1026,
																					"name": "Identifier",
																					"src": "13571:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1027,
																					"name": "Identifier",
																					"src": "13580:5:0"
																				}
																			],
																			"id": 1028,
																			"name": "IndexAccess",
																			"src": "13571:15:0"
																		}
																	],
																	"id": 1029,
																	"name": "BinaryOperation",
																	"src": "13544:42:0"
																}
															],
															"id": 1030,
															"name": "FunctionCall",
															"src": "13536:51:0"
														}
													],
													"id": 1031,
													"name": "ExpressionStatement",
													"src": "13536:51:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1032,
																			"name": "Identifier",
																			"src": "13600:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1033,
																			"name": "Identifier",
																			"src": "13609:5:0"
																		}
																	],
																	"id": 1034,
																	"name": "IndexAccess",
																	"src": "13600:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1035,
																	"name": "Identifier",
																	"src": "13619:6:0"
																}
															],
															"id": 1036,
															"name": "Assignment",
															"src": "13600:25:0"
														}
													],
													"id": 1037,
													"name": "ExpressionStatement",
													"src": "13600:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1038,
																	"name": "Identifier",
																	"src": "13636:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1039,
																	"name": "Identifier",
																	"src": "13652:6:0"
																}
															],
															"id": 1040,
															"name": "Assignment",
															"src": "13636:22:0"
														}
													],
													"id": 1041,
													"name": "ExpressionStatement",
													"src": "13636:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1127,
																		"type": "function (uint256)",
																		"value": "Issue"
																	},
																	"id": 1042,
																	"name": "Identifier",
																	"src": "13669:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1043,
																	"name": "Identifier",
																	"src": "13675:6:0"
																}
															],
															"id": 1044,
															"name": "FunctionCall",
															"src": "13669:13:0"
														}
													],
													"id": 1045,
													"name": "ExpressionStatement",
													"src": "13669:13:0"
												}
											],
											"id": 1046,
											"name": "Block",
											"src": "13469:221:0"
										}
									],
									"id": 1047,
									"name": "FunctionDefinition",
									"src": "13424:266:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "redeem",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1083,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1048,
															"name": "ElementaryTypeName",
															"src": "13937:4:0"
														}
													],
													"id": 1049,
													"name": "VariableDeclaration",
													"src": "13937:11:0"
												}
											],
											"id": 1050,
											"name": "ParameterList",
											"src": "13936:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1053,
											"name": "ParameterList",
											"src": "13967:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1051,
													"name": "Identifier",
													"src": "13957:9:0"
												}
											],
											"id": 1052,
											"name": "ModifierInvocation",
											"src": "13957:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1054,
																	"name": "Identifier",
																	"src": "13978:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1055,
																			"name": "Identifier",
																			"src": "13986:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1049,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1056,
																			"name": "Identifier",
																			"src": "14002:6:0"
																		}
																	],
																	"id": 1057,
																	"name": "BinaryOperation",
																	"src": "13986:22:0"
																}
															],
															"id": 1058,
															"name": "FunctionCall",
															"src": "13978:31:0"
														}
													],
													"id": 1059,
													"name": "ExpressionStatement",
													"src": "13978:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1060,
																	"name": "Identifier",
																	"src": "14020:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1061,
																					"name": "Identifier",
																					"src": "14028:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1062,
																					"name": "Identifier",
																					"src": "14037:5:0"
																				}
																			],
																			"id": 1063,
																			"name": "IndexAccess",
																			"src": "14028:15:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1049,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1064,
																			"name": "Identifier",
																			"src": "14047:6:0"
																		}
																	],
																	"id": 1065,
																	"name": "BinaryOperation",
																	"src": "14028:25:0"
																}
															],
															"id": 1066,
															"name": "FunctionCall",
															"src": "14020:34:0"
														}
													],
													"id": 1067,
													"name": "ExpressionStatement",
													"src": "14020:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1068,
																	"name": "Identifier",
																	"src": "14067:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1069,
																	"name": "Identifier",
																	"src": "14083:6:0"
																}
															],
															"id": 1070,
															"name": "Assignment",
															"src": "14067:22:0"
														}
													],
													"id": 1071,
													"name": "ExpressionStatement",
													"src": "14067:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1072,
																			"name": "Identifier",
																			"src": "14100:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1073,
																			"name": "Identifier",
																			"src": "14109:5:0"
																		}
																	],
																	"id": 1074,
																	"name": "IndexAccess",
																	"src": "14100:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1075,
																	"name": "Identifier",
																	"src": "14119:6:0"
																}
															],
															"id": 1076,
															"name": "Assignment",
															"src": "14100:25:0"
														}
													],
													"id": 1077,
													"name": "ExpressionStatement",
													"src": "14100:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1131,
																		"type": "function (uint256)",
																		"value": "Redeem"
																	},
																	"id": 1078,
																	"name": "Identifier",
																	"src": "14136:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1079,
																	"name": "Identifier",
																	"src": "14143:6:0"
																}
															],
															"id": 1080,
															"name": "FunctionCall",
															"src": "14136:14:0"
														}
													],
													"id": 1081,
													"name": "ExpressionStatement",
													"src": "14136:14:0"
												}
											],
											"id": 1082,
											"name": "Block",
											"src": "13967:191:0"
										}
									],
									"id": 1083,
									"name": "FunctionDefinition",
									"src": "13921:237:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setParams",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newBasisPoints",
														"scope": 1123,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1084,
															"name": "ElementaryTypeName",
															"src": "14185:4:0"
														}
													],
													"id": 1085,
													"name": "VariableDeclaration",
													"src": "14185:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "newMaxFee",
														"scope": 1123,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1086,
															"name": "ElementaryTypeName",
															"src": "14206:4:0"
														}
													],
													"id": 1087,
													"name": "VariableDeclaration",
													"src": "14206:14:0"
												}
											],
											"id": 1088,
											"name": "ParameterList",
											"src": "14184:37:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1091,
											"name": "ParameterList",
											"src": "14239:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1089,
													"name": "Identifier",
													"src": "14229:9:0"
												}
											],
											"id": 1090,
											"name": "ModifierInvocation",
											"src": "14229:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1092,
																	"name": "Identifier",
																	"src": "14339:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1085,
																				"type": "uint256",
																				"value": "newBasisPoints"
																			},
																			"id": 1093,
																			"name": "Identifier",
																			"src": "14347:14:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3230",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 20",
																				"value": "20"
																			},
																			"id": 1094,
																			"name": "Literal",
																			"src": "14364:2:0"
																		}
																	],
																	"id": 1095,
																	"name": "BinaryOperation",
																	"src": "14347:19:0"
																}
															],
															"id": 1096,
															"name": "FunctionCall",
															"src": "14339:28:0"
														}
													],
													"id": 1097,
													"name": "ExpressionStatement",
													"src": "14339:28:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1157,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1098,
																	"name": "Identifier",
																	"src": "14378:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1087,
																				"type": "uint256",
																				"value": "newMaxFee"
																			},
																			"id": 1099,
																			"name": "Identifier",
																			"src": "14386:9:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3530",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 50",
																				"value": "50"
																			},
																			"id": 1100,
																			"name": "Literal",
																			"src": "14398:2:0"
																		}
																	],
																	"id": 1101,
																	"name": "BinaryOperation",
																	"src": "14386:14:0"
																}
															],
															"id": 1102,
															"name": "FunctionCall",
															"src": "14378:23:0"
														}
													],
													"id": 1103,
													"name": "ExpressionStatement",
													"src": "14378:23:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1104,
																	"name": "Identifier",
																	"src": "14414:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1085,
																		"type": "uint256",
																		"value": "newBasisPoints"
																	},
																	"id": 1105,
																	"name": "Identifier",
																	"src": "14432:14:0"
																}
															],
															"id": 1106,
															"name": "Assignment",
															"src": "14414:32:0"
														}
													],
													"id": 1107,
													"name": "ExpressionStatement",
													"src": "14414:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1108,
																	"name": "Identifier",
																	"src": "14457:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "mul",
																				"referencedDeclaration": 34,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1087,
																						"type": "uint256",
																						"value": "newMaxFee"
																					},
																					"id": 1109,
																					"name": "Identifier",
																					"src": "14470:9:0"
																				}
																			],
																			"id": 1110,
																			"name": "MemberAccess",
																			"src": "14470:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 1111,
																					"name": "Literal",
																					"src": "14484:2:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 761,
																						"type": "uint256",
																						"value": "decimals"
																					},
																					"id": 1112,
																					"name": "Identifier",
																					"src": "14488:8:0"
																				}
																			],
																			"id": 1113,
																			"name": "BinaryOperation",
																			"src": "14484:12:0"
																		}
																	],
																	"id": 1114,
																	"name": "FunctionCall",
																	"src": "14470:27:0"
																}
															],
															"id": 1115,
															"name": "Assignment",
															"src": "14457:40:0"
														}
													],
													"id": 1116,
													"name": "ExpressionStatement",
													"src": "14457:40:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1141,
																		"type": "function (uint256,uint256)",
																		"value": "Params"
																	},
																	"id": 1117,
																	"name": "Identifier",
																	"src": "14510:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1118,
																	"name": "Identifier",
																	"src": "14517:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1119,
																	"name": "Identifier",
																	"src": "14534:10:0"
																}
															],
															"id": 1120,
															"name": "FunctionCall",
															"src": "14510:35:0"
														}
													],
													"id": 1121,
													"name": "ExpressionStatement",
													"src": "14510:35:0"
												}
											],
											"id": 1122,
											"name": "Block",
											"src": "14239:314:0"
										}
									],
									"id": 1123,
									"name": "FunctionDefinition",
									"src": "14166:387:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Issue"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1127,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1124,
															"name": "ElementaryTypeName",
															"src": "14614:4:0"
														}
													],
													"id": 1125,
													"name": "VariableDeclaration",
													"src": "14614:11:0"
												}
											],
											"id": 1126,
											"name": "ParameterList",
											"src": "14613:13:0"
										}
									],
									"id": 1127,
									"name": "EventDefinition",
									"src": "14602:25:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Redeem"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1131,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1128,
															"name": "ElementaryTypeName",
															"src": "14688:4:0"
														}
													],
													"id": 1129,
													"name": "VariableDeclaration",
													"src": "14688:11:0"
												}
											],
											"id": 1130,
											"name": "ParameterList",
											"src": "14687:13:0"
										}
									],
									"id": 1131,
									"name": "EventDefinition",
									"src": "14675:26:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Deprecate"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "newAddress",
														"scope": 1135,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1132,
															"name": "ElementaryTypeName",
															"src": "14768:7:0"
														}
													],
													"id": 1133,
													"name": "VariableDeclaration",
													"src": "14768:18:0"
												}
											],
											"id": 1134,
											"name": "ParameterList",
											"src": "14767:20:0"
										}
									],
									"id": 1135,
									"name": "EventDefinition",
									"src": "14752:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Params"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "feeBasisPoints",
														"scope": 1141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1136,
															"name": "ElementaryTypeName",
															"src": "14851:4:0"
														}
													],
													"id": 1137,
													"name": "VariableDeclaration",
													"src": "14851:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "maxFee",
														"scope": 1141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1138,
															"name": "ElementaryTypeName",
															"src": "14872:4:0"
														}
													],
													"id": 1139,
													"name": "VariableDeclaration",
													"src": "14872:11:0"
												}
											],
											"id": 1140,
											"name": "ParameterList",
											"src": "14850:34:0"
										}
									],
									"id": 1141,
									"name": "EventDefinition",
									"src": "14838:47:0"
								}
							],
							"id": 1142,
							"name": "ContractDefinition",
							"src": "9971:4917:0"
						}
					],
					"id": 1143,
					"name": "SourceUnit",
					"src": "0:14888:0"
				}
			}
		}
	}
}